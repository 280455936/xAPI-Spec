diff --git a/.gitignore b/.gitignore
index fb0a696..fec3704 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,4 @@
 ~$*
 *.html
 .DS_Store
+*.swp
diff --git a/xAPI-About.md b/xAPI-About.md
index 5cabed4..d92692d 100644
--- a/xAPI-About.md
+++ b/xAPI-About.md
@@ -34,72 +34,72 @@
 		*	[Appendix A: Revision History](./xAPI-About.md#Appendix1A)  
 		*	[Appendix B: cmi5 Example](./xAPI-About.md#Appendix1B)  
 *	Part Two:	[Experience API (xAPI) Data](./xAPI-Data.md#parttwo)  
-	*	1.0.	[Documents](./xAPI-Data.md#documents) 
-	*	2.0.	[Statements](./xAPI-Data.md#statements)  
-		*	2.1.	[Purpose](./xAPI-Data.md#statement-purpose)  
-	 	*	2.2.	[Formatting Requirements](./xAPI-Data.md#dataconstraints) 
-	 	*	2.3.	[Statement Lifecycle](./xAPI-Data.md#lifecycle) 
-		 	*	2.3.1.	[Statement Immutability](./xAPI-Data.md#statement-immutablity-and-exceptions) 
-		 	*	2.3.2.	[Voiding](./xAPI-Data.md#voided) 
-   		*	2.4.	[Statement Properties](./xAPI-Data.md#statement-properties)  
-	        *	2.4.1.	[ID](./xAPI-Data.md#stmtid)  
-	        *	2.4.2.	[Actor](./xAPI-Data.md#actor)  
-	        *	2.4.3.	[Verb](./xAPI-Data.md#verb)  
-	        *	2.4.4.	[Object](./xAPI-Data.md#object)  
-	        *	2.4.5.	[Result](./xAPI-Data.md#result)  
-	        *	2.4.6.	[Context](./xAPI-Data.md#context)  
-	        *	2.4.7.	[Timestamp](./xAPI-Data.md#timestamp)  
-	        *	2.4.8.	[Stored](./xAPI-Data.md#stored)  
-	        *	2.4.9.	[Authority](./xAPI-Data.md#authority)  
-	        *	2.4.10.	[Version](./xAPI-Data.md#version)  
-	        *	2.4.11.	[Attachments](./xAPI-Data.md#attachments)  
-    	*	2.5.	[Retrieval of Statements](./xAPI-Data.md#retrieval)   
-    	*	2.6.	[Signed Statements](./xAPI-Data.md#signature)  
-	*	3.0.	[Metadata](./xAPI-Data.md#metadata)
-		*	3.1.	[IRI Requirements](./xAPI-Data.md#iri-requirements)  
-		*	3.2.	[Hosted Metadata](./xAPI-Data.md#miscmeta)  
-    *	4.0.	[Special Data Types and Rules](./xAPI-Data.md#special-data)  
-		*	4.1.	[Extensions](./xAPI-Data.md#miscext) 
-		*	4.2.	[Language Maps](./xAPI-Data.md#lang-maps)
-		*	4.3.	[IRIs](./xAPI-Data.md#iris)
-		*	4.4.	[UUIDs](./xAPI-Data.md#uuids)
-		*	4.5.	[ISO 8601 Timestamps](./xAPI-Data.md#timestamps)
-		*	4.6.	[ISO 8601 Durations](./xAPI-Data.md#durations)
+	*	1.0.	[Documents](./xAPI-Data.md#1.0) 
+	*	2.0.	[Statements](./xAPI-Data.md#2.0)  
+		*	2.1.	[Purpose](./xAPI-Data.md#2.1)  
+	 	*	2.2.	[Formatting Requirements](./xAPI-Data.md#2.2) 
+	 	*	2.3.	[Statement Lifecycle](./xAPI-Data.md#2.3) 
+		 	*	2.3.1.	[Statement Immutability](./xAPI-Data.md#2.3.1) 
+		 	*	2.3.2.	[Voiding](./xAPI-Data.md#2.3.2) 
+   		*	2.4.	[Statement Properties](./xAPI-Data.md#2.4)  
+	        *	2.4.1.	[ID](./xAPI-Data.md#2.4.1)  
+	        *	2.4.2.	[Actor](./xAPI-Data.md#2.4.2)  
+	        *	2.4.3.	[Verb](./xAPI-Data.md#2.4.3)  
+	        *	2.4.4.	[Object](./xAPI-Data.md#2.4.4)  
+	        *	2.4.5.	[Result](./xAPI-Data.md#2.4.5)  
+	        *	2.4.6.	[Context](./xAPI-Data.md#2.4.6)  
+	        *	2.4.7.	[Timestamp](./xAPI-Data.md#2.4.7)  
+	        *	2.4.8.	[Stored](./xAPI-Data.md#2.4.8)  
+	        *	2.4.9.	[Authority](./xAPI-Data.md#2.4.9)  
+	        *	2.4.10.	[Version](./xAPI-Data.md#2.4.10)  
+	        *	2.4.11.	[Attachments](./xAPI-Data.md#2.4.11)  
+    	*	2.5.	[Retrieval of Statements](./xAPI-Data.md#2.5)   
+    	*	2.6.	[Signed Statements](./xAPI-Data.md#2.6)  
+	*	3.0.	[Metadata](./xAPI-Data.md#3.0)
+		*	3.1.	[IRI Requirements](./xAPI-Data.md#3.1)  
+		*	3.2.	[Hosted Metadata](./xAPI-Data.md#3.2)  
+    *	4.0.	[Special Data Types and Rules](./xAPI-Data.md#4.0)  
+		*	4.1.	[Extensions](./xAPI-Data.md#4.1) 
+		*	4.2.	[Language Maps](./xAPI-Data.md#4.2)
+		*	4.3.	[IRIs](./xAPI-Data.md#4.3)
+		*	4.4.	[UUIDs](./xAPI-Data.md#4.4)
+		*	4.5.	[ISO 8601 Timestamps](./xAPI-Data.md#4.5)
+		*	4.6.	[ISO 8601 Durations](./xAPI-Data.md#4.6)
 	*	[Appendices](./xAPI-Data.md#append2)  
-		*	[Appendix A: Example Statements](./xAPI-Data.md#Appendix2A)  
-		*	[Appendix B: Example statement objects of different types](./xAPI-Data.md#Appendix2B)  
-		*	[Appendix C: Example definitions for Activities of type "cmi.interaction"](./xAPI-Data.md#Appendix2C)  	
-		*	[Appendix D: Example Signed Statement](./xAPI-Data.md#Appendix2D)  
+		*	[Appendix A: Example Statements](./xAPI-Data.md#A)  
+		*	[Appendix B: Example statement objects of different types](./xAPI-Data.md#B)  
+		*	[Appendix C: Example definitions for Activities of type "cmi.interaction"](./xAPI-Data.md#C)  	
+		*	[Appendix D: Example Signed Statement](./xAPI-Data.md#D)  
 *	Part Three:	[Data Processing, Validation, and Security](./xAPI-Communication.md#partthree)  
-	*	1.0.	[Requests](./xAPI-Communication.md#requests)
-		*	1.1.	[HEAD Request Implementation](./xAPI-Communication.md#httphead)  
-	 	*	1.2.	[Headers](./xAPI-Communication.md#header-parameters) 
-	 	*	1.3.	[Alternate Request Syntax](./xAPI-Communication.md#alt-request-syntax) 
-	 	*	1.4.	[Encoding](./xAPI-Communication.md#encoding) 
-	 	*	1.5.	[Content Types](./xAPI-Communication.md#content-types) 
-	        *	1.5.1.	[Application/JSON](./xAPI-Communication.md#applicationjson) 
-	        *	1.5.1.	[Multipart/Mixed](./xAPI-Communication.md#multipartmixed)
-	*	2.0.	[Resources](./xAPI-Communication.md#datatransfer)   
-	 	*	2.1.	[Statement Resource](./xAPI-Communication.md#stmtres) 
-	 	*	2.2.	[Documents Resources](./xAPI-Communication.md#doctransfer) 
-	 	*	2.3.	[State Resource](./xAPI-Communication.md#stateres) 
-	 	*	2.4.	[Agents Resource](./xAPI-Communication.md#agentsres) 
-	 	*	2.5.	[Activities Resource](./xAPI-Communication.md#activitiesres) 
-	 	*	2.6.	[Agent Profile Resource](./xAPI-Communication.md#agentprofres) 
-	 	*	2.7.	[Activity Profile Resource](./xAPI-Communication.md#actprofres) 
-	 	*	2.8.	[About Resource](./xAPI-Communication.md#aboutresource) 
-   	*	3.0.	[Data Validation](./xAPI-Communication.md#validation)     
-    	*	3.1.	[Concurrency](./xAPI-Communication.md#concurrency)  
-    	*	3.2.	[Error Codes](./xAPI-Communication.md#errorcodes)
-    	*	3.3     [Versioning](./xAPI-Communication.md#versioning)  
-    *	4.0.	[Authentication](./xAPI-Communication.md#authentication)  
-		*	4.1.	[OAuth 1.0 Authentication Scenarios and Methods](./xAPI-Communication.md#authdefs) 
-		*	4.2.	[OAuth 1.0 Authorization Scope](./xAPI-Communication.md#oauthscope)
-    *	5.0	[Security](./xAPI-Communication.md#security)
+	*	1.0.	[Requests](./xAPI-Communication.md#1.0)
+		*	1.1.	[HEAD Request Implementation](./xAPI-Communication.md#1.1)  
+	 	*	1.2.	[Headers](./xAPI-Communication.md#1.2) 
+	 	*	1.3.	[Alternate Request Syntax](./xAPI-Communication.md#1.3) 
+	 	*	1.4.	[Encoding](./xAPI-Communication.md#1.4) 
+	 	*	1.5.	[Content Types](./xAPI-Communication.md#1.5) 
+	        *	1.5.1.	[Application/JSON](./xAPI-Communication.md#1.5.1) 
+	        *	1.5.2.	[Multipart/Mixed](./xAPI-Communication.md#1.5.2)
+	*	2.0.	[Resources](./xAPI-Communication.md#2.0)   
+	 	*	2.1.	[Statement Resource](./xAPI-Communication.md#2.1) 
+	 	*	2.2.	[Documents Resources](./xAPI-Communication.md#2.2) 
+	 	*	2.3.	[State Resource](./xAPI-Communication.md#2.3) 
+	 	*	2.4.	[Agents Resource](./xAPI-Communication.md#2.4) 
+	 	*	2.5.	[Activities Resource](./xAPI-Communication.md#2.5) 
+	 	*	2.6.	[Agent Profile Resource](./xAPI-Communication.md#2.6) 
+	 	*	2.7.	[Activity Profile Resource](./xAPI-Communication.md#2.7) 
+	 	*	2.8.	[About Resource](./xAPI-Communication.md#2.8) 
+   	*	3.0.	[Data Validation](./xAPI-Communication.md#3.0)     
+    	*	3.1.	[Concurrency](./xAPI-Communication.md#3.1)  
+    	*	3.2.	[Error Codes](./xAPI-Communication.md#3.2)
+    	*	3.3     [Versioning](./xAPI-Communication.md#3.3)  
+    *	4.0.	[Authentication](./xAPI-Communication.md#4.0)  
+		*	4.1.	[OAuth 1.0 Authentication Scenarios and Methods](./xAPI-Communication.md#4.1) 
+		*	4.2.	[OAuth 1.0 Authorization Scope](./xAPI-Communication.md#4.2)
+    *	5.0	[Security](./xAPI-Communication.md#5.0)
 	*	[Appendices](./xAPI-Communication.md#append3)  
-		*	[Appendix A: Converting Statements to 1.0.0](./xAPI-Communication.md#Appendix3A)  
-		*	[Appendix B: Table of All Endpoints](./xAPI-Communication.md#Appendix3B)  
-		*	[Appendix C: Cross Domain Request Example](./xAPI-Communication.md#Appendix3C)  
+		*	[Appendix A: Converting Statements to 1.0.0](./xAPI-Communication.md#A)  
+		*	[Appendix B: Table of All Endpoints](./xAPI-Communication.md#B)  
+		*	[Appendix C: Cross Domain Request Example](./xAPI-Communication.md#C)  
 
 <a name="partone" />
 #Part One: About the Experience API
diff --git a/xAPI-Communication.md b/xAPI-Communication.md
index d1d51e3..8d2fa8c 100644
--- a/xAPI-Communication.md
+++ b/xAPI-Communication.md
@@ -34,72 +34,72 @@
 		*	[Appendix A: Revision History](./xAPI-About.md#Appendix1A)  
 		*	[Appendix B: cmi5 Example](./xAPI-About.md#Appendix1B)  
 *	Part Two:	[Experience API (xAPI) Data](./xAPI-Data.md#parttwo)  
-	*	1.0.	[Documents](./xAPI-Data.md#documents) 
-	*	2.0.	[Statements](./xAPI-Data.md#statements)  
-		*	2.1.	[Purpose](./xAPI-Data.md#statement-purpose)  
-	 	*	2.2.	[Formatting Requirements](./xAPI-Data.md#dataconstraints) 
-	 	*	2.3.	[Statement Lifecycle](./xAPI-Data.md#lifecycle) 
-		 	*	2.3.1.	[Statement Immutability](./xAPI-Data.md#statement-immutablity-and-exceptions) 
-		 	*	2.3.2.	[Voiding](./xAPI-Data.md#voided) 
-   		*	2.4.	[Statement Properties](./xAPI-Data.md#statement-properties)  
-	        *	2.4.1.	[ID](./xAPI-Data.md#stmtid)  
-	        *	2.4.2.	[Actor](./xAPI-Data.md#actor)  
-	        *	2.4.3.	[Verb](./xAPI-Data.md#verb)  
-	        *	2.4.4.	[Object](./xAPI-Data.md#object)  
-	        *	2.4.5.	[Result](./xAPI-Data.md#result)  
-	        *	2.4.6.	[Context](./xAPI-Data.md#context)  
-	        *	2.4.7.	[Timestamp](./xAPI-Data.md#timestamp)  
-	        *	2.4.8.	[Stored](./xAPI-Data.md#stored)  
-	        *	2.4.9.	[Authority](./xAPI-Data.md#authority)  
-	        *	2.4.10.	[Version](./xAPI-Data.md#version)  
-	        *	2.4.11.	[Attachments](./xAPI-Data.md#attachments)  
-    	*	2.5.	[Retrieval of Statements](./xAPI-Data.md#retrieval)   
-    	*	2.6.	[Signed Statements](./xAPI-Data.md#signature)  
-	*	3.0.	[Metadata](./xAPI-Data.md#metadata)
-		*	3.1.	[IRI Requirements](./xAPI-Data.md#iri-requirements)  
-		*	3.2.	[Hosted Metadata](./xAPI-Data.md#miscmeta)  
-    *	4.0.	[Special Data Types and Rules](./xAPI-Data.md#special-data)  
-		*	4.1.	[Extensions](./xAPI-Data.md#miscext) 
-		*	4.2.	[Language Maps](./xAPI-Data.md#lang-maps)
-		*	4.3.	[IRIs](./xAPI-Data.md#iris)
-		*	4.4.	[UUIDs](./xAPI-Data.md#uuids)
-		*	4.5.	[ISO 8601 Timestamps](./xAPI-Data.md#timestamps)
-		*	4.6.	[ISO 8601 Durations](./xAPI-Data.md#durations)
+	*	1.0.	[Documents](./xAPI-Data.md#1.0) 
+	*	2.0.	[Statements](./xAPI-Data.md#2.0)  
+		*	2.1.	[Purpose](./xAPI-Data.md#2.1)  
+	 	*	2.2.	[Formatting Requirements](./xAPI-Data.md#2.2) 
+	 	*	2.3.	[Statement Lifecycle](./xAPI-Data.md#2.3) 
+		 	*	2.3.1.	[Statement Immutability](./xAPI-Data.md#2.3.1) 
+		 	*	2.3.2.	[Voiding](./xAPI-Data.md#2.3.2) 
+   		*	2.4.	[Statement Properties](./xAPI-Data.md#2.4)  
+	        *	2.4.1.	[ID](./xAPI-Data.md#2.4.1)  
+	        *	2.4.2.	[Actor](./xAPI-Data.md#2.4.2)  
+	        *	2.4.3.	[Verb](./xAPI-Data.md#2.4.3)  
+	        *	2.4.4.	[Object](./xAPI-Data.md#2.4.4)  
+	        *	2.4.5.	[Result](./xAPI-Data.md#2.4.5)  
+	        *	2.4.6.	[Context](./xAPI-Data.md#2.4.6)  
+	        *	2.4.7.	[Timestamp](./xAPI-Data.md#2.4.7)  
+	        *	2.4.8.	[Stored](./xAPI-Data.md#2.4.8)  
+	        *	2.4.9.	[Authority](./xAPI-Data.md#2.4.9)  
+	        *	2.4.10.	[Version](./xAPI-Data.md#2.4.10)  
+	        *	2.4.11.	[Attachments](./xAPI-Data.md#2.4.11)  
+    	*	2.5.	[Retrieval of Statements](./xAPI-Data.md#2.5)   
+    	*	2.6.	[Signed Statements](./xAPI-Data.md#2.6)  
+	*	3.0.	[Metadata](./xAPI-Data.md#3.0)
+		*	3.1.	[IRI Requirements](./xAPI-Data.md#3.1)  
+		*	3.2.	[Hosted Metadata](./xAPI-Data.md#3.2)  
+    *	4.0.	[Special Data Types and Rules](./xAPI-Data.md#4.0)  
+		*	4.1.	[Extensions](./xAPI-Data.md#4.1) 
+		*	4.2.	[Language Maps](./xAPI-Data.md#4.2)
+		*	4.3.	[IRIs](./xAPI-Data.md#4.3)
+		*	4.4.	[UUIDs](./xAPI-Data.md#4.4)
+		*	4.5.	[ISO 8601 Timestamps](./xAPI-Data.md#4.5)
+		*	4.6.	[ISO 8601 Durations](./xAPI-Data.md#4.6)
 	*	[Appendices](./xAPI-Data.md#append2)  
-		*	[Appendix A: Example Statements](./xAPI-Data.md#Appendix2A)  
-		*	[Appendix B: Example statement objects of different types](./xAPI-Data.md#Appendix2B)  
-		*	[Appendix C: Example definitions for Activities of type "cmi.interaction"](./xAPI-Data.md#Appendix2C)  	
-		*	[Appendix D: Example Signed Statement](./xAPI-Data.md#Appendix2D)  
+		*	[Appendix A: Example Statements](./xAPI-Data.md#A)  
+		*	[Appendix B: Example statement objects of different types](./xAPI-Data.md#B)  
+		*	[Appendix C: Example definitions for Activities of type "cmi.interaction"](./xAPI-Data.md#C)  	
+		*	[Appendix D: Example Signed Statement](./xAPI-Data.md#D)  
 *	Part Three:	[Data Processing, Validation, and Security](./xAPI-Communication.md#partthree)  
-	*	1.0.	[Requests](./xAPI-Communication.md#requests)
-		*	1.1.	[HEAD Request Implementation](./xAPI-Communication.md#httphead)  
-	 	*	1.2.	[Headers](./xAPI-Communication.md#header-parameters) 
-	 	*	1.3.	[Alternate Request Syntax](./xAPI-Communication.md#alt-request-syntax) 
-	 	*	1.4.	[Encoding](./xAPI-Communication.md#encoding) 
-	 	*	1.5.	[Content Types](./xAPI-Communication.md#content-types) 
-	        *	1.5.1.	[Application/JSON](./xAPI-Communication.md#applicationjson) 
-	        *	1.5.1.	[Multipart/Mixed](./xAPI-Communication.md#multipartmixed)
-	*	2.0.	[Resources](./xAPI-Communication.md#datatransfer)   
-	 	*	2.1.	[Statement Resource](./xAPI-Communication.md#stmtres) 
-	 	*	2.2.	[Documents Resources](./xAPI-Communication.md#doctransfer) 
-	 	*	2.3.	[State Resource](./xAPI-Communication.md#stateres) 
-	 	*	2.4.	[Agents Resource](./xAPI-Communication.md#agentsres) 
-	 	*	2.5.	[Activities Resource](./xAPI-Communication.md#activitiesres) 
-	 	*	2.6.	[Agent Profile Resource](./xAPI-Communication.md#agentprofres) 
-	 	*	2.7.	[Activity Profile Resource](./xAPI-Communication.md#actprofres) 
-	 	*	2.8.	[About Resource](./xAPI-Communication.md#aboutresource) 
-   	*	3.0.	[Data Validation](./xAPI-Communication.md#validation)     
-    	*	3.1.	[Concurrency](./xAPI-Communication.md#concurrency)  
-    	*	3.2.	[Error Codes](./xAPI-Communication.md#errorcodes)
-    	*	3.3     [Versioning](./xAPI-Communication.md#versioning)  
-    *	4.0.	[Authentication](./xAPI-Communication.md#authentication)  
-		*	4.1.	[OAuth 1.0 Authentication Scenarios and Methods](./xAPI-Communication.md#authdefs) 
-		*	4.2.	[OAuth 1.0 Authorization Scope](./xAPI-Communication.md#oauthscope)
-    *	5.0	[Security](./xAPI-Communication.md#security)
+	*	1.0.	[Requests](./xAPI-Communication.md#1.0)
+		*	1.1.	[HEAD Request Implementation](./xAPI-Communication.md#1.1)  
+	 	*	1.2.	[Headers](./xAPI-Communication.md#1.2) 
+	 	*	1.3.	[Alternate Request Syntax](./xAPI-Communication.md#1.3) 
+	 	*	1.4.	[Encoding](./xAPI-Communication.md#1.4) 
+	 	*	1.5.	[Content Types](./xAPI-Communication.md#1.5) 
+	        *	1.5.1.	[Application/JSON](./xAPI-Communication.md#1.5.1) 
+	        *	1.5.2.	[Multipart/Mixed](./xAPI-Communication.md#1.5.2)
+	*	2.0.	[Resources](./xAPI-Communication.md#2.0)   
+	 	*	2.1.	[Statement Resource](./xAPI-Communication.md#2.1) 
+	 	*	2.2.	[Documents Resources](./xAPI-Communication.md#2.2) 
+	 	*	2.3.	[State Resource](./xAPI-Communication.md#2.3) 
+	 	*	2.4.	[Agents Resource](./xAPI-Communication.md#2.4) 
+	 	*	2.5.	[Activities Resource](./xAPI-Communication.md#2.5) 
+	 	*	2.6.	[Agent Profile Resource](./xAPI-Communication.md#2.6) 
+	 	*	2.7.	[Activity Profile Resource](./xAPI-Communication.md#2.7) 
+	 	*	2.8.	[About Resource](./xAPI-Communication.md#2.8) 
+   	*	3.0.	[Data Validation](./xAPI-Communication.md#3.0)     
+    	*	3.1.	[Concurrency](./xAPI-Communication.md#3.1)  
+    	*	3.2.	[Error Codes](./xAPI-Communication.md#3.2)
+    	*	3.3     [Versioning](./xAPI-Communication.md#3.3)  
+    *	4.0.	[Authentication](./xAPI-Communication.md#4.0)  
+		*	4.1.	[OAuth 1.0 Authentication Scenarios and Methods](./xAPI-Communication.md#4.1) 
+		*	4.2.	[OAuth 1.0 Authorization Scope](./xAPI-Communication.md#4.2)
+    *	5.0	[Security](./xAPI-Communication.md#5.0)
 	*	[Appendices](./xAPI-Communication.md#append3)  
-		*	[Appendix A: Converting Statements to 1.0.0](./xAPI-Communication.md#Appendix3A)  
-		*	[Appendix B: Table of All Endpoints](./xAPI-Communication.md#Appendix3B)  
-		*	[Appendix C: Cross Domain Request Example](./xAPI-Communication.md#Appendix3C)  
+		*	[Appendix A: Converting Statements to 1.0.0](./xAPI-Communication.md#A)  
+		*	[Appendix B: Table of All Endpoints](./xAPI-Communication.md#B)  
+		*	[Appendix C: Cross Domain Request Example](./xAPI-Communication.md#C)  
 
 # Part Three: Data Processing, Validation, and Security 
 
@@ -110,7 +110,7 @@ understand every detail of this part of the specification.
 
 <a name="requests"/>
 
-## 1.0 Requests
+## <a name="1.0">1.0</a> Requests
 
 xAPI tracking is done via HTTP Requests from the Learning Record Provider (client) to the LRS (server). This 
 specification offers guidance in some aspects of this communication.  Where no guidance is offered, it is 
@@ -118,118 +118,118 @@ recommended that those implementing xAPI use current industry best practices.
 
 <a name="httphead"/>
 
-### 1.1 HEAD Request Implementation
+### <a name="1.1">1.1</a> HEAD Request Implementation
 
-###### Description
+###### <a name="1.1.s1"></a>Description
 The behavior of the LRS in response to PUT, POST, GET and DELETE requests is outlined in [Resources](#resources) below. 
 All resources that support GET requests also support HEAD.
 The LRS will respond to HEAD requests by returning the meta information only, using the HTTP headers, and 
 not the actual document.  
 
-###### Rationale
+###### <a name="1.1.s2"></a>Rationale
 
 Clients accessing the LRS might need to check if a particular Statement exists, or determine
 the modification date of documents such as State or Activity or Agent profile. Particularly
 for large documents, it is more efficient not to retrieve the entire document just to check its
 modification date.
 
-###### LRS Requirements
-* The LRS MUST respond to any HTTP HEAD request as it would have responded to an otherwise
+###### <a name="1.1.s3"></a>LRS Requirements
+* <a name="1.1.s3.b1"></a>The LRS MUST respond to any HTTP HEAD request as it would have responded to an otherwise
 identical HTTP GET request except:
-    * The message-body MUST be omitted.
-    * The Content-Length header MAY be omitted, in order to avoid wasting LRS resources.
+    * <a name="1.1.s3.b1.b1"></a>The message-body MUST be omitted.
+    * <a name="1.1.s3.b1.b2"></a>The Content-Length header MAY be omitted, in order to avoid wasting LRS resources.
 
 <a name="header-parameters"/> 
 
-### 1.2 Headers
+### <a name="1.2">1.2</a> Headers
 
-##### Header Parameters
+##### <a name="1.2.s1"></a>Header Parameters
 Some header parameters used within xAPI data transfer are 
 [standard HTTP headers](http://en.wikipedia.org/wiki/List_of_HTTP_header_fields). Others are specific to this
  specification. The following request headers are expected to be used by the Learning Record Providers in some or all 
  of the types of request and situations described in this specification:
 
-* Accept
-* Accept-Encoding
-* Accept-Language
-* Authorization
-* Content-Type
-* Content-Length
-* Content-Transfer-Encoding
-* If-Match
-* If-None-Match
-* X-Experience-API-Version 
+* <a name="1.2.s1.b1"></a>Accept
+* <a name="1.2.s1.b2"></a>Accept-Encoding
+* <a name="1.2.s1.b3"></a>Accept-Language
+* <a name="1.2.s1.b4"></a>Authorization
+* <a name="1.2.s1.b5"></a>Content-Type
+* <a name="1.2.s1.b6"></a>Content-Length
+* <a name="1.2.s1.b7"></a>Content-Transfer-Encoding
+* <a name="1.2.s1.b8"></a>If-Match
+* <a name="1.2.s1.b9"></a>If-None-Match
+* <a name="1.2.s1.b10"></a>X-Experience-API-Version 
 
 The following response headers are expected to be used by the LRS. Again, not all of these apply
 to every type of request and/or situations:
 
-* Content-Type
-* Content-Length
-* Last-Modified
-* ETag
-* Status
-* X-Experience-API-Version
-* X-Experience-API-Consistent-Through
+* <a name="1.2.s1.b11"></a>Content-Type
+* <a name="1.2.s1.b12"></a>Content-Length
+* <a name="1.2.s1.b13"></a>Last-Modified
+* <a name="1.2.s1.b14"></a>ETag
+* <a name="1.2.s1.b15"></a>Status
+* <a name="1.2.s1.b16"></a>X-Experience-API-Version
+* <a name="1.2.s1.b17"></a>X-Experience-API-Consistent-Through
 
 The lists above are not intended to be exhaustive. See requirements throughout this document for more details.
 
 <a name="alt-request-syntax"/>
 
-### 1.3 Alternate Request Syntax
+### <a name="1.3">1.3</a> Alternate Request Syntax
 
 
-###### Description
+###### <a name="1.3.s1"></a>Description
 
 One of the goals of the xAPI is to allow cross-domain tracking, and even though xAPI seeks to enable tracking from 
 applications other than browsers, browsers still need to be supported. For example, Internet Explorer 8 and 9 do not 
 implement Cross Origin Resource Sharing, but rather use their own Cross Domain Request API, which cannot use all of 
 the xAPI as described above due to only supporting "GET" and "POST", and not allowing HTTP headers to be set.  
 
-###### Details/Requirements
+###### <a name="1.3.s2"></a>Details/Requirements
 
 The following describes alternate syntax to use only when unable to use the usual syntax for specific calls due to the 
 restrictions mentioned above. This alternate syntax can also be used to GET Statements due to limits on query string length.  
 
 See [Appendix C: Cross Domain Request Example](#Appendix3C) for an example. 
 
-###### Requirements
+###### <a name="1.3.s3"></a>Requirements
 
 __Method__:  
-* All xAPI requests issued MUST be POST. 
-* The intended xAPI method MUST be included as the value of the "method" query 
+* <a name="1.3.s3.b1"></a>All xAPI requests issued MUST be POST. 
+* <a name="1.3.s3.b2"></a>The intended xAPI method MUST be included as the value of the "method" query 
 string parameter. 
-* The Learning Record Provider MUST NOT include any other query string parameters on the request.
+* <a name="1.3.s3.b3"></a>The Learning Record Provider MUST NOT include any other query string parameters on the request.
 
 Example: http://example.com/xAPI/statements?method=PUT  
 
 __Content__:  
-* If the xAPI call involved sending content, the Learning Record Provider MUST URL encode that content and 
+* <a name="1.3.s3.b4"></a>If the xAPI call involved sending content, the Learning Record Provider MUST URL encode that content and 
 include it as a form parameter called "content". 
-* The LRS MUST interpret this content as a UTF-8 string. Storing binary data is not supported with this syntax.  
+* <a name="1.3.s3.b5"></a>The LRS MUST interpret this content as a UTF-8 string. Storing binary data is not supported with this syntax.  
 
 __Headers__:  
-* The Learning Record Provider MAY include any header parameters required by this specification which are 
+* <a name="1.3.s3.b6"></a>The Learning Record Provider MAY include any header parameters required by this specification which are 
 expected to appear in the HTTP header as form parameters with the same names. This applies 
 to the following parameters: Authorization, X-Experience-API-Version, Content-Type, Content-Length,
 If-Match and If-None-Match. It does not apply to Content-Transfer-Encoding.
-* The LRS MUST treat the form parameters listed above as header parameters. 
-* The Learning Record Provider MUST include other header parameters not listed above in the HTTP header as normal. 
-* The Learning Record Provider SHOULD* still include a Content-Type header (in the HTTP header) for this type of 
+* <a name="1.3.s3.b7"></a>The LRS MUST treat the form parameters listed above as header parameters. 
+* <a name="1.3.s3.b8"></a>The Learning Record Provider MUST include other header parameters not listed above in the HTTP header as normal. 
+* <a name="1.3.s3.b9"></a>The Learning Record Provider SHOULD* still include a Content-Type header (in the HTTP header) for this type of 
 request with a value of 'application/x-www-form-urlencoded'. 
-* The Content-Type form parameter SHOULD* specify the content type of the content within the content form parameter. 
-* The Learning Record Provider SHOULD* still include a Content-Length header (in the HTTP header) for this type of 
+* <a name="1.3.s3.b10"></a>The Content-Type form parameter SHOULD* specify the content type of the content within the content form parameter. 
+* <a name="1.3.s3.b11"></a>The Learning Record Provider SHOULD* still include a Content-Length header (in the HTTP header) for this type of 
 request indicating the overall length of the request's content. 
-* The Content-Length form parameter SHOULD* specify the length of the content within the content form parameter and 
+* <a name="1.3.s3.b12"></a>The Content-Length form parameter SHOULD* specify the length of the content within the content form parameter and 
 will therefore be a lower figure than the length listed in the Content-Length header. 
 
 __Query string parameters__:  
-* Any query string parameters other than 'method' MUST instead be included as a form parameter with the same name. 
-* The LRS MUST treat any form parameters other than "content" or the header parameters listed above as query string parameters. 
+* <a name="1.3.s3.b13"></a>Any query string parameters other than 'method' MUST instead be included as a form parameter with the same name. 
+* <a name="1.3.s3.b14"></a>The LRS MUST treat any form parameters other than "content" or the header parameters listed above as query string parameters. 
 
 __Attachments__: Note that due to issues relating to encoding, it is not possible to send 
 binary data attachments using this syntax. See [4.1.11. Attachments](#attachments) 
 
-* The LRS MUST support the syntax above.  
+* <a name="1.3.s3.b15"></a>The LRS MUST support the syntax above.  
 
 There might be cases where there is a requirement for the Learning Record Provider to support applications or browsers where the 
 Client code is hosted on a different scheme (HTTP or HTTPS) from the LRS. A proxy is only needed IF you want to support HTTP to 
@@ -241,97 +241,97 @@ Strongly consider security risks before making the decision to use implementatio
 
 <a name="encoding"/> 
 
-### 1.4 Encoding
+### <a name="1.4">1.4</a> Encoding
 
-###### Requirements
-* All strings MUST be encoded and interpreted as UTF-8. 
+###### <a name="1.4.s1"></a>Requirements
+* <a name="1.4.s1.b1"></a>All strings MUST be encoded and interpreted as UTF-8. 
 
 <a name="content-types"/> 
-### 1.5 Content Types
+### <a name="1.5">1.5</a> Content Types
 Requests within this specification normally use an application/json content type. Exceptions to this are:
 
-* Documents can have any content type. 
-* Statement requests that can sometimes include Attachments use the multipart/mixed content type. 
+* <a name="1.5.b1"></a>Documents can have any content type. 
+* <a name="1.5.b2"></a>Statement requests that can sometimes include Attachments use the multipart/mixed content type. 
 
 <a name="applicationjson"/> 
-#### 1.5.1 Application/JSON
+#### <a name="1.5.1">1.5.1</a> Application/JSON
 Requests within this specification normally use an application/json content type. 
 
-###### LRS Requirements
-* When receiving a PUT or POST with a document type of "application/json”, an LRS MUST accept batches 
+###### <a name="1.5.1.s1"></a>LRS Requirements
+* <a name="1.5.1.s1.b1"></a>When receiving a PUT or POST with a document type of "application/json”, an LRS MUST accept batches 
 of Statements which contain no attachment Objects.
-* When receiving a PUT or POST with a document type of "application/json”, an LRS MUST accept batches 
+* <a name="1.5.1.s1.b2"></a>When receiving a PUT or POST with a document type of "application/json”, an LRS MUST accept batches 
 of Statements which contain only attachment Objects with a populated fileUrl.
 
 <a name="multipartmixed"/> 
-#### 1.5.2 Multipart/Mixed
+#### <a name="1.5.2">1.5.2</a> Multipart/Mixed
 
 The multipart/mixed content type is used for requests that *could* include Attachments. This does not mean that all 
 multipart/mixed requests neccesarily do include Attachments.
 
-##### Procedure For The Exchange Of Attachments
+##### <a name="1.5.2.s1"></a>Procedure For The Exchange Of Attachments
 
-1. A Statement request including zero or more Attachments is construed as described below.
+* <a name="1.5.2.s1.b1"></a>A Statement request including zero or more Attachments is construed as described below.
 
-2. The Statement is sent using a Content-Type of "multipart/mixed". Any Attachments are placed at the end of such transmissions.
+* <a name="1.5.2.s1.b2"></a>The Statement is sent using a Content-Type of "multipart/mixed". Any Attachments are placed at the end of such transmissions.
 
-3. The LRS decides whether to accept or reject the Statement based on the information in the first part.
+* <a name="1.5.2.s1.b3"></a>The LRS decides whether to accept or reject the Statement based on the information in the first part.
 
-4. If it accepts the request, it can match the raw data of an Attachment(s) with the Attachment header by comparing the SHA-2 
+* <a name="1.5.2.s1.b4"></a>If it accepts the request, it can match the raw data of an Attachment(s) with the Attachment header by comparing the SHA-2 
 of the raw data to the SHA-2 declared in the header. It MUST not do so any other way.
 
-###### Requirements for Attachment Statement Batches
+###### <a name="1.5.2.s2"></a>Requirements for Attachment Statement Batches
 
 A request transmitting a Statement batch, Statement results, or single Statement that includes Attachments MUST satisfy one of the 
 following criteria:
 
-* It MUST be of type "application/json" and include a fileUrl for every Attachment EXCEPT for Statement 
+* <a name="1.5.2.s2.b1"></a>It MUST be of type "application/json" and include a fileUrl for every Attachment EXCEPT for Statement 
 results when the Attachments filter is false.
-* It MUST conform to the definition of multipart/mixed in [RFC 2046](https://www.ietf.org/rfc/rfc2046.txt) and:
-    * The first part of the multipart document MUST contain the Statements themselves, with type "application/json".
-    * Each additional part contains the raw data for an Attachment and forms a logical part of the Statement. This 
+* <a name="1.5.2.s2.b2"></a>It MUST conform to the definition of multipart/mixed in [RFC 2046](https://www.ietf.org/rfc/rfc2046.txt) and:
+    * <a name="1.5.2.s2.b2.b1"></a>The first part of the multipart document MUST contain the Statements themselves, with type "application/json".
+    * <a name="1.5.2.s2.b2.b2"></a>Each additional part contains the raw data for an Attachment and forms a logical part of the Statement. This 
     capability will be available when issuing PUT or POST against the Statement resource.
-    * MUST include an X-Experience-API-Hash parameter in each part's header after the first (Statements) part.
-    * MUST include a Content-Transfer-Encoding parameter with a value of "binary" in each part's header after the first 
+    * <a name="1.5.2.s2.b2.b3"></a>MUST include an X-Experience-API-Hash parameter in each part's header after the first (Statements) part.
+    * <a name="1.5.2.s2.b2.b4"></a>MUST include a Content-Transfer-Encoding parameter with a value of "binary" in each part's header after the first 
      (Statements) part.
-    * SHOULD only include one copy of an Attachment's data when the same Attachment is used in multiple Statements that are 
+    * <a name="1.5.2.s2.b2.b5"></a>SHOULD only include one copy of an Attachment's data when the same Attachment is used in multiple Statements that are 
      sent together.
-    * SHOULD include a Content-Type parameter in each part's header. For the first part (containing the Statement) this 
+    * <a name="1.5.2.s2.b2.b6"></a>SHOULD include a Content-Type parameter in each part's header. For the first part (containing the Statement) this 
      MUST be "application/json".
-   	* Where parameters have a corresponding property within the attachment Object (outlined in the table above), and both 
+   	* <a name="1.5.2.s2.b2.b7"></a>Where parameters have a corresponding property within the attachment Object (outlined in the table above), and both 
    	 the parameter and property are specified for a given Attachment, the value of these parameters and properties MUST match. 
 
-###### LRS Requirements
+###### <a name="1.5.2.s3"></a>LRS Requirements
 
-* An LRS MUST include Attachments in the Transmission Format described above
+* <a name="1.5.2.s3.b1"></a>An LRS MUST include Attachments in the Transmission Format described above
 when requested by the Client (see ["Statement Resource"](#stmtapi)).
-* An LRS MUST NOT pull Statements from another LRS without requesting Attachments.
-* An LRS MUST NOT push Statements into another LRS without including Attachment data
+* <a name="1.5.2.s3.b2"></a>An LRS MUST NOT pull Statements from another LRS without requesting Attachments.
+* <a name="1.5.2.s3.b3"></a>An LRS MUST NOT push Statements into another LRS without including Attachment data
 received, if any, for those Attachments.
-* When receiving a PUT or POST with a document type of "multipart/mixed”, an LRS MUST accept batches of 
+* <a name="1.5.2.s3.b4"></a>When receiving a PUT or POST with a document type of "multipart/mixed”, an LRS MUST accept batches of 
 Statements that contain Attachments in the Transmission Format described above.
-* When receiving a PUT or POST with a document type of "multipart/mixed”, an LRS MUST reject batches of 
+* <a name="1.5.2.s3.b5"></a>When receiving a PUT or POST with a document type of "multipart/mixed”, an LRS MUST reject batches of 
 Statements having Attachments that neither contain a fileUrl nor match a received Attachment part based on their hash.
-* When receiving a PUT or POST with a document type of "multipart/mixed”, an LRS SHOULD assume a 
+* <a name="1.5.2.s3.b6"></a>When receiving a PUT or POST with a document type of "multipart/mixed”, an LRS SHOULD assume a 
 Content-Transfer-Encoding of binary for Attachment parts.
-* An LRS MAY reject (batches of) Statements that are larger than the LRS is configured to allow.
-* When receiving a PUT or POST with a document type of "multipart/mixed”, an LRS SHOULD* accept batches 
+* <a name="1.5.2.s3.b7"></a>An LRS MAY reject (batches of) Statements that are larger than the LRS is configured to allow.
+* <a name="1.5.2.s3.b8"></a>When receiving a PUT or POST with a document type of "multipart/mixed”, an LRS SHOULD* accept batches 
 of Statements which contain no attachment Objects.
-* When receiving a PUT or POST with a document type of "multipart/mixed”, an LRS SHOULD* accept batches 
+* <a name="1.5.2.s3.b9"></a>When receiving a PUT or POST with a document type of "multipart/mixed”, an LRS SHOULD* accept batches 
 of Statements which contain only attachment Objects with a populated fileUrl.
 
 __Note:__ There is no requirement that Statement batches using the mime/multipart format
 contain Attachments.
 
-###### Learning Record Provider Requirements
+###### <a name="1.5.2.s4"></a>Learning Record Provider Requirements
 
-* A Learning Record Provider MAY send Statements with Attachments as described above.
-* A Learning Record Provider MAY send multiple Statements where some or all have Attachments if using "POST".
-* A Learning Record Provider MAY send batches of type "application/json" where every attachment
+* <a name="1.5.2.s4.b1"></a>A Learning Record Provider MAY send Statements with Attachments as described above.
+* <a name="1.5.2.s4.b2"></a>A Learning Record Provider MAY send multiple Statements where some or all have Attachments if using "POST".
+* <a name="1.5.2.s4.b3"></a>A Learning Record Provider MAY send batches of type "application/json" where every attachment
 Object has a fileUrl, ignoring all requirements based on the "multipart/mixed" format.
-* A Learning Record Provider SHOULD use SHA-256, SHA-384, or SHA-512 to populate the "sha2" property.
+* <a name="1.5.2.s4.b4"></a>A Learning Record Provider SHOULD use SHA-256, SHA-384, or SHA-512 to populate the "sha2" property.
 
-###### File URL
+###### <a name="1.5.2.s5"></a>File URL
 The File URL is intended to provide a location from which the attachment can be received.
 There are, however, no requirements for the owner of the attachment to make the 
 attachment data available at the location indefinitely or to make the attachment publically
@@ -339,22 +339,22 @@ available without security restrictions. When determining attachment hosting arr
 those creating Statements using the "fileUrl" property are encouraged to consider the needs of end recipient(s) 
 of the Statement especially if the attachment content is not included with the Statement.
 
-* The attachment data SHOULD be retrievable at the URL indicated by the fileUrl.
-* The owner of the attachment MAY stop providing the attachment data at this IRL at any time. 
-* Security restrictions MAY be applied to those attempting to access the attachment data at this IRL. 
+* <a name="1.5.2.s5.b1"></a>The attachment data SHOULD be retrievable at the URL indicated by the fileUrl.
+* <a name="1.5.2.s5.b2"></a>The owner of the attachment MAY stop providing the attachment data at this IRL at any time. 
+* <a name="1.5.2.s5.b3"></a>Security restrictions MAY be applied to those attempting to access the attachment data at this IRL. 
 
 The period of time an attachment is made available for, and the security restrictions applied to
 hosted attachments, are out of scope of this specification. 
 
-###### Example
+###### <a name="1.5.2.s6"></a>Example
 
 Below is an example of a very simple Statement with an attachment. Please note the following:
 
-* The boundary in the sample was chosen to demonstrate valid character classes;
-* The selected boundary does not appear in any of the parts;
-* For readability the sample attachment is text/plain. Even if it had been a 'binary' type
+* <a name="1.5.2.s6.b1"></a>The boundary in the sample was chosen to demonstrate valid character classes;
+* <a name="1.5.2.s6.b2"></a>The selected boundary does not appear in any of the parts;
+* <a name="1.5.2.s6.b3"></a>For readability the sample attachment is text/plain. Even if it had been a 'binary' type
 like 'image/jpeg' no encoding would be done, the raw octets would be included;
-* Per RFC 2046, the boundary is <CRLF> followed by -- followed by the boundary string declared in the header.
+* <a name="1.5.2.s6.b4"></a>Per RFC 2046, the boundary is <CRLF> followed by -- followed by the boundary string declared in the header.
 
 __Note:__ Don't forget the ```<CRLF>```  when building or parsing these messages.
 
@@ -415,7 +415,7 @@ here is a simple attachment
 ```
 
 <a name="datatransfer"/> <a name="resources"/>
-## 2.0 Resources
+## <a name="2.0">2.0</a> Resources
 
 The LRS is interacted with via RESTful HTTP methods to the resources outlined in this section.
 The Statement Resource can be used by itself to track learning records. Other resources provide
@@ -432,29 +432,29 @@ __Note:__ In all of the example locations where xAPI resources are located (endp
 syntax after this represents the particular Resource used. A full list of the resource endpoints is included in 
 [Appendix B: Table of All Resource Endpoints](#Appendix3B).
 
-###### Requirements
+###### <a name="2.0.s1"></a>Requirements
 
-* The LRS MUST support all of the resources described in [this section](#datatransfer). 
-* If the LRS implements OAuth 1.0, the LRS MUST also support all of the OAuth resources 
+* <a name="2.0.s1.b1"></a>The LRS MUST support all of the resources described in [this section](#datatransfer). 
+* <a name="2.0.s1.b2"></a>If the LRS implements OAuth 1.0, the LRS MUST also support all of the OAuth resources 
 described in [Section 6.4.2 OAuth Authorization Scope](#oauthscope).
-* The LRS MAY support additional resources not described in this specification. 
-* Past, current and future versions of this specification do not and will not define resource endpoints 
+* <a name="2.0.s1.b3"></a>The LRS MAY support additional resources not described in this specification. 
+* <a name="2.0.s1.b4"></a>Past, current and future versions of this specification do not and will not define resource endpoints 
 with path segments starting 'extensions/'. LRSs supporting additional resources not defined 
 in this specification SHOULD define their endpoints with path segments starting with 'extensions/'.
 
 <a name="stmtres"/> 
 
-#### 2.1 Statement Resource
+#### <a name="2.1">2.1</a> Statement Resource
 
-###### Description
+###### <a name="2.1.s1"></a>Description
 
 The basic communication mechanism of the Experience API.  
 
 <a name="stmtresput"/>
 
-####2.1.1 PUT Statements
+#### <a name="2.1.1">2.1.1</a> PUT Statements
 
-###### Details
+###### <a name="2.1.1.s1"></a>Details
 
 Example resource endpoint: `http://example.com/xAPI/statements`
 
@@ -466,39 +466,39 @@ Stores a single Statement with the given id. POST can also be used to store sing
 
 <table>
 	<tr><th>Parameter</th><th>Type</th><th>Default</th><th>Description</th><th>Required</th></tr>
-	<tr><td>statementId</td><td>String</td><td> 
+	<tr id="2.1.1.s1.table1.row1"><td>statementId</td><td>String</td><td> 
 	<td>Id of Statement to record</td></td><td>Required</td></tr>
 </table>
 
-###### LRS Requirements
+###### <a name="2.1.1.s2"></a>LRS Requirements
 
-* The LRS MAY respond before Statements that have been stored are available for retrieval.
+* <a name="2.1.1.s2.b1"></a>The LRS MAY respond before Statements that have been stored are available for retrieval.
 
-* An LRS MUST NOT make any modifications to its state based on receiving a Statement
+* <a name="2.1.1.s2.b2"></a>An LRS MUST NOT make any modifications to its state based on receiving a Statement
 with a statementID that it already has a Statement for. Whether it responds with
 `409 Conflict` or `204 No Content`, it MUST NOT modify the Statement or any other
 Object.
 
-* If the LRS receives a Statement with an id it already has a Statement for, it SHOULD
+* <a name="2.1.1.s2.b3"></a>If the LRS receives a Statement with an id it already has a Statement for, it SHOULD
 verify the received Statement matches the existing one and SHOULD return `409 Conflict` if they
 do not match. See [Statement comparision requirements](statement-comparision-requirements).
 
-* If the LRS receives a batch of Statements containing two or more Statements with the same id, it SHOULD* reject the 
+* <a name="2.1.1.s2.b4"></a>If the LRS receives a batch of Statements containing two or more Statements with the same id, it SHOULD* reject the 
  batch and return `400 Bad Request`.
 
 
 
-###### Learning Record Provider Requirements
+###### <a name="2.1.1.s3"></a>Learning Record Provider Requirements
 
-* Learning Record Providers SHOULD POST Statements including the Statement "id" property instead of using PUT. 
-* When PUTing statements, the "id" property of the Statement SHOULD be used. 
-* Where provided, the "id" property of the Statement MUST match the "statementId" parameter of the request. 
+* <a name="2.1.1.s3.b1"></a>Learning Record Providers SHOULD POST Statements including the Statement "id" property instead of using PUT. 
+* <a name="2.1.1.s3.b2"></a>When PUTing statements, the "id" property of the Statement SHOULD be used. 
+* <a name="2.1.1.s3.b3"></a>Where provided, the "id" property of the Statement MUST match the "statementId" parameter of the request. 
 
 <a name="stmtrespost"/>
 
-####2.1.2 POST Statements
+#### <a name="2.1.2">2.1.2</a> POST Statements
 
-###### Details
+###### <a name="2.1.2.s1"></a>Details
 
 Example resource endpoint: `http://example.com/xAPI/statements`
 
@@ -514,28 +514,28 @@ that provide a lot of data to the LRS.
 
 **Returns:** `200 OK`, Array of Statement id(s) (UUID).  
 
-###### Requirements
+###### <a name="2.1.2.s2"></a>Requirements
 
-* The LRS MAY respond before Statements that have been stored are available for retrieval.
-* GET Statements MAY be called using POST and form parameters if necessary as query strings 
+* <a name="2.1.2.s2.b1"></a>The LRS MAY respond before Statements that have been stored are available for retrieval.
+* <a name="2.1.2.s2.b2"></a>GET Statements MAY be called using POST and form parameters if necessary as query strings 
 have limits. See [Alternate Request Syntax](#alt-request-syntax) for more details.
-* The LRS MUST differentiate a POST to add a Statement or to list Statements based on the 
+* <a name="2.1.2.s2.b3"></a>The LRS MUST differentiate a POST to add a Statement or to list Statements based on the 
 parameters passed. See [Alternate Request Syntax](#alt-request-syntax) for more details.
-* An LRS MUST NOT make any modifications to its state based on receiving a Statement
+* <a name="2.1.2.s2.b4"></a>An LRS MUST NOT make any modifications to its state based on receiving a Statement
 with a statementID that it already has a Statement for. Whether it responds with
 `409 Conflict` or `204 No Content`, it MUST NOT modify the Statement or any other
 Object.
-* If the LRS receives a Statement with an id it already has a Statement for, it SHOULD
+* <a name="2.1.2.s2.b5"></a>If the LRS receives a Statement with an id it already has a Statement for, it SHOULD
 verify the received Statement matches the existing one and SHOULD return `409 Conflict` if they
 do not match. See [Statement comparision requirements](statement-comparision-requirements).
-* If the LRS receives a batch of Statements containing two or more Statements with the same id, it SHOULD* reject the 
+* <a name="2.1.2.s2.b6"></a>If the LRS receives a batch of Statements containing two or more Statements with the same id, it SHOULD* reject the 
  batch and return `400 Bad Request`.
 
 <a name="stmtresget"/>
 
-####2.1.3 GET Statements
+#### <a name="2.1.3">2.1.3</a> GET Statements
 
-###### Details
+###### <a name="2.1.3.s1"></a>Details
 
 Example resource endpoint: `http://example.com/xAPI/statements`
 
@@ -552,14 +552,14 @@ retrieve them will be included in the StatementResult Object.
 
 <table>
 	<tr><th>Parameter</th><th>Type</th><th>Default</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row1">
 		<td>statementId</td>
 		<td>String</td>
 		<td> </td>
 		<td>ID of Statement to fetch</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row2">
 		<td>voidedStatementId</td>
 		<td>String</td>
 		<td> </td>
@@ -567,7 +567,7 @@ retrieve them will be included in the StatementResult Object.
 		Statements</a></td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row3">
 		<td>agent</td>
 		<td>Agent or Identified Group Object (JSON)</td>
 		<td> </td>
@@ -589,14 +589,14 @@ retrieve them will be included in the StatementResult Object.
 		</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row4">
 		<td>verb</td>
 		<td>Verb id (IRI)</td>
 		<td> </td>
 		<td>Filter, only return Statements matching the specified verb id.</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row5">
 		<td>activity</td>
 		<td>Activity id (IRI)</td>
 		<td> </td>
@@ -606,7 +606,7 @@ retrieve them will be included in the StatementResult Object.
 		</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row6">
 		<td>registration</td>
 		<td>UUID</td>
 		<td> </td>
@@ -619,7 +619,7 @@ retrieve them will be included in the StatementResult Object.
 		</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row7">
 	<td>related_activities</td>
 		<td>Boolean</td>
 		<td>false</td>
@@ -632,7 +632,7 @@ retrieve them will be included in the StatementResult Object.
 		</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row8">
 		<td>related_agents</td>
 		<td>Boolean</td>
 		<td>false</td>
@@ -645,21 +645,21 @@ retrieve them will be included in the StatementResult Object.
 		</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row9">
 		<td>since</td>
 		<td>Timestamp</td>
 		<td> </td>
 		<td>Only Statements stored since the specified Timestamp (exclusive) are returned.</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row10">
 		<td>until</td>
 		<td>Timestamp</td>
 		<td> </td>
 		<td>Only Statements stored at or before the specified Timestamp are returned.</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row11">
 		<td>limit</td>
 		<td>Nonnegative Integer</td>
 		<td>0</td>
@@ -669,7 +669,7 @@ retrieve them will be included in the StatementResult Object.
 		</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row12">
 		<td>format</td>
 		<td>String: ('ids', 'exact', or 'canonical')</td>
 		<td>exact</td>
@@ -689,14 +689,14 @@ retrieve them will be included in the StatementResult Object.
 		</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row13">
 		<td>attachments</td><td>Boolean</td><td>false</td>
 		<td>If <code>true</code>, the LRS uses the multipart response format and includes all attachments as 
 		described previously.  If <code>false</code>, the LRS sends the prescribed response with Content-Type 
 		application/json and does not send attachment data.</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.1.3.s1.table1.row14">
 		<td>ascending</td>
 		<td>Boolean</td>
 		<td>false</td>
@@ -706,40 +706,40 @@ retrieve them will be included in the StatementResult Object.
 </table>
 
 __Note:__ The values of Boolean parameters are represented as `true` or `false` as in JSON.
-###### Requirements
+###### <a name="2.1.3.s2"></a>Requirements
 
-* The LRS MUST reject with an `HTTP 400` error any requests to this resource 
+* <a name="2.1.3.s2.b1"></a>The LRS MUST reject with an `HTTP 400` error any requests to this resource 
 which contain both statementId and voidedStatementId parameters
 
-* The LRS MUST reject with an `HTTP 400` error any requests to this resource 
+* <a name="2.1.3.s2.b2"></a>The LRS MUST reject with an `HTTP 400` error any requests to this resource 
 which contain statementId or voidedStatementId parameters, and also contain any 
 other parameter besides "attachments" or "format".
 
-* The LRS MAY apply additional query filter criteria based on permissions associated
+* <a name="2.1.3.s2.b3"></a>The LRS MAY apply additional query filter criteria based on permissions associated
 with the credentials used. 
 
-* In the event that no Statements are found matching the query filter criteria, the LRS MUST still return 
+* <a name="2.1.3.s2.b4"></a>In the event that no Statements are found matching the query filter criteria, the LRS MUST still return 
 `HTTP 200` and a [StatementResult](#retstmts) Object. In this case, the "statements" property will contain
 an empty array.
 
-* The LRS MUST include the header "X-Experience-API-Consistent-Through", in 
+* <a name="2.1.3.s2.b5"></a>The LRS MUST include the header "X-Experience-API-Consistent-Through", in 
 [ISO 8601 combined date and time](https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations) format, 
 on all responses to Statements requests, with a value of the Timestamp for which all Statements that have or will have a 
 "stored" property before that time are known with reasonable certainty to be available for retrieval. This time SHOULD take 
 into account any temporary condition, such as excessive load, which might cause a delay in Statements 
 becoming available for retrieval.
 
-* If the "attachment" property of a GET statement is used and is set to <code>true</code>, the LRS MUST use the 
+* <a name="2.1.3.s2.b6"></a>If the "attachment" property of a GET statement is used and is set to <code>true</code>, the LRS MUST use the 
 multipart response format and include all attachments as described in [4.1.11](#attachments).
 
-* If the "attachment" property of a GET statement is used and is set to <code>false</code>, the LRS MUST NOT
+* <a name="2.1.3.s2.b7"></a>If the "attachment" property of a GET statement is used and is set to <code>false</code>, the LRS MUST NOT
 include attachment raw data and MUST report application/json.
 
-* The LRS SHOULD* include a "Last-Modified" header which matches the "stored" timestamp of the Statement. 
+* <a name="2.1.3.s2.b8"></a>The LRS SHOULD* include a "Last-Modified" header which matches the "stored" timestamp of the Statement. 
 
 <a name="queryStatementRef" />
 
-###### Filter Conditions for StatementRefs 
+###### <a name="2.1.3.s3"></a>Filter Conditions for StatementRefs
 
 This section outlines rules by which Statements targeting other Statements can sometimes be considered to 
 meet the filter conditions of a query even if they do not match the original query's filter parameters. 
@@ -769,28 +769,28 @@ Statements are filtered.
 
 <a name="queryLangFiltering" />
 
-###### Language Filtering Requirements for Canonical Format Statements
+###### <a name="2.1.3.s4"></a>Language Filtering Requirements for Canonical Format Statements
 
-* Activity Objects contain Language Map Objects within their "name", "description" and various interaction components. 
+* <a name="2.1.3.s4.b1"></a>Activity Objects contain Language Map Objects within their "name", "description" and various interaction components. 
 The LRS MUST return only one language in each of these maps. 
 
-* The LRS MAY maintain canonical versions of language maps against any IRI identifying an object containing
+* <a name="2.1.3.s4.b2"></a>The LRS MAY maintain canonical versions of language maps against any IRI identifying an object containing
 language maps. This includes the language map stored in the Verb's "display" property and potentially some 
 language maps used within extensions. 
 
-* If the LRS maintains a canonical version of a language map, it SHOULD* return this canonical language map
+* <a name="2.1.3.s4.b3"></a>If the LRS maintains a canonical version of a language map, it SHOULD* return this canonical language map
  when canonical format is used to retrieve Statements. 
 
-* The LRS SHOULD* return only one language within each language map for which it returns a canonical map. 
+* <a name="2.1.3.s4.b4"></a>The LRS SHOULD* return only one language within each language map for which it returns a canonical map. 
 
-* In order to choose the most relevant language, the LRS MUST apply the Accept-Language header as 
+* <a name="2.1.3.s4.b5"></a>In order to choose the most relevant language, the LRS MUST apply the Accept-Language header as 
 described in [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html) 
 (HTTP 1.1), except that this logic MUST be applied to each language map individually to select 
 which language entry to include, rather than to the resource (list of Statements) as a whole.
 
 <a name="voidedStatements" />
 
-##### 2.1.4 Voided Statements
+##### <a name="2.1.4">2.1.4</a> Voided Statements
 [Section 4.3 Voided](#voided) describes the process by which Statements can be voided. This section
 describes how voided Statements are handled by the LRS when queried. 
 
@@ -798,39 +798,39 @@ Clients can identify the presence and statementId of any voided Statements by th
 Aside from debugging tools, many Learning Record Consumers will not want to display voiding Statements to their users 
 and will not display these as part of activity streams and other reports. 
 
-###### Requirements
+###### <a name="2.1.4.s1"></a>Requirements
 
-* The LRS MUST not return any Statement which has been voided, unless that Statement has been requested by voidedStatementId. 
+* <a name="2.1.4.s1.b1"></a>The LRS MUST not return any Statement which has been voided, unless that Statement has been requested by voidedStatementId. 
 The process described in [the section on filter conditions for StatementRefs](#queryStatementRef) is no exception to this
 requirement. The process of retrieving voiding Statements is to request each individually by voidedStatementId.
 
-* The LRS MUST still return any Statements targeting the voided Statement, following the process and conditions described in 
+* <a name="2.1.4.s1.b2"></a>The LRS MUST still return any Statements targeting the voided Statement, following the process and conditions described in 
 [the section on filter conditions for StatementRefs](#queryStatementRef). This includes the voiding Statement, which cannot 
 be voided. 
 
 <a name="doctransfer"/>
 
-### 2.2 Document Resources 
+### <a name="2.2">2.2</a> Document Resources 
 
-##### Description
+##### <a name="2.2.s1"></a>Description
 The Experience API provides a facility for Learning Record Providers to save arbitrary data in 
 the form of documents, perhaps related to an Activity, Agent, or combination of both.
 
-##### Details
+##### <a name="2.2.s2"></a>Details
 Note that the following table shows generic properties, not a JSON Object as many other tables 
 in this specification do. The id is stored in the IRL, "updated" is HTTP header information, and 
 "contents" is the HTTP document itself (as opposed to an Object).
 <table>
 	<tr><th>Property</th><th>Type</th><th>Description</th></tr>
-	<tr><td>id</td><td>String</td><td>Set by Learning Record Provider, unique within the scope of the agent or activity.</td></tr>
-	<tr><td>updated</td><td>Timestamp</td><td>When the document was most recently modified.</td></tr>
-	<tr><td>contents</td><td>Arbitrary binary data</td><td>The contents of the document</td></tr>
+	<tr id="2.2.s2.table1.row1"><td>id</td><td>String</td><td>Set by Learning Record Provider, unique within the scope of the agent or activity.</td></tr>
+	<tr id="2.2.s2.table1.row2"><td>updated</td><td>Timestamp</td><td>When the document was most recently modified.</td></tr>
+	<tr id="2.2.s2.table1.row3"><td>contents</td><td>Arbitrary binary data</td><td>The contents of the document</td></tr>
 </table>
 
 The three Document Resources provide [document](#miscdocument) storage.  The details of each Resource are found in 
 the following sections, and the information in this section applies to all three Resources.
 
-###### Details
+###### <a name="2.2.s3"></a>Details
 
 <table>
 	<tr>
@@ -839,19 +839,19 @@ the following sections, and the information in this section applies to all three
 		<th>Endpoint</th>
 		<th>Example</th>
 	</tr>
-	<tr>
+	<tr id="2.2.s3.table1.row1">
 		<td>State Resource</td>
 		<td>POST</td>
 		<td>activities/state</td>
 		<td>http://example.com/xAPI/activities/state</td>
 	</tr>
-	<tr>
+	<tr id="2.2.s3.table1.row2">
 		<td>Activity Profile Resource</td>
 		<td>POST</td>
 		<td>activities/profile</td>
 		<td>http://example.com/xAPI/activities/profile</td>
 	</tr>
-	<tr>
+	<tr id="2.2.s3.table1.row3">
 		<td>Agent Profile Resource</td>
 		<td>POST</td>
 		<td>agents/profile</td>
@@ -859,24 +859,24 @@ the following sections, and the information in this section applies to all three
 	</tr>
 </table>
 
-###### Requirements
+###### <a name="2.2.s4"></a>Requirements
 
-* A Learning Record Provider MAY send documents to any of the Document Resources for Activities and 
+* <a name="2.2.s4.b1"></a>A Learning Record Provider MAY send documents to any of the Document Resources for Activities and 
 Agents that the LRS does not have prior knowledge of. 
 
-* The LRS MUST NOT reject documents on the basis of not having prior knowledge of the Activity and/or Agent.
+* <a name="2.2.s4.b2"></a>The LRS MUST NOT reject documents on the basis of not having prior knowledge of the Activity and/or Agent.
 
-##### Last Modified
+##### <a name="2.2.s5"></a>Last Modified
 The "Last Modified" header is set by the LRS when returning single or multiple documents in response
 to a GET request. 
 
-###### Requirements
-* When returning a single document, the LRS SHOULD* include a "Last-Modified" header indicating when
+###### <a name="2.2.s6"></a>Requirements
+* <a name="2.2.s6.b1"></a>When returning a single document, the LRS SHOULD* include a "Last-Modified" header indicating when
 the document was last modified. 
-* When returning multiple documents, the LRS SHOULD* include a "Last-Modified" header indicating when
+* <a name="2.2.s6.b2"></a>When returning multiple documents, the LRS SHOULD* include a "Last-Modified" header indicating when
 the most recently modified document was last modified. 
 
-###### JSON Procedure with Requirements
+###### <a name="2.2.s7"></a>JSON Procedure with Requirements
 
 If a Learning Record Provider stores variables as JSON Objects in a document with content type application/json, 
 they can manipulate them as sets of variables using POST.
@@ -893,10 +893,10 @@ For example, a document contains:
 When an LRS receives a POST request with content type application/json for an existing document also of
 content type application/json, it MUST merge the posted document with the existing document. 
 In this context, merge is defined as:
-* de-serialize the Objects represented by each document.
-* for each property directly defined on the Object being posted, set the corresponding
+* <a name="2.2.s7.b1"></a>de-serialize the Objects represented by each document.
+* <a name="2.2.s7.b2"></a>for each property directly defined on the Object being posted, set the corresponding
 property on the existing Object equal to the value from the posted Object.    
-* store any valid json serialization of the existing Object as the document referenced in the request.
+* <a name="2.2.s7.b3"></a>store any valid json serialization of the existing Object as the document referenced in the request.
 
 Note that only top-level properties are merged, even if a top-level property is an Object. The entire contents of each 
 original property are replaced with the entire contents of each new property.
@@ -919,35 +919,35 @@ the resulting document stored in the LRS is:
 }
 ```
 
-###### Requirements
+###### <a name="2.2.s8"></a>Requirements
 
-* If the document being posted or any existing document does not have a Content-Type
+* <a name="2.2.s8.b1"></a>If the document being posted or any existing document does not have a Content-Type
 of "application/json", or if either document cannot be parsed as a JSON Object, the LRS MUST
 respond with HTTP status code `400 Bad Request`, and MUST NOT update the target document
 as a result of the request.
 
-* If the merge is successful, the LRS MUST respond with HTTP status code `204 No Content`.
+* <a name="2.2.s8.b2"></a>If the merge is successful, the LRS MUST respond with HTTP status code `204 No Content`.
 
-* If a Learning Record Provider needs to delete a property, it SHOULD use a PUT request to replace 
+* <a name="2.2.s8.b3"></a>If a Learning Record Provider needs to delete a property, it SHOULD use a PUT request to replace 
 the whole document as described below. 
 
 <a name="stateres"/> 
 
-### 2.3 State Resource
+### <a name="2.3">2.3</a> State Resource
 
-##### Description
+##### <a name="2.3.s1"></a>Description
 
 Generally, this is a scratch area for Learning Record Providers that do not have their own internal storage, 
 or need to persist state across devices. 
 
-##### Details
+##### <a name="2.3.s2"></a>Details
 
 The semantics of the call are driven by the "stateId" parameter. If it is included, the GET and DELETE methods will 
 act upon a single defined state document identified by "stateId". Otherwise, GET will return the available ids, 
 and DELETE will delete all state in the context given through the other parameters. This Resource has
 [Concurrency](#concurrency) controls associated with it.
 
-###### Single Document (PUT | POST | GET | DELETE)
+###### <a name="2.3.s3"></a>Single Document (PUT | POST | GET | DELETE)
 Example resource endpoint: http://example.com/xAPI/activities/state
 
 Stores, changes, fetches, or deletes the document specified by the given stateId that 
@@ -960,25 +960,25 @@ exists in the context of the specified Activity, Agent, and registration (if spe
 **Returns (GET):** `200 OK`, the State document 
 <table>
 	<tr><th>Parameter</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.3.s3.table1.row1">
 		<td>activityId</td>
 		<td>Activity id (IRI)</td>
 		<td>The Activity id associated with this state.</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.3.s3.table1.row2">
 		<td>agent</td>
 		<td>Agent object (JSON)</td>
 		<td>The Agent associated with this state.</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.3.s3.table1.row3">
 		<td>registration</td>
 		<td>UUID</td>
 		<td>The Registration associated with this state.</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.3.s3.table1.row4">
 		<td>stateId</td>
 		<td>String</td>
 		<td>The id for this state, within the given context.</td>
@@ -986,7 +986,7 @@ exists in the context of the specified Activity, Agent, and registration (if spe
 	</tr>
 </table>
 
-###### Multiple Document GET
+###### <a name="2.3.s4"></a>Multiple Document GET
 Example resource endpoint: http://example.com/xAPI/activities/state
 
 Fetches State Ids of all state data for this context (Activity + Agent \[ + registration if specified\]). 
@@ -999,25 +999,25 @@ Timestamp (exclusive).
 
 <table>
 	<tr><th>Parameter</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.3.s4.table1.row1">
 		<td>activityId</td>
 		<td>Activity id (IRI)</td>
 		<td>The Activity Id associated with these states.</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.3.s4.table1.row2">
 		<td>agent</td>
 		<td>Agent object (JSON)</td>
 		<td>The Agent associated with these states.</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.3.s4.table1.row3">
 		<td>registration</td>
 		<td>UUID</td>
 		<td>The Registration associated with these states.</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.3.s4.table1.row4">
 		<td>since</td>
 		<td>Timestamp</td>
 		<td>Only Ids of states stored since the specified Timestamp (exclusive) are returned.</td>
@@ -1025,7 +1025,7 @@ Timestamp (exclusive).
 	</tr>
 </table>
 
-###### Multiple Document DELETE
+###### <a name="2.3.s5"></a>Multiple Document DELETE
 Example resource endpoint: http://example.com/xAPI/activities/state
 
 Deletes all state data for this context (Activity + Agent \[+ registration if specified\]).  
@@ -1035,19 +1035,19 @@ Deletes all state data for this context (Activity + Agent \[+ registration if sp
 **Returns**: `204 No Content`  
 <table>
 	<tr><th>Parameter</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.3.s5.table1.row1">
 		<td>activityId</td>
 		<td>Activity Id (IRI)</td>
 		<td>The Activity Id associated with this state.</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.3.s5.table1.row2">
 		<td>agent</td>
 		<td>Agent object (JSON)</td>
 		<td>The Agent associated with this state.</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.3.s5.table1.row3">
 		<td>registration</td>
 		<td>UUID</td>
 		<td>The Registration associated with this state.</td>
@@ -1057,14 +1057,14 @@ Deletes all state data for this context (Activity + Agent \[+ registration if sp
 
 <a name="agentsres"/>
 
-### 2.4 Agents Resource
+### <a name="2.4">2.4</a> Agents Resource
 
 The Agents Resource provides a method to retrieve a special Object with combined information about an Agent derived from 
 an outside service, such as a directory service. This Resource has [Concurrency](#concurrency) controls associated with it.
 
-###### Combined Information GET 
+###### <a name="2.4.s1"></a>Combined Information GET
 
-###### Details
+###### <a name="2.4.s2"></a>Details
 Example resource endpoint: http://example.com/xAPI/agents
 
 Return a special, Person Object for a specified Agent. The Person Object is very similar to an Agent Object, 
@@ -1082,20 +1082,20 @@ It is not a Person Object, nor is it a Group.
 
 <table>
 	<tr><th>Parameter</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.4.s2.table1.row1">
 		<td>agent</td>
 		<td>Agent object (JSON)</td>
 		<td>The Agent representation to use in fetching expanded Agent information.</td>
 		<td>Required</td>
 	</tr>
-</table>  
+</table>
 
-###### Requirements
-* An LRS capable of returning multiple identifying properties for a Person 
+###### <a name="2.4.s3"></a>Requirements
+* <a name="2.4.s3.b1"></a>An LRS capable of returning multiple identifying properties for a Person 
 Object SHOULD require the connecting credentials have increased, explicitly 
 given permissions. 
-* An LRS SHOULD reject insufficiently privileged requests with 403 "Forbidden".
-* If an LRS does not have any additional information about an Agent to return, 
+* <a name="2.4.s3.b2"></a>An LRS SHOULD reject insufficiently privileged requests with 403 "Forbidden".
+* <a name="2.4.s3.b3"></a>If an LRS does not have any additional information about an Agent to return, 
 the LRS MUST still return a Person when queried, but that Person Object will only 
 include the information associated with the requested Agent. 
 
@@ -1103,67 +1103,67 @@ __Note:__ This means that if a request is made for an Agent which the LRS has no
 prior knowledge of, it will still return a Person object containing the information 
 about the Agent it received in the request. 
 
-###### Person Properties
+###### <a name="2.4.s4"></a>Person Properties
 
-###### Details
+###### <a name="2.4.s5"></a>Details
 
 <table>
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.4.s5.table1.row1">
 		<td>objectType</td>
 		<td>String</td>
 		<td>"Person"</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.4.s5.table1.row2">
 		<td>name</td>
 		<td>Array of strings.</td>
 		<td>List of names of Agents retrieved.</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.4.s5.table1.row3">
 		<td><a href="http://xmlns.com/foaf/spec/#term_mbox">mbox</a></td>
 		<td>Array of IRIs in the form "mailto:email address".</td>
 		<td>List of e-mail addresses of Agents retrieved.</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.4.s5.table1.row4">
 		<td><a href="http://xmlns.com/foaf/spec/#term_mbox_sha1sum">mbox_sha1sum</a></td>
 		<td>Array of strings.</td>
 		<td>List of the SHA1 hashes of mailto IRIs (such as go in an mbox property).</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.4.s5.table1.row5">
 		<td>openid*</td>
 		<td>Array of strings.</td>
 		<td>List of openids that uniquely identify the Agents retrieved.</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.4.s5.table1.row6">
 		<td>account*</td>
 		<td>Array of account objects.</td>
 		<td>List of accounts to match. Complete account Objects (homePage and name) 
 		MUST be provided.</td>
 		<td>Optional</td>
 	</tr>
-</table> 
+</table>
 
 See also: [Agent](#agent).
 
-###### Requirements
+###### <a name="2.4.s6"></a>Requirements
 
-* All array properties MUST be populated with members with the same definition as the similarly named property from Agent Objects.  
+* <a name="2.4.s6.b1"></a>All array properties MUST be populated with members with the same definition as the similarly named property from Agent Objects.  
 
-* Additional properties not listed here SHOULD* NOT be added to this object and each property MUST occur only once. 
+* <a name="2.4.s6.b2"></a>Additional properties not listed here SHOULD* NOT be added to this object and each property MUST occur only once. 
 
 <a name="activitiesres"/> 
 
-### 2.5 Activities Resource
+### <a name="2.5">2.5</a> Activities Resource
 
 The Activities Resource provides a method to retrieve a full description of an Activity from the LRS. 
 This Resource has [Concurrency](#concurrency) controls associated with it.
 
-###### Full Activity Object GET
+###### <a name="2.5.s1"></a>Full Activity Object GET
 Example resource endpoint: http://example.com/xAPI/activities
 
 Loads the complete Activity Object specified.  
@@ -1181,26 +1181,26 @@ Loads the complete Activity Object specified.
 	</td>
 </table>
 
-###### Requirements
+###### <a name="2.5.s2"></a>Requirements
 
-* If an LRS does not have a canonical definition of the Activity to return, the LRS SHOULD* still return an 
+* <a name="2.5.s2.b1"></a>If an LRS does not have a canonical definition of the Activity to return, the LRS SHOULD* still return an 
 Activity Object when queried.
 
 <a name="agentprofres"/>
 
-### 2.6 Agent Profile Resource
+### <a name="2.6">2.6</a> Agent Profile Resource
 
-###### Description
+###### <a name="2.6.s1"></a>Description
 
 The Agent Profile Resource is much like the State Resource, allowing for arbitrary key / document pairs to be saved 
 which are related to an Agent. 
 
-###### Details
+###### <a name="2.6.s2"></a>Details
 
 The semantics of the request are driven by the profileId parameter. If it is included, the GET method will act upon 
 a single defined document identified by "profileId". Otherwise, GET will return the available ids.  
 
-###### Single Agent or Profile (PUT | POST | GET | DELETE) 
+###### <a name="2.6.s3"></a>Single Agent or Profile (PUT | POST | GET | DELETE)
 
 Example resource endpoint: http://example.com/xAPI/agents/profile
 
@@ -1214,24 +1214,24 @@ Stores, changes, fetches, or deletes the specified profile document in the conte
 
 <table>
 	<tr><th>Parameter</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.6.s3.table1.row1">
 		<td>agent</td>
 		<td>Agent object (JSON)</td>
 		<td>The Agent associated with this profile.</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.6.s3.table1.row2">
 		<td>profileId</td>
 		<td>String</td>
 		<td>The profile Id associated with this profile.</td>
 		<td>Required</td>
 	</tr>
-</table>  
+</table>
 
 __Note:__ The agent parameter is an Agent Object and not a Group. Learning Record Providers wishing to store data
 against an Identified Group can use the Identified Group's identifier within an Agent Object. 
 
-###### Multiple Document GET 
+###### <a name="2.6.s4"></a>Multiple Document GET
 Example resource endpoint: http://example.com/xAPI/agents/profile
 
 Fetches Profile Ids of all profile entries for an Agent. If "since" parameter is specified, this is limited to entries 
@@ -1243,37 +1243,37 @@ that have been stored or updated since the specified Timestamp (exclusive).
 
 <table>
 	<tr><th>Parameter</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.6.s4.table1.row1">
 		<td>agent</td>
 		<td>Agent object (JSON)</td>
 		<td>The Agent associated with this profile.</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.6.s4.table1.row2">
 		<td>since</td>
 		<td>Timestamp</td>
 		<td>Only Ids of profiles stored since the specified Timestamp 
 			(exclusive) are returned.</td>
 		<td>Optional</td>
 	</tr>
-</table>  
+</table>
 
 <a name="actprofres"/> 
 
-### 2.7 Activity Profile Resource
+### <a name="2.7">2.7</a> Activity Profile Resource
 
-###### Description
+###### <a name="2.7.s1"></a>Description
 
 The Activity Profile Resource is much like the State Resource, allowing for arbitrary key / document pairs to be saved 
 which are related to an Activity. 
 
-###### Details
+###### <a name="2.7.s2"></a>Details
 
 The semantics of the request are driven by the profileId parameter. If it is included, 
 the GET method will act upon a single defined document identified by "profileId". 
 Otherwise, GET will return the available Ids.
 
-###### Single Document (PUT | POST | GET | DELETE)
+###### <a name="2.7.s3"></a>Single Document (PUT | POST | GET | DELETE)
 Example resource endpoint: http://example.com/xAPI/activities/profile
 
 Stores, changes, fetches, or deletes the specified profile document in the context of the specified Activity.  
@@ -1285,13 +1285,13 @@ Stores, changes, fetches, or deletes the specified profile document in the conte
 **Returns (GET):** `200 OK`, the Profile document  
 <table>
 	<tr><th>Parameter</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.7.s3.table1.row1">
 		<td>activityId</td>
 		<td>Activity Id (IRI)</td>
 		<td>The Activity Id associated with this profile.</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.7.s3.table1.row2">
 		<td>profileId</td>
 		<td>String</td>
 		<td>The profile Id associated with this profile.</td>
@@ -1299,7 +1299,7 @@ Stores, changes, fetches, or deletes the specified profile document in the conte
 	</tr>
 </table>
 
-###### Multiple Document GET
+###### <a name="2.7.s4"></a>Multiple Document GET
 Example resource endpoint: http://example.com/xAPI/activities/profile
 
 Fetches Profile Ids of all profile entries for an Activity. If "since" parameter is specified, this is limited to 
@@ -1310,14 +1310,14 @@ entries that have been stored or updated since the specified Timestamp (exclusiv
 **Returns:** `200 OK`, Array of Profile Ids  
 
 <table>
-	<tr><th>Parameter</th><th>Type</th><th>Description</th><th>Required</th><tr>
+	<tr id="2.7.s4.table1.row1"><th>Parameter</th><th>Type</th><th>Description</th><th>Required</th><tr>
 	<tr>
 		<td>activityId</td>
 		<td>Activity Id (IRI)</td>
 		<td>The Activity Id associated with these profiles.</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.7.s4.table1.row2">
 		<td>since</td>
 		<td>Timestamp</td>
 		<td>Only Ids of profiles stored since the specified Timestamp (exclusive) 
@@ -1329,20 +1329,20 @@ entries that have been stored or updated since the specified Timestamp (exclusiv
 
 <a name="aboutresource"/> 
 
-### 2.8 About Resource
+### <a name="2.8">2.8</a> About Resource
 
-###### Description
+###### <a name="2.8.s1"></a>Description
 
 Returns JSON Object containing information about this LRS, including the xAPI version supported.
 
-###### Rationale
+###### <a name="2.8.s2"></a>Rationale
 
 Primarily this resource exists to allow Clients that support multiple xAPI versions to decide which version to 
 use when communicating with the LRS. Extensions are included to allow other uses to emerge.
 
-###### Details
+###### <a name="2.8.s3"></a>Details
 
-###### Information GET
+###### <a name="2.8.s4"></a>Information GET
 
 Example resource endpoint: http://example.com/xAPI/about
 
@@ -1351,13 +1351,13 @@ Example resource endpoint: http://example.com/xAPI/about
 **Returns:** `200 OK`, JSON object containing basic metadata about this LRS
 <table border="1">
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.8.s4.table1.row1">
 		<td>version</td>
 		<td>Array of version strings</td>
 		<td>xAPI versions this LRS supports</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.8.s4.table1.row2">
 		<td>extensions</td>
 		<td><a href="#miscext">Object</a></td>
 		<td>A map of other properties as needed</td>
@@ -1366,114 +1366,114 @@ Example resource endpoint: http://example.com/xAPI/about
 
 </table>
 
-###### Requirements
+###### <a name="2.8.s5"></a>Requirements
 
-* An LRS MUST return the JSON document described above, with a version property that includes
+* <a name="2.8.s5.b1"></a>An LRS MUST return the JSON document described above, with a version property that includes
 the latest minor and patch version the LRS conforms to, for each major version.
-    * For version 1.0.0 of this specification, this means that "1.0.0" MUST be included;
+    * <a name="2.8.s5.b1.b1"></a>For version 1.0.0 of this specification, this means that "1.0.0" MUST be included;
     "0.9" and "0.95" MAY be included. (For the purposes of this requirement, "0.9" and "0.95"
     are considered major versions.)
-* Additional properties MUST NOT be added to this object outside of extensions and each 
+* <a name="2.8.s5.b2"></a>Additional properties MUST NOT be added to this object outside of extensions and each 
 property MUST occur only once.  
-* An LRS SHOULD allow unauthenticated access to this resource
-* An LRS MUST NOT reject requests based on their version header as would otherwise be 
+* <a name="2.8.s5.b3"></a>An LRS SHOULD allow unauthenticated access to this resource
+* <a name="2.8.s5.b4"></a>An LRS MUST NOT reject requests based on their version header as would otherwise be 
 required by [Versioning](#versioning).
 
 <a name="validation"/> 
 
-## 3.0 Data Validation
+## <a name="3.0">3.0</a> Data Validation
 
-###### Description
+###### <a name="3.0.s1"></a>Description
 
 The function of the LRS within the xAPI is to store and retrieve Statements. As long as it has sufficient information 
 to perform these tasks, it is expected that it does them. Validation of Statements in the Experience API is focused 
 solely on syntax, not semantics. Enforcing the rules that ensure valid meaning among Verb definitions, Activity types, 
 and extensions is the responsibility of the Learning Record Provider sending the Statement. 
 
-###### Requirements
+###### <a name="3.0.s2"></a>Requirements
 
-* The LRS SHOULD enforce rules regarding structure. 
-* The LRS SHOULD NOT enforce rules regarding meaning.  
+* <a name="3.0.s2.b1"></a>The LRS SHOULD enforce rules regarding structure. 
+* <a name="3.0.s2.b2"></a>The LRS SHOULD NOT enforce rules regarding meaning.  
 
 <a name="concurrency"/>
 
-### 3.1 Concurrency
+### <a name="3.1">3.1</a> Concurrency
 
-##### Description
+##### <a name="3.1.s1"></a>Description
 Concurrency control makes certain that a client does not PUT, POST or DELETE documents based on old
 data into an LRS.
 
-##### Details
+##### <a name="3.1.s2"></a>Details
 xAPI will use HTTP 1.1 entity tags ([ETags](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.19))
 to implement optimistic concurrency control in the portions of the API where PUT, POST or DELETE might
 overwrite or remove existing data, being:
 
-* State Resource
-* Agent Profile Resource 
-* Activity Profile Resource
+* <a name="3.1.s2.b1"></a>State Resource
+* <a name="3.1.s2.b2"></a>Agent Profile Resource 
+* <a name="3.1.s2.b3"></a>Activity Profile Resource
 
-##### Client Requirements
+##### <a name="3.1.s3"></a>Client Requirements
 The State Resource will permit PUT, POST and DELETE requests without concurrency headers, since state conflicts
 are unlikely. The requirements below only apply to Agent Profile Resource and Activity Profile Resource.
 
-* A Client making a PUT request to either the Agent Profile Resource or Activity Profile Resource MUST include the 
+* <a name="3.1.s3.b1"></a>A Client making a PUT request to either the Agent Profile Resource or Activity Profile Resource MUST include the 
 [If-Match](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.24) header or the 
 [If-None-Match](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.26) header.
 
-* A Client making a POST request to either the Agent Profile Resource or Activity Profile Resource SHOULD* include the 
+* <a name="3.1.s3.b2"></a>A Client making a POST request to either the Agent Profile Resource or Activity Profile Resource SHOULD* include the 
 [If-Match](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.24) header or the 
 [If-None-Match](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.26) header.
 
-* A Client making a DELETE request to either the Agent Profile Resource or Activity Profile Resource SHOULD* include the 
+* <a name="3.1.s3.b3"></a>A Client making a DELETE request to either the Agent Profile Resource or Activity Profile Resource SHOULD* include the 
 [If-Match](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.24) header.
 
-* Clients SHOULD* use the ETag value provided by the LRS rather than calculating it themselves. 
+* <a name="3.1.s3.b4"></a>Clients SHOULD* use the ETag value provided by the LRS rather than calculating it themselves. 
 
-##### LRS Requirements
+##### <a name="3.1.s4"></a>LRS Requirements
 
-* An LRS responding to a GET request MUST add an ETag HTTP header to the response.
-* An LRS responding to a GET request without using a transfer encoding or using the identity transfer encoding MUST 
+* <a name="3.1.s4.b1"></a>An LRS responding to a GET request MUST add an ETag HTTP header to the response.
+* <a name="3.1.s4.b2"></a>An LRS responding to a GET request without using a transfer encoding or using the identity transfer encoding MUST 
 calculate the value of the ETag header to be a hexadecimal string of the SHA-1 digest of the contents. This hexadecimal 
 string SHOULD be rendered using numbers and lowercase characters only; uppercase characters SHOULD NOT be used. 
 The requirement to calculate the ETag this way will be removed in a future version of the specification.
-* An LRS responding to a GET request using any non-identity transfer encoding MUST NOT calculate the included ETag as above, 
+* <a name="3.1.s4.b3"></a>An LRS responding to a GET request using any non-identity transfer encoding MUST NOT calculate the included ETag as above, 
 due to the interpretation of ETags by existing web infrastructure.
-* As defined in [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.19), an LRS responding to a GET 
+* <a name="3.1.s4.b4"></a>As defined in [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.19), an LRS responding to a GET 
 request MUST enclose the header in quotes.  
-* An LRS responding to a PUT request MUST handle the [If-Match](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.24) 
+* <a name="3.1.s4.b5"></a>An LRS responding to a PUT request MUST handle the [If-Match](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.24) 
 header as described in RFC2616, HTTP 1.1 if it contains an ETag, in order to detect modifications made after the Client 
 last fetched the document.
-* An LRS responding to a PUT request MUST handle the [If-None-Match](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.26) header as described in 
+* <a name="3.1.s4.b6"></a>An LRS responding to a PUT request MUST handle the [If-None-Match](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.26) header as described in 
 RFC2616, HTTP 1.1 if it contains "*", in order to to detect when there is a resource present that the Client is not aware of.
-* An LRS responding to a POST or DELETE request SHOULD* handle the [If-Match](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.24) header as described in RFC2616, HTTP 1.1 if it contains 
+* <a name="3.1.s4.b7"></a>An LRS responding to a POST or DELETE request SHOULD* handle the [If-Match](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.24) header as described in RFC2616, HTTP 1.1 if it contains 
 an ETag, in order to detect modifications made after the Client last fetched the document.
-* An LRS responding to a POST request SHOULD* handle the 
+* <a name="3.1.s4.b8"></a>An LRS responding to a POST request SHOULD* handle the 
 [If-None-Match](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.26) header as described in RFC2616, HTTP 1.1 if it 
 contains "*", in order to to detect when there is a resource present that the Client is not aware of.
 
 If the header precondition in either of the PUT request cases above fails, the LRS:
 
-* MUST return HTTP status 412 "Precondition Failed".
-* MUST NOT make a modification to the resource. 
+* <a name="3.1.s4.b9"></a>MUST return HTTP status 412 "Precondition Failed".
+* <a name="3.1.s4.b10"></a>MUST NOT make a modification to the resource. 
 
 If the header precondition in any of the POST or DELETE request cases above fails, the LRS:
 
-* SHOULD* return HTTP status 412 "Precondition Failed".
-* SHOULD* NOT make a modification to the resource. 
+* <a name="3.1.s4.b11"></a>SHOULD* return HTTP status 412 "Precondition Failed".
+* <a name="3.1.s4.b12"></a>SHOULD* NOT make a modification to the resource. 
 
 If a PUT request is received without either header for a resource that already exists, the LRS:
 
-* MUST return HTTP status 409 "Conflict".
-* MUST return a response explaining that the Learning Record Provider SHOULD
-	- check the current state of the resource.
-	- set the "If-Match" header with the current ETag to resolve the conflict.
-* MUST NOT make a modification to the resource.
+* <a name="3.1.s4.b13"></a>MUST return HTTP status 409 "Conflict".
+* <a name="3.1.s4.b14"></a>MUST return a response explaining that the Learning Record Provider SHOULD
+	* <a name="3.1.s4.b14.b1"></a>check the current state of the resource.
+	* <a name="3.1.s4.b14.b2"></a>set the "If-Match" header with the current ETag to resolve the conflict.
+* <a name="3.1.s4.b15"></a>MUST NOT make a modification to the resource.
 
 <a name="errorcodes" /> 
 
-### 3.2 Error Codes
+### <a name="3.2">3.2</a> Error Codes
 
-##### Description
+##### <a name="3.2.s1"></a>Description
 
 This specification defines requirements, some of which are imposed on the LRS to accept or reject requests,
 return responses and perform other behaviors in certain conditions. In cases where an LRS is required 
@@ -1513,155 +1513,155 @@ The LRS can also reject requests or revoke credentials in case of suspected mali
 an unexpected large number of requests made in a short period of time. It is expected that that limits 
 will be sufficiently high such that the rate of requests made during conformance testing will not trigger any rate limits.
 
-##### Details 
+##### <a name="3.2.s2"></a>Details
 The list below offers some general guidance on HTTP error codes that could
 be returned from various methods in the API. 
 
-* `400 Bad Request` - Indicates
+* <a name="3.2.s2.b1"></a>`400 Bad Request` - Indicates
 an error condition caused by an invalid or missing argument. The term 
 "invalid arguments" includes malformed JSON or invalid Object structures.
 
-* `401 Unauthorized` - Indicates that authentication is required, or in the 
+* <a name="3.2.s2.b2"></a>`401 Unauthorized` - Indicates that authentication is required, or in the 
 case authentication has been posted in the request, that the given credentials 
 have been refused.
 
-* `403 Forbidden` - Indicates that the request is unauthorized for the given 
+* <a name="3.2.s2.b3"></a>`403 Forbidden` - Indicates that the request is unauthorized for the given 
 credentials. Note this is different than refusing the credentials given. In 
 this case, the credentials have been validated, but the authenticated Client 
 is not allowed to perform the given action.
 
-* `404 Not Found` - Indicates the requested resource was not found. May be 
+* <a name="3.2.s2.b4"></a>`404 Not Found` - Indicates the requested resource was not found. May be 
 returned by any method that returns a uniquely identified resource, for 
 instance, any State or Agent Profile or Activity Profile Resource request targeting a specific document, 
 or the method to retrieve a single Statement.
 
-* `409 Conflict` - Indicates an error condition due to a conflict with the 
+* <a name="3.2.s2.b5"></a>`409 Conflict` - Indicates an error condition due to a conflict with the 
 current state of a resource, in the case of State Resource, Agent Profile or Activity Profile Resource
 requests, or in the Statement PUT or POST calls. See Section [6.3 Concurrency](#concurrency) for more details.
 
-* `412 Precondition Failed` - Indicates an error condition due to a failure of 
+* <a name="3.2.s2.b6"></a>`412 Precondition Failed` - Indicates an error condition due to a failure of 
 a precondition posted with the request, in the case of State or Agent Profile or Activity Profile 
 API requests. See Section [6.3 Concurrency](#concurrency) for more details.
 
-* `413 Request Entity Too Large` - Indicates that the LRS has rejected the Statement or 
+* <a name="3.2.s2.b7"></a>`413 Request Entity Too Large` - Indicates that the LRS has rejected the Statement or 
 document because its size (or the size of an Attachment included in the request) is larger than 
 the maximum allowed by the LRS. 
 
-* `429 Too Many Requests` - Indicates that the LRS has rejected the request because it has received 
+* <a name="3.2.s2.b8"></a>`429 Too Many Requests` - Indicates that the LRS has rejected the request because it has received 
 too many requests from the Client or set of credentials in a given amount of time. 
 
-* `500 Internal Server Error` - Indicates a general error condition, typically an 
+* <a name="3.2.s2.b9"></a>`500 Internal Server Error` - Indicates a general error condition, typically an 
 unexpected exception in processing on the server.
 
-##### Requirements
+##### <a name="3.2.s3"></a>Requirements
 
-* An LRS MUST return the error code most appropriate to the error condition from the list above.
+* <a name="3.2.s3.b1"></a>An LRS MUST return the error code most appropriate to the error condition from the list above.
 
-* An LRS SHOULD return a message in the response explaining the cause of the error.
+* <a name="3.2.s3.b2"></a>An LRS SHOULD return a message in the response explaining the cause of the error.
 
-* An LRS SHOULD use content negotiation as described in [RFC 7231](http://tools.ietf.org/html/rfc7231#section-5.3) 
+* <a name="3.2.s3.b3"></a>An LRS SHOULD use content negotiation as described in [RFC 7231](http://tools.ietf.org/html/rfc7231#section-5.3) 
 to decide the format of the error.
 
-* An LRS SHOULD allow for plain text, HTML, and JSON responses for errors (using content negotiation).
+* <a name="3.2.s3.b4"></a>An LRS SHOULD allow for plain text, HTML, and JSON responses for errors (using content negotiation).
 
-* A Learning Record Provider SHOULD send an Accept header with requests to enable content negotiation.
+* <a name="3.2.s3.b5"></a>A Learning Record Provider SHOULD send an Accept header with requests to enable content negotiation.
 
-* The LRS SHOULD* reject any request with `HTTP 400 Bad Request` status where the content type header does not match the content 
+* <a name="3.2.s3.b6"></a>The LRS SHOULD* reject any request with `HTTP 400 Bad Request` status where the content type header does not match the content 
 included in the request or where the structure of the request does not match the structure outlined in this specification 
 for a particular content type. For example, if the content of the request is formatted as JSON, the content type is expected 
 to be application/json. If the content type is application/x-www-form-urlencoded it is expected that the request will include a 
 method parameter as outlined in [Alternate Request Syntax](#alt-request-syntax).
 
-* The LRS MUST reject with `HTTP 400 Bad Request` status any requests that use any parameters which the LRS does 
+* <a name="3.2.s3.b7"></a>The LRS MUST reject with `HTTP 400 Bad Request` status any requests that use any parameters which the LRS does 
 not recognize in their intended context in this specification. 
 ( __Note:__ LRSs MAY recognize and act on parameters not in this specification).
 
-* The LRS MUST reject with `HTTP 400 Bad Request` status any requests that use any parameters matching parameters 
+* <a name="3.2.s3.b8"></a>The LRS MUST reject with `HTTP 400 Bad Request` status any requests that use any parameters matching parameters 
 described in this specification in all but case.
 
-* The LRS MUST reject a batch of statements if any Statement within that batch is rejected.
+* <a name="3.2.s3.b9"></a>The LRS MUST reject a batch of statements if any Statement within that batch is rejected.
 
-* The LRS MUST reject with `HTTP 403 Forbidden` status any request rejected by the LRS where the credentials 
+* <a name="3.2.s3.b10"></a>The LRS MUST reject with `HTTP 403 Forbidden` status any request rejected by the LRS where the credentials 
 associated with the request do not have permission to make that request. 
 
-* The LRS MUST reject with `HTTP 413 Request Entity Too Large` status any request rejected by the LRS where the 
+* <a name="3.2.s3.b11"></a>The LRS MUST reject with `HTTP 413 Request Entity Too Large` status any request rejected by the LRS where the 
 size of the Attachment, Statement or document is larger than the maximum allowed by the LRS.
 
-* The LRS MAY choose any Attachment, Statement and document size limits and MAY vary this limit on any basis, e.g., per authority.
+* <a name="3.2.s3.b12"></a>The LRS MAY choose any Attachment, Statement and document size limits and MAY vary this limit on any basis, e.g., per authority.
 
-* The LRS MUST reject with `429 Too Many Requests` status any request rejected by the LRS where the request is rejected due 
+* <a name="3.2.s3.b13"></a>The LRS MUST reject with `429 Too Many Requests` status any request rejected by the LRS where the request is rejected due 
 to too many requests being received by a particular Client or set of credentials in a given amount of time. 
 
-* The LRS MAY choose any rate limit and MAY vary this limit on any basis, e.g., per authority.
+* <a name="3.2.s3.b14"></a>The LRS MAY choose any rate limit and MAY vary this limit on any basis, e.g., per authority.
 
 The following requirements exist for the purposes of conformance testing, to ensure that any limitations or permissions implemented 
 by the LRS do not affect the running of conformance testing software. 
 
-* The LRS SHOULD* be configurable not to reject any requests from a particular set of credentials on the basis of permissions. 
+* <a name="3.2.s3.b15"></a>The LRS SHOULD* be configurable not to reject any requests from a particular set of credentials on the basis of permissions. 
 This set of credentials SHOULD* be used for conformance testing but MAY be deleted/deactivated on live systems. 
 
-* The LRS MUST be configurable to accept Attachments, Statements or documents of any reasonable size (see above).
+* <a name="3.2.s3.b16"></a>The LRS MUST be configurable to accept Attachments, Statements or documents of any reasonable size (see above).
 
-* The LRS MUST be configurable to accept requests at any reasonable rate. 
+* <a name="3.2.s3.b17"></a>The LRS MUST be configurable to accept requests at any reasonable rate. 
 
 <a name="versioning"/> 
 
-### 3.3 Versioning
+### <a name="3.3">3.3</a> Versioning
 
-###### Rationale
+###### <a name="3.3.s1"></a>Rationale
 
 Future revisions of the specification might introduce changes such as properties added to Statements. Using Semantic 
 Versioning will allow Clients and LRSs to remain interoperable as the specification changes.
 
-###### Details
+###### <a name="3.3.s2"></a>Details
 
 Starting with 1.0.0, xAPI will be versioned according to [Semantic Versioning 1.0.0](http://semver.org/spec/v1.0.0.html).  
 Every request from a Client and every response from the LRS includes an HTTP header with the name “X-Experience-API-Version" 
 and the version as the value. For example, ``X-Experience-API-Version : 1.0.3`` for version 1.0.3; 
 see the [Revision History](#Appendix1A) for the current version of this specification. 
 
-###### LRS Requirements
+###### <a name="3.3.s3"></a>LRS Requirements
 
-* The LRS MUST include the "X-Experience-API-Version" header in every response.
-* The LRS MUST set this header to the latest patch version.
-* The LRS MUST accept requests with a version header of "1.0" as if the version header was "1.0.0".
-* The LRS MUST reject requests with version header prior to "1.0.0" unless such requests are routed to a 
+* <a name="3.3.s3.b1"></a>The LRS MUST include the "X-Experience-API-Version" header in every response.
+* <a name="3.3.s3.b2"></a>The LRS MUST set this header to the latest patch version.
+* <a name="3.3.s3.b3"></a>The LRS MUST accept requests with a version header of "1.0" as if the version header was "1.0.0".
+* <a name="3.3.s3.b4"></a>The LRS MUST reject requests with version header prior to "1.0.0" unless such requests are routed to a 
 fully conformant implementation of the prior version specified in the header.
-* The LRS MUST accept requests with a version header starting with "1.0." if the request is otherwise valid. 
-* The LRS MUST reject requests with a version header of "1.1.0" or greater.
-* The LRS MUST make these rejects by responding with an HTTP 400 error including a short description of the problem.
+* <a name="3.3.s3.b5"></a>The LRS MUST accept requests with a version header starting with "1.0." if the request is otherwise valid. 
+* <a name="3.3.s3.b6"></a>The LRS MUST reject requests with a version header of "1.1.0" or greater.
+* <a name="3.3.s3.b7"></a>The LRS MUST make these rejects by responding with an HTTP 400 error including a short description of the problem.
 
-###### Client Requirements
+###### <a name="3.3.s4"></a>Client Requirements
 
-* The Client MUST include the "X-Experience-API-Version" header in every request.
-* The Client MUST set this header to the latest patch version.
-* The Client SHOULD tolerate receiving responses with a version of "1.0.0" or later.
-* The Client SHOULD tolerate receiving data structures with additional properties.
-* The Client SHOULD ignore any properties not defined in version 1.0.0 of the spec.
+* <a name="3.3.s4.b1"></a>The Client MUST include the "X-Experience-API-Version" header in every request.
+* <a name="3.3.s4.b2"></a>The Client MUST set this header to the latest patch version.
+* <a name="3.3.s4.b3"></a>The Client SHOULD tolerate receiving responses with a version of "1.0.0" or later.
+* <a name="3.3.s4.b4"></a>The Client SHOULD tolerate receiving data structures with additional properties.
+* <a name="3.3.s4.b5"></a>The Client SHOULD ignore any properties not defined in version 1.0.0 of the spec.
 
-###### Conversion Requirements
+###### <a name="3.3.s5"></a>Conversion Requirements
 
-* Statements of newer versions MUST NOT be converted into a prior version format, e.g., in order to handle version differences.
-* Statements of prior versions MAY be converted into a newer version only by following the methods described in
+* <a name="3.3.s5.b1"></a>Statements of newer versions MUST NOT be converted into a prior version format, e.g., in order to handle version differences.
+* <a name="3.3.s5.b2"></a>Statements of prior versions MAY be converted into a newer version only by following the methods described in
 [Appendix A: Converting Statements to 1.0.0](Appendix3A).
 
 
 <a name="authentication"/>
 
-## 4.0 Authentication
+## <a name="4.0">4.0</a> Authentication
 
-###### Rationale
+###### <a name="4.0.s1"></a>Rationale
 
 In order to balance interoperability and the varying security requirements of different environments, several 
 authentication options are defined.
 
-###### Details
+###### <a name="4.0.s2"></a>Details
 The following authentication methods are defined within the specification. Any given LRS will implement at least one 
 of these methods and might implement additional methods not defined within this specification. 
 
-* [OAuth 1.0 (RFC 5849)](http://tools.ietf.org/html/rfc5849), with signature methods of "HMAC-SHA1", "RSA-SHA1", and "PLAINTEXT"
-* [HTTP Basic Authentication](http://tools.ietf.org/html/rfc7235)
-* Common Access Cards
+* <a name="4.0.s2.b1"></a>[OAuth 1.0 (RFC 5849)](http://tools.ietf.org/html/rfc5849), with signature methods of "HMAC-SHA1", "RSA-SHA1", and "PLAINTEXT"
+* <a name="4.0.s2.b2"></a>[HTTP Basic Authentication](http://tools.ietf.org/html/rfc7235)
+* <a name="4.0.s2.b3"></a>Common Access Cards
 
 While Common Access Cards are defined as an authentication option within this specification, the implementation details of 
 this authentication method are not defined. The xAPI Working Group encourages LRS developers implementing Common Access Cards 
@@ -1671,16 +1671,16 @@ specification.
 No further details are provided to describe HTTP Basic Authentication as this authentication method
 is clearly and completely defined in [RFC 7235](http://tools.ietf.org/html/rfc7235). 
 
-###### Requirements
+###### <a name="4.0.s3"></a>Requirements
 
-* The LRS MUST support authentication using at least one of the authentication methods defined in this specification.
+* <a name="4.0.s3.b1"></a>The LRS MUST support authentication using at least one of the authentication methods defined in this specification.
 
-* The LRS MUST handle making, or delegating, decisions on the validity of Statements, and determining what operations 
+* <a name="4.0.s3.b2"></a>The LRS MUST handle making, or delegating, decisions on the validity of Statements, and determining what operations 
 might be performed based on the credentials used.
 
 <a name="authdefs"/>
 
-### 4.1 OAuth 1.0 Authentication Scenarios and Methods
+### <a name="4.1">4.1</a> OAuth 1.0 Authentication Scenarios and Methods
 
 The matrix and requirements below describe the possible authentication scenarios used within OAuth and recommends the 
 authentication workflow to be used in these scenarios. The process described for each scenario is not intended 
@@ -1696,62 +1696,62 @@ A **known user** is a user account on the LRS, or on a system which the LRS trus
 
 <table border="1">
 <tr><th></th><th>Known user</th><th>User unknown</th></tr>
-<tr>
+<tr id="4.1.table1.row1">
 <td>Application is registered</td>
 <td>Standard workflow for OAuth.</td>
 <td>LRS trusts application to access xAPI without additional user credentials. OAuth token steps are not invoked</td>
 </tr>
-<tr>
+<tr id="4.1.table1.row2">
 <td>Application is not registered</td>
 <td>The application Agent is not identified as a registered Agent and the LRS cannot make assumptions on its identity.</td>
 <td></br></td>
 </tr>
-<tr>
+<tr id="4.1.table1.row3">
 <td>No application</td>
 <td>HTTP Basic Authentication is used instead of OAuth, since no application is involved.</td>
 <td></br></td>
 </tr>
-<tr>
+<tr id="4.1.table1.row4">
 <td>No authentication</td>
 <td align="center"colspan="2">MAY be supported by the LRS, possibly for testing purposes.</td>
 
 </tr>
 
-</table> 
+</table>
 
-##### Requirements
+##### <a name="4.1.s2"></a>Requirements
 
-* The LRS MUST record the application's name and a unique consumer key (identifier).
-* The LRS MUST provide a mechanism to complete this registration, or delegate to another system that provides 
+* <a name="4.1.s2.b1"></a>The LRS MUST record the application's name and a unique consumer key (identifier).
+* <a name="4.1.s2.b2"></a>The LRS MUST provide a mechanism to complete this registration, or delegate to another system that provides 
 such a mechanism.
-* The LRS MUST be able to be configured for complete support of the xAPI:
-	* With any of the methods below.
-	* In any of the workflow scenarios below.
-* The LRS MAY (for security reasons): 
-	* Support a subset of the methods below.
-	* Limit the known users or registered applications.
-* The LRS SHOULD at a minimum supply OAuth with "HMAC-SHA1" and "RSA-SHA1" signatures.
-
-###### Application registered + known user Process and Requirements
+* <a name="4.1.s2.b3"></a>The LRS MUST be able to be configured for complete support of the xAPI:
+	* <a name="4.1.s2.b3.b1"></a>With any of the methods below.
+	* <a name="4.1.s2.b3.b2"></a>In any of the workflow scenarios below.
+* <a name="4.1.s2.b4"></a>The LRS MAY (for security reasons): 
+	* <a name="4.1.s2.b4.b1"></a>Support a subset of the methods below.
+	* <a name="4.1.s2.b4.b2"></a>Limit the known users or registered applications.
+* <a name="4.1.s2.b5"></a>The LRS SHOULD at a minimum supply OAuth with "HMAC-SHA1" and "RSA-SHA1" signatures.
+
+###### <a name="4.1.s3"></a>Application registered + known user Process and Requirements
 **Process:** The standard workflow for OAUth 1.0 is used. 
 
 **Requirements:**
-* The LRS MUST support the endpoints in section [6.4.2 OAuth Authorization Scope](#oauthscope) to complete the 
+* <a name="4.1.s3.b1"></a>The LRS MUST support the endpoints in section [6.4.2 OAuth Authorization Scope](#oauthscope) to complete the 
 standard OAuth workflow (details not in this specification).
-* If this form of authentication is used to record Statements and no authority is specified, the LRS SHOULD 
+* <a name="4.1.s3.b2"></a>If this form of authentication is used to record Statements and no authority is specified, the LRS SHOULD 
 record the authority as a group consisting of an Agent representing the registered application, and an Agent 
 representing the known user.
 
-###### Application registered + user unknown Process and Requirements
+###### <a name="4.1.s4"></a>Application registered + user unknown Process and Requirements
 **Process:** 
 The LRS honors requests that are signed using OAuth with the registered application's credentials and with an empty token 
 and token secret.
 
 **Requirements:**
-* If this form of authentication is used to record Statements, the LRS SHOULD record the authority as the Agent representing 
+* <a name="4.1.s4.b1"></a>If this form of authentication is used to record Statements, the LRS SHOULD record the authority as the Agent representing 
 the registered application.
 
-###### Application Not Registered + Known User Process and Requirements
+###### <a name="4.1.s5"></a>Application Not Registered + Known User Process and Requirements
 **Process:**
 The Learning Record Provider uses a consumer secret consisting of an empty string to call the Temporary Credential 
 Request endpoint specifying the "consumer_name" and other usual parameters.  The "consumer_name" contains a string 
@@ -1764,22 +1764,22 @@ plus a warning that the identity of the application requesting authorization can
 Otherwise the process follows the standard OAuth workflow. 
 
 **Requirements:**
-* If this form of authentication is used to record Statements, the LRS MUST record an authority that includes both 
+* <a name="4.1.s5.b1"></a>If this form of authentication is used to record Statements, the LRS MUST record an authority that includes both 
 that application and the authenticating user, as a group, since OAuth specifies an application.
 
-###### No Application + Known User Process and Requirements
+###### <a name="4.1.s6"></a>No Application + Known User Process and Requirements
 **Process:**
 Use a username/password combination provided by the LRS for use by the known user.
 
 **Requirements:**
-* If this form of authentication is used to record Statements, the LRS SHOULD 
+* <a name="4.1.s6.b1"></a>If this form of authentication is used to record Statements, the LRS SHOULD 
 record the authority as the Agent representing the known user.
 
-###### No Authorization Process and Requirements
+###### <a name="4.1.s7"></a>No Authorization Process and Requirements
 
-* Requests MUST include headers for HTTP Basic Authentication based on a username and password containing zero or
+* <a name="4.1.s7.b1"></a>Requests MUST include headers for HTTP Basic Authentication based on a username and password containing zero or
 more space characters. 
-* Requests SHOULD* include headers for HTTP Basic Authentication based on a username and password each consisting of 
+* <a name="4.1.s7.b2"></a>Requests SHOULD* include headers for HTTP Basic Authentication based on a username and password each consisting of 
 an empty string. In this case the HTTP Basic Authentication header will be `Basic ` followed by a base64 encoded 
 version of the string `:`.  This results in the string `Basic Og==`.
 
@@ -1788,9 +1788,9 @@ HTTP Basic Authentication challenge.
 
 <a name="oauthscope"/> 
 
-### 4.2 OAuth 1.0 Authorization Scope
+### <a name="4.2">4.2</a> OAuth 1.0 Authorization Scope
 
-##### Description
+##### <a name="4.2.s1"></a>Description
 These are recommendations for scopes designed to enable an LRS and an application communicating using the xAPI to 
 negotiate a level of access which accomplishes what the application needs while minimizing the potential for misuse. 
 The limitations of each scope are in addition to any security limitations placed on the user account associated 
@@ -1801,20 +1801,20 @@ despite this section describing requirements for LRS supporting [OAuth 1.0](http
 
 The requirements in this section only apply if the LRS supports OAuth 1.0.
 
-##### Details
+##### <a name="4.2.s2"></a>Details
 
 The following table lists xAPI scope values:  
 <table>
 	<tr><th>Scope</th><th>Permission</th></tr>
-	<tr><td>statements/write</td><td>write any Statement</td></tr>
-	<tr>
+	<tr id="4.2.s2.table1.row1"><td>statements/write</td><td>write any Statement</td></tr>
+	<tr id="4.2.s2.table1.row2">
 		<td>statements/read/mine</td>
 		<td>read Statements written by "me", that is with an authority 
 			matching what the LRS would assign if writing a Statement with 
 			the current token.
 		</td>
 	</tr>
-	<tr><td>statements/read</td><td>read any Statement</td>
+	<tr id="4.2.s2.table1.row3"><td>statements/read</td><td>read any Statement</td>
 	<tr>
 		<td>state</td>
 		<td>read/write state data, limited to Activities and Actors 
@@ -1822,7 +1822,7 @@ The following table lists xAPI scope values:
 			possible to determine this relationship.
 		</td>
 	</tr>
-	<tr>
+	<tr id="4.2.s2.table1.row4">
 		<td>define</td>
 		<td>(re)Define Activities and Actors. If storing a Statement 
 			when this is not granted, Ids will be saved and the LRS 
@@ -1831,61 +1831,61 @@ The following table lists xAPI scope values:
 			Actors or Activities.
 		</td>
 	</tr>
-	<tr>
+	<tr id="4.2.s2.table1.row5">
 		<td>profile</td>
 		<td>read/write profile data, limited to Activities and Actors 
 			associated with the current token to the extent it is 
 			possible to determine this relationship.
 		</td>
 	</tr>
-	<tr><td>all/read</td><td>unrestricted read access</td></tr>
-	<tr><td>all</td><td>unrestricted access</td></tr>
+	<tr id="4.2.s2.table1.row6"><td>all/read</td><td>unrestricted read access</td></tr>
+	<tr id="4.2.s2.table1.row7"><td>all</td><td>unrestricted access</td></tr>
 </table>
 
-###### OAuth Extended Parameters  
+###### <a name="4.2.s3"></a>OAuth Extended Parameters
 Note that the parameters "consumer_name" and "scope" are not part of OAuth 1.0, and therefore if used MUST be passed 
 as query string or form parameters, not in the OAuth header.  
 
-###### OAuth Endpoints  
+###### <a name="4.2.s4"></a>OAuth Endpoints
 <table>
 	<tr>
 		<th>Name</th>
 		<th>Endpoint</th>
 		<th>Example</th>
 	</tr>
-	<tr>
+	<tr id="4.2.s4.table1.row1">
 		<td>Temporary Credential Request</td>
 		<td>OAuth/initiate</td>
 		<td>http://example.com/xAPI/OAuth/initiate</td>
 	</tr>
-	<tr>
+	<tr id="4.2.s4.table1.row2">
 		<td>Resource Owner Authorization</td>
 		<td>OAuth/authorize</td>
 		<td>http://example.com/xAPI/OAuth/authorize</td>
 	</tr>
-	<tr>
+	<tr id="4.2.s4.table1.row3">
 		<td>Token Request</td>
 		<td>OAuth/token</td>
 		<td>http://example.com/xAPI/OAuth/token </td>
 	</tr>
 </table>
 
-##### Example
+##### <a name="4.2.s5"></a>Example
 The list of scopes determines the set of permissions that is being requested. For example, an instructor might grant 
 "statements/read" to an application (Client), but the LRS would still limit that tool to Statements that the instructor could 
 read if querying the LRS with their credentials directly (such as Statements relating to their students).
 
-##### Requirements
+##### <a name="4.2.s6"></a>Requirements
 
-* The LRS MUST accept a scope parameter as defined in [OAuth 2.0](http://tools.ietf.org/html/rfc6749#section-3.3).
-* The LRS MUST assume a requested scope of "statements/write" and "statements/read/mine" if no scope is specified.
-* The LRS MUST support the scope of "all" as a minimum.
-* The LRS MAY support other scopes.
-* The Client SHOULD request only the minimal needed scopes, to increase the chances that the request will be granted.
+* <a name="4.2.s6.b1"></a>The LRS MUST accept a scope parameter as defined in [OAuth 2.0](http://tools.ietf.org/html/rfc6749#section-3.3).
+* <a name="4.2.s6.b2"></a>The LRS MUST assume a requested scope of "statements/write" and "statements/read/mine" if no scope is specified.
+* <a name="4.2.s6.b3"></a>The LRS MUST support the scope of "all" as a minimum.
+* <a name="4.2.s6.b4"></a>The LRS MAY support other scopes.
+* <a name="4.2.s6.b5"></a>The Client SHOULD request only the minimal needed scopes, to increase the chances that the request will be granted.
 
 <a name="security"/>
 
-## 5.0 Security 
+## <a name="5.0">5.0</a> Security 
 
 Security beyond authentication (including the interpretation of OAuth authorization scopes) is beyond the current 
 scope of this document and left to the individual LRS provider as an implementation detail. Implementors are encouraged 
@@ -1896,63 +1896,63 @@ security best practices. This effort has begun at [xAPIsec](https://github.com/x
 Participation is highly encouraged.
 
 <a name="append3"/>
-## Appendices
+## <a name="5.0.s1"></a>Appendices
 
 <a name="Appendix3A"/>
 
-### Appendix A: Converting Statements to 1.0.0
+### <a name="A">Appendix A</a>: Converting Statements to 1.0.0
 
-######Rationale
+###### <a name="A.s1"></a>Rationale
 This is a 1.0.0 specification, and as such implementers do not have to consider prior versions of the specification. 
 However, prior versions did see notable adoption. This data conversion is specified in order to preserve the data 
 tracked using earlier versions, and make it available to new implementers in a consistent manner.
 
-######Details
+###### <a name="A.s2"></a>Details
 
-######Conversion of Statements created based on version 0.9
+###### <a name="A.s3"></a>Conversion of Statements created based on version 0.9
 
 A 1.0.0 Client or other system converting a Statement created in 0.9 MUST follow the steps below:
 
-* If the Statement has been voided or uses Verbs, Activity types, or properties not included in the
+* <a name="A.s3.b1"></a>If the Statement has been voided or uses Verbs, Activity types, or properties not included in the
  0.9 specification, do not convert it.
-* Prefix "verb" with "http://adlnet.gov/expapi/verbs/".
-* Prefix any Activity ids which are not full absolute IRIs with "tag:adlnet.gov,2013:expapi:0.9:activities:"
-* Prefix any extension keys which are not full absolute IRIs with "tag:adlnet.gov,2013:expapi:0.9:extensions:"
-* Prefix Activity types with "http://adlnet.gov/expapi/activities/"
-* for each Agent (Actor):
-    * Search for Inverse Functional Identifiers in this order: "mbox, mbox_sha1sum, openid,
+* <a name="A.s3.b2"></a>Prefix "verb" with "http://adlnet.gov/expapi/verbs/".
+* <a name="A.s3.b3"></a>Prefix any Activity ids which are not full absolute IRIs with "tag:adlnet.gov,2013:expapi:0.9:activities:"
+* <a name="A.s3.b4"></a>Prefix any extension keys which are not full absolute IRIs with "tag:adlnet.gov,2013:expapi:0.9:extensions:"
+* <a name="A.s3.b5"></a>Prefix Activity types with "http://adlnet.gov/expapi/activities/"
+* <a name="A.s3.b6"></a>for each Agent (Actor):
+    * <a name="A.s3.b6.b1"></a>Search for Inverse Functional Identifiers in this order: "mbox, mbox_sha1sum, openid,
     account". Keep the first populated Inverse Functional Identifier found and discard the rest.
-    * For the above Inverse Functional Identifier, take the first element in the array and
+    * <a name="A.s3.b6.b2"></a>For the above Inverse Functional Identifier, take the first element in the array and
     use that as the value of that Inverse Functional Identifier property, discarding any
     remaining elements.
-    * If the "name" property is present, set it equal to the first element in the "name"
+    * <a name="A.s3.b6.b3"></a>If the "name" property is present, set it equal to the first element in the "name"
     array, discard the remaining elements.
-    * Remove all remaining properties.
-* Remove the "voided" property from the Statement, if present. Remember, if the value of the
+    * <a name="A.s3.b6.b4"></a>Remove all remaining properties.
+* <a name="A.s3.b7"></a>Remove the "voided" property from the Statement, if present. Remember, if the value of the
   voided property is true, then the Statement MUST NOT be converted.
-* Add "version": "1.0.0"
-* If an authority was not previously set, set the authority to an Agent identified by an account with a homePage 
+* <a name="A.s3.b8"></a>Add "version": "1.0.0"
+* <a name="A.s3.b9"></a>If an authority was not previously set, set the authority to an Agent identified by an account with a homePage 
 set to the home page corresponding to the system performing the conversion and an accountName of "unknown".
-* If the "statement" property in Context was set, remove it from the Statement.
-* Preserve all other properties without modification, including "stored". "stored" will still be updated if the Statement 
+* <a name="A.s3.b10"></a>If the "statement" property in Context was set, remove it from the Statement.
+* <a name="A.s3.b11"></a>Preserve all other properties without modification, including "stored". "stored" will still be updated if the Statement 
 is sent to an LRS.
 
-######Conversion of Statements created based on version 0.95
+###### <a name="A.s4"></a>Conversion of Statements created based on version 0.95
 
 A 1.0.0 Client or other system converting a Statement created in 0.95 MUST follow the steps below:
 
-* If the Statement is voided, do not convert it.
-* Remove the "voided" property from the Statement, if present. Remember, if the value
+* <a name="A.s4.b1"></a>If the Statement is voided, do not convert it.
+* <a name="A.s4.b2"></a>Remove the "voided" property from the Statement, if present. Remember, if the value
   of the voided property is true, then the Statement MUST NOT be converted.
-* Add "version": "1.0.0"
-* If an authority was not previously set, set the authority to an Agent identified by an account with a homePage 
+* <a name="A.s4.b3"></a>Add "version": "1.0.0"
+* <a name="A.s4.b4"></a>If an authority was not previously set, set the authority to an Agent identified by an account with a homePage 
 set to the home page corresponding to the system performing the conversion and an accountName of "unknown".
-* If the Statement property in Context was set to anything other than a StatementRef, remove it from the Statement.
-* Preserve all other properties without modification, including "stored". "stored" will still be updated if the Statement 
+* <a name="A.s4.b5"></a>If the Statement property in Context was set to anything other than a StatementRef, remove it from the Statement.
+* <a name="A.s4.b6"></a>Preserve all other properties without modification, including "stored". "stored" will still be updated if the Statement 
 is sent to an LRS.
 
 
-######Example
+###### <a name="A.s5"></a>Example
 
 
 A 0.9 Statement:
@@ -2080,59 +2080,59 @@ Converted to 1.0.0:
 
 <a name="Appendix3B"/>
 
-### Appendix B: Table of All Endpoints
+### <a name="B">Appendix B</a>: Table of All Endpoints
 
-### Required Resource Endpoints
+### <a name="B.s1"></a>Required Resource Endpoints
 <table>
 	<tr>
 		<th>Endpoint (Base Resource Location of the LRS Precedes Each Endpoint)</th>
 		<th>Function</th>
 	</tr>
-	<tr>
+	<tr id="B.s1.table1.row1">
 		<td>statements</td>
 		<td>Statement Storage/Retrieval</td>
 	</tr>
-	<tr>
+	<tr id="B.s1.table1.row2">
 		<td>agents</td>
 		<td>Agent Object Storage/Retrieval</td>
 	</tr>
-	<tr>
+	<tr id="B.s1.table1.row3">
 		<td>agents/profile</td>
 		<td>Agent Profile Resource</td>
 	</tr>
-	<tr>
+	<tr id="B.s1.table1.row4">
 		<td>activities</td>
 		<td>Activity Object Storage/Retrieval</td>
 	</tr>
-	<tr>
+	<tr id="B.s1.table1.row5">
 		<td>activities/profile</td>
 		<td>Activity Profile Resource</td>
 	</tr>
-	<tr>
+	<tr id="B.s1.table1.row6">
 		<td>activities/state</td>
 		<td>State Resource</td>
 	</tr>
-	<tr>
+	<tr id="B.s1.table1.row7">
 		<td>about</td>
 		<td>LRS Information</td>
 	</tr>
 </table>
 
-### OAuth Resource Endpoints
+### <a name="B.s2"></a>OAuth Resource Endpoints
 <table>
 	<tr>
 		<th>Endpoint (Base Resource Location of the LRS Precedes Each Endpoint)</th>
 		<th>Function</th>
 	</tr>
-	<tr>
+	<tr id="B.s2.table1.row1">
 		<td>OAuth/initiate</td>
 		<td>Temporary Credential Request</td>
 	</tr>
-	<tr>
+	<tr id="B.s2.table1.row2">
 		<td>OAuth/authorize</td>
 		<td>Resource Owner Authorization</td>
 	</tr>
-	<tr>
+	<tr id="B.s2.table1.row3">
 		<td>OAuth/token</td>
 		<td>Token Request</td>
 	</tr>
@@ -2140,7 +2140,7 @@ Converted to 1.0.0:
 
 <a name="Appendix3C"/>
 
-### Appendix C: Cross Domain Request Example
+### <a name="C">Appendix C</a>: Cross Domain Request Example
 
 [Alternate Request Syntax](#alt-request-syntax) outlines alternative syntax for use when the normal syntax cannot be used due 
 to browser or querystring length restrictions. This appendix provides an example of a PUT request to the Statements Resource 
diff --git a/xAPI-Data.md b/xAPI-Data.md
index d04100a..cf184f4 100644
--- a/xAPI-Data.md
+++ b/xAPI-Data.md
@@ -34,89 +34,88 @@
 		*	[Appendix A: Revision History](./xAPI-About.md#Appendix1A)  
 		*	[Appendix B: cmi5 Example](./xAPI-About.md#Appendix1B)  
 *	Part Two:	[Experience API (xAPI) Data](./xAPI-Data.md#parttwo)  
-	*	1.0.	[Documents](./xAPI-Data.md#documents) 
-	*	2.0.	[Statements](./xAPI-Data.md#statements)  
-		*	2.1.	[Purpose](./xAPI-Data.md#statement-purpose)  
-	 	*	2.2.	[Formatting Requirements](./xAPI-Data.md#dataconstraints) 
-	 	*	2.3.	[Statement Lifecycle](./xAPI-Data.md#lifecycle) 
-		 	*	2.3.1.	[Statement Immutability](./xAPI-Data.md#statement-immutablity-and-exceptions) 
-		 	*	2.3.2.	[Voiding](./xAPI-Data.md#voided) 
-   		*	2.4.	[Statement Properties](./xAPI-Data.md#statement-properties)  
-	        *	2.4.1.	[ID](./xAPI-Data.md#stmtid)  
-	        *	2.4.2.	[Actor](./xAPI-Data.md#actor)  
-	        *	2.4.3.	[Verb](./xAPI-Data.md#verb)  
-	        *	2.4.4.	[Object](./xAPI-Data.md#object)  
-	        *	2.4.5.	[Result](./xAPI-Data.md#result)  
-	        *	2.4.6.	[Context](./xAPI-Data.md#context)  
-	        *	2.4.7.	[Timestamp](./xAPI-Data.md#timestamp)  
-	        *	2.4.8.	[Stored](./xAPI-Data.md#stored)  
-	        *	2.4.9.	[Authority](./xAPI-Data.md#authority)  
-	        *	2.4.10.	[Version](./xAPI-Data.md#version)  
-	        *	2.4.11.	[Attachments](./xAPI-Data.md#attachments)  
-    	*	2.5.	[Retrieval of Statements](./xAPI-Data.md#retrieval)   
-    	*	2.6.	[Signed Statements](./xAPI-Data.md#signature)  
-	*	3.0.	[Metadata](./xAPI-Data.md#metadata)
-		*	3.1.	[IRI Requirements](./xAPI-Data.md#iri-requirements)  
-		*	3.2.	[Hosted Metadata](./xAPI-Data.md#miscmeta)  
-    *	4.0.	[Special Data Types and Rules](./xAPI-Data.md#special-data)  
-		*	4.1.	[Extensions](./xAPI-Data.md#miscext) 
-		*	4.2.	[Language Maps](./xAPI-Data.md#lang-maps)
-		*	4.3.	[IRIs](./xAPI-Data.md#iris)
-		*	4.4.	[UUIDs](./xAPI-Data.md#uuids)
-		*	4.5.	[ISO 8601 Timestamps](./xAPI-Data.md#timestamps)
-		*	4.6.	[ISO 8601 Durations](./xAPI-Data.md#durations)
+	*	1.0.	[Documents](./xAPI-Data.md#1.0) 
+	*	2.0.	[Statements](./xAPI-Data.md#2.0)  
+		*	2.1.	[Purpose](./xAPI-Data.md#2.1)  
+	 	*	2.2.	[Formatting Requirements](./xAPI-Data.md#2.2) 
+	 	*	2.3.	[Statement Lifecycle](./xAPI-Data.md#2.3) 
+		 	*	2.3.1.	[Statement Immutability](./xAPI-Data.md#2.3.1) 
+		 	*	2.3.2.	[Voiding](./xAPI-Data.md#2.3.2) 
+   		*	2.4.	[Statement Properties](./xAPI-Data.md#2.4)  
+	        *	2.4.1.	[ID](./xAPI-Data.md#2.4.1)  
+	        *	2.4.2.	[Actor](./xAPI-Data.md#2.4.2)  
+	        *	2.4.3.	[Verb](./xAPI-Data.md#2.4.3)  
+	        *	2.4.4.	[Object](./xAPI-Data.md#2.4.4)  
+	        *	2.4.5.	[Result](./xAPI-Data.md#2.4.5)  
+	        *	2.4.6.	[Context](./xAPI-Data.md#2.4.6)  
+	        *	2.4.7.	[Timestamp](./xAPI-Data.md#2.4.7)  
+	        *	2.4.8.	[Stored](./xAPI-Data.md#2.4.8)  
+	        *	2.4.9.	[Authority](./xAPI-Data.md#2.4.9)  
+	        *	2.4.10.	[Version](./xAPI-Data.md#2.4.10)  
+	        *	2.4.11.	[Attachments](./xAPI-Data.md#2.4.11)  
+    	*	2.5.	[Retrieval of Statements](./xAPI-Data.md#2.5)   
+    	*	2.6.	[Signed Statements](./xAPI-Data.md#2.6)  
+	*	3.0.	[Metadata](./xAPI-Data.md#3.0)
+		*	3.1.	[IRI Requirements](./xAPI-Data.md#3.1)  
+		*	3.2.	[Hosted Metadata](./xAPI-Data.md#3.2)  
+    *	4.0.	[Special Data Types and Rules](./xAPI-Data.md#4.0)  
+		*	4.1.	[Extensions](./xAPI-Data.md#4.1) 
+		*	4.2.	[Language Maps](./xAPI-Data.md#4.2)
+		*	4.3.	[IRIs](./xAPI-Data.md#4.3)
+		*	4.4.	[UUIDs](./xAPI-Data.md#4.4)
+		*	4.5.	[ISO 8601 Timestamps](./xAPI-Data.md#4.5)
+		*	4.6.	[ISO 8601 Durations](./xAPI-Data.md#4.6)
 	*	[Appendices](./xAPI-Data.md#append2)  
-		*	[Appendix A: Example Statements](./xAPI-Data.md#Appendix2A)  
-		*	[Appendix B: Example statement objects of different types](./xAPI-Data.md#Appendix2B)  
-		*	[Appendix C: Example definitions for Activities of type "cmi.interaction"](./xAPI-Data.md#Appendix2C)  	
-		*	[Appendix D: Example Signed Statement](./xAPI-Data.md#Appendix2D)  
+		*	[Appendix A: Example Statements](./xAPI-Data.md#A)  
+		*	[Appendix B: Example statement objects of different types](./xAPI-Data.md#B)  
+		*	[Appendix C: Example definitions for Activities of type "cmi.interaction"](./xAPI-Data.md#C)  	
+		*	[Appendix D: Example Signed Statement](./xAPI-Data.md#D)  
 *	Part Three:	[Data Processing, Validation, and Security](./xAPI-Communication.md#partthree)  
-	*	1.0.	[Requests](./xAPI-Communication.md#requests)
-		*	1.1.	[HEAD Request Implementation](./xAPI-Communication.md#httphead)  
-	 	*	1.2.	[Headers](./xAPI-Communication.md#header-parameters) 
-	 	*	1.3.	[Alternate Request Syntax](./xAPI-Communication.md#alt-request-syntax) 
-	 	*	1.4.	[Encoding](./xAPI-Communication.md#encoding) 
-	 	*	1.5.	[Content Types](./xAPI-Communication.md#content-types) 
-	        *	1.5.1.	[Application/JSON](./xAPI-Communication.md#applicationjson) 
-	        *	1.5.1.	[Multipart/Mixed](./xAPI-Communication.md#multipartmixed)
-	*	2.0.	[Resources](./xAPI-Communication.md#datatransfer)   
-	 	*	2.1.	[Statement Resource](./xAPI-Communication.md#stmtres) 
-	 	*	2.2.	[Documents Resources](./xAPI-Communication.md#doctransfer) 
-	 	*	2.3.	[State Resource](./xAPI-Communication.md#stateres) 
-	 	*	2.4.	[Agents Resource](./xAPI-Communication.md#agentsres) 
-	 	*	2.5.	[Activities Resource](./xAPI-Communication.md#activitiesres) 
-	 	*	2.6.	[Agent Profile Resource](./xAPI-Communication.md#agentprofres) 
-	 	*	2.7.	[Activity Profile Resource](./xAPI-Communication.md#actprofres) 
-	 	*	2.8.	[About Resource](./xAPI-Communication.md#aboutresource) 
-   	*	3.0.	[Data Validation](./xAPI-Communication.md#validation)     
-    	*	3.1.	[Concurrency](./xAPI-Communication.md#concurrency)  
-    	*	3.2.	[Error Codes](./xAPI-Communication.md#errorcodes)
-    	*	3.3     [Versioning](./xAPI-Communication.md#versioning)  
-    *	4.0.	[Authentication](./xAPI-Communication.md#authentication)  
-		*	4.1.	[OAuth 1.0 Authentication Scenarios and Methods](./xAPI-Communication.md#authdefs) 
-		*	4.2.	[OAuth 1.0 Authorization Scope](./xAPI-Communication.md#oauthscope)
-    *	5.0	[Security](./xAPI-Communication.md#security)
+	*	1.0.	[Requests](./xAPI-Communication.md#1.0)
+		*	1.1.	[HEAD Request Implementation](./xAPI-Communication.md#1.1)  
+	 	*	1.2.	[Headers](./xAPI-Communication.md#1.2) 
+	 	*	1.3.	[Alternate Request Syntax](./xAPI-Communication.md#1.3) 
+	 	*	1.4.	[Encoding](./xAPI-Communication.md#1.4) 
+	 	*	1.5.	[Content Types](./xAPI-Communication.md#1.5) 
+	        *	1.5.1.	[Application/JSON](./xAPI-Communication.md#1.5.1) 
+	        *	1.5.2.	[Multipart/Mixed](./xAPI-Communication.md#1.5.2)
+	*	2.0.	[Resources](./xAPI-Communication.md#2.0)   
+	 	*	2.1.	[Statement Resource](./xAPI-Communication.md#2.1) 
+	 	*	2.2.	[Documents Resources](./xAPI-Communication.md#2.2) 
+	 	*	2.3.	[State Resource](./xAPI-Communication.md#2.3) 
+	 	*	2.4.	[Agents Resource](./xAPI-Communication.md#2.4) 
+	 	*	2.5.	[Activities Resource](./xAPI-Communication.md#2.5) 
+	 	*	2.6.	[Agent Profile Resource](./xAPI-Communication.md#2.6) 
+	 	*	2.7.	[Activity Profile Resource](./xAPI-Communication.md#2.7) 
+	 	*	2.8.	[About Resource](./xAPI-Communication.md#2.8) 
+   	*	3.0.	[Data Validation](./xAPI-Communication.md#3.0)     
+    	*	3.1.	[Concurrency](./xAPI-Communication.md#3.1)  
+    	*	3.2.	[Error Codes](./xAPI-Communication.md#3.2)
+    	*	3.3     [Versioning](./xAPI-Communication.md#3.3)  
+    *	4.0.	[Authentication](./xAPI-Communication.md#4.0)  
+		*	4.1.	[OAuth 1.0 Authentication Scenarios and Methods](./xAPI-Communication.md#4.1) 
+		*	4.2.	[OAuth 1.0 Authorization Scope](./xAPI-Communication.md#4.2)
+    *	5.0	[Security](./xAPI-Communication.md#5.0)
 	*	[Appendices](./xAPI-Communication.md#append3)  
-		*	[Appendix A: Converting Statements to 1.0.0](./xAPI-Communication.md#Appendix3A)  
-		*	[Appendix B: Table of All Endpoints](./xAPI-Communication.md#Appendix3B)  
-		*	[Appendix C: Cross Domain Request Example](./xAPI-Communication.md#Appendix3C)  
-
+		*	[Appendix A: Converting Statements to 1.0.0](./xAPI-Communication.md#A)  
+		*	[Appendix B: Table of All Endpoints](./xAPI-Communication.md#B)  
+		*	[Appendix C: Cross Domain Request Example](./xAPI-Communication.md#C)  
 
 <a name="parttwo" />
 #Part Two: Experience API (xAPI) Data
 
 <a name="documents" />
-## 1.0 Documents
+## <a name="1.0">1.0</a> Documents
 
 The Experience API provides a facility for Learning Record Providers to save arbitrary data in the form of documents.  This data 
 is largely unstructured, which allows for flexibility.  Specifics on document behaviors can be found in [Part 3](#doctransfer) 
 
 <a name="statements" /> 
 
-## 2.0 Statements  
+## <a name="2.0">2.0</a> Statements  
 
 <a name="statement-purpose"/> 
-### 2.1 Purpose
+### <a name="2.1">2.1</a> Purpose
 
 Statements are the evidence for any sort of experience or event which is to be tracked in xAPI. 
 While Statements follow a machine readable JSON format, they can also easily be described
@@ -125,72 +124,72 @@ meant to be aggregated and analyzed to provide larger meaning for the overall ex
 just the sum of its parts.
 
 <a name="dataconstraints"/>
-### 2.2 Formatting Requirements
+### <a name="2.2">2.2</a> Formatting Requirements
 
-###### Details
+###### <a name="2.2.s1"></a>Details
 
 All of the properties used in Statements are restricted to certain data types. For clarity, key requirements are 
 documented here, emphasizing where xAPI components have a responsibility to act in certain ways to be considered 
 conformant to this specification.
 
-###### Requirements
+###### <a name="2.2.s2"></a>Requirements
 
-* Statements and other objects SHOULD NOT include properties with a value of an empty object. 
-* A Statement MUST use each property no more than one time.
-* A Statement MUST use “actor”, “verb”, and “object”.
-* A Statement MAY use its properties in any order.
-* The LRS MUST NOT return a different serialisation of any properties except those 
+* <a name="2.2.s2.b1"></a>Statements and other objects SHOULD NOT include properties with a value of an empty object. 
+* <a name="2.2.s2.b2"></a>A Statement MUST use each property no more than one time.
+* <a name="2.2.s2.b3"></a>A Statement MUST use “actor”, “verb”, and “object”.
+* <a name="2.2.s2.b4"></a>A Statement MAY use its properties in any order.
+* <a name="2.2.s2.b5"></a>The LRS MUST NOT return a different serialisation of any properties except those 
 [listed as exceptions above](#statement-immutablity-and-exceptions).
 
-###### Learning Record Provider Requirements
+###### <a name="2.2.s3"></a>Learning Record Provider Requirements
 
 The following requirements reiterate especially important requirements already included elsewhere, to emphasize,
 clarify, and provide implementation guidance.  Some types of validation, such as complete IRI validation and validation 
 that properties appear only once, are extremely difficult, so much of the burden 
 for ensuring data portability is on the Learning Record Provider.
 
-* Values requiring IRIs MUST be sent with valid IRIs. 
-* Keys of language maps MUST be sent with valid [RFC 5646](http://tools.ietf.org/html/rfc5646) language tags, for similar reasons.
-* A library SHOULD be used to construct IRIs, as opposed to string concatenation. 
-* Values SHOULD be considered to be case sensitive unless specified otherwise. 
-* Lowercase SHOULD be used to send case insensitive data.
-* Additional properties SHOULD* NOT be added to Statements unless explicitly allowed by this specification. 
-* A property SHOULD not occur multiple times in an object. If properties are used multiple times within an object, the 
+* <a name="2.2.s3.b1"></a>Values requiring IRIs MUST be sent with valid IRIs. 
+* <a name="2.2.s3.b2"></a>Keys of language maps MUST be sent with valid [RFC 5646](http://tools.ietf.org/html/rfc5646) language tags, for similar reasons.
+* <a name="2.2.s3.b3"></a>A library SHOULD be used to construct IRIs, as opposed to string concatenation. 
+* <a name="2.2.s3.b4"></a>Values SHOULD be considered to be case sensitive unless specified otherwise. 
+* <a name="2.2.s3.b5"></a>Lowercase SHOULD be used to send case insensitive data.
+* <a name="2.2.s3.b6"></a>Additional properties SHOULD* NOT be added to Statements unless explicitly allowed by this specification. 
+* <a name="2.2.s3.b7"></a>A property SHOULD not occur multiple times in an object. If properties are used multiple times within an object, the 
 behavior of the LRS is undefined; it is expected that most LRSs will use existing JSON parsing functionality of whichever code languages they use. 
 
 __Note:__ The LRS is recommended to reject Statements containing additional properties. Additional properties in 
 Statements would mean that the Statement would not be interoperable with all LRSs. 
 
-###### LRS Requirements
+###### <a name="2.2.s4"></a>LRS Requirements
 
-* The LRS MUST reject Statements
-    * with any null values (except inside extensions).
-    * with strings where numbers are required, even if those strings contain numbers.
-    * with strings where booleans are required, even if those strings contain booleans.
-    * with any non-format-following key or value, including the empty string, where a
+* <a name="2.2.s4.b1"></a>The LRS MUST reject Statements
+    * <a name="2.2.s4.b1.b1"></a>with any null values (except inside extensions).
+    * <a name="2.2.s4.b1.b2"></a>with strings where numbers are required, even if those strings contain numbers.
+    * <a name="2.2.s4.b1.b3"></a>with strings where booleans are required, even if those strings contain booleans.
+    * <a name="2.2.s4.b1.b4"></a>with any non-format-following key or value, including the empty string, where a
       string with a particular format (such as mailto IRI, UUID, or IRI) is required.
-    * where the case of a key does not match the case specified in this specification.
-    * where the case of a value restricted to enumerated values does not match
+    * <a name="2.2.s4.b1.b5"></a>where the case of a key does not match the case specified in this specification.
+    * <a name="2.2.s4.b1.b6"></a>where the case of a value restricted to enumerated values does not match
       an enumerated value given in this specification exactly.
-    * where a key or value is not allowed by this specification.
-    * containing IRL or IRI values without a scheme.
-* The LRS MUST at least validate that the sequence of token lengths for language map keys
+    * <a name="2.2.s4.b1.b7"></a>where a key or value is not allowed by this specification.
+    * <a name="2.2.s4.b1.b8"></a>containing IRL or IRI values without a scheme.
+* <a name="2.2.s4.b2"></a>The LRS MUST at least validate that the sequence of token lengths for language map keys
 matches the [RFC 5646](http://tools.ietf.org/html/rfc5646) standard.
-* The LRS MUST process and store numbers with at least the precision of IEEE 754 32-bit
+* <a name="2.2.s4.b3"></a>The LRS MUST process and store numbers with at least the precision of IEEE 754 32-bit
 floating point numbers.
-* The LRS MUST validate parameter values to the same standards required for values of the
+* <a name="2.2.s4.b4"></a>The LRS MUST validate parameter values to the same standards required for values of the
 same types in Statements. __Note:__ string parameter values are not quoted as they are in JSON.
-* The LRS SHOULD treat all values as case sensitive unless specified otherwise.
-* The LRS MAY use best-effort validation for IRL and IRI formats to satisfy the
+* <a name="2.2.s4.b5"></a>The LRS SHOULD treat all values as case sensitive unless specified otherwise.
+* <a name="2.2.s4.b6"></a>The LRS MAY use best-effort validation for IRL and IRI formats to satisfy the
 non-format-following rejection requirement.
-* The LRS MAY use best-effort validation for language map keys to satisfy the
+* <a name="2.2.s4.b7"></a>The LRS MAY use best-effort validation for language map keys to satisfy the
 non-format-following rejection requirement.
-* Additional properties SHOULD* NOT be added to Statements and other objects unless explicitly allowed by this specification and the 
+* <a name="2.2.s4.b8"></a>Additional properties SHOULD* NOT be added to Statements and other objects unless explicitly allowed by this specification and the 
 LRS SHOULD* reject Statements containing such additional properties.
 
 <a name="lifecycle" />
 
-### 2.3 Statement Lifecycle
+### <a name="2.3">2.3</a> Statement Lifecycle
 
 Statements are information about a tracked learning experience. Typically, the information represented in the 
 Statement has already happened. Thus, the natural language used in "display" or in the human-readable portion of 
@@ -202,56 +201,56 @@ Statement is to be disregarded.
 
 <a name="statement-immutablity-and-exceptions" />
 
-#### 2.3.1 Statement Immutability
+#### <a name="2.3.1">2.3.1</a> Statement Immutability
 
 Statements are immutable (they cannot be changed). The following are exceptions or areas not covered by this rule:
 
-* Potential or required assignments of properties during LRS processing ("id", "authority", "stored", "timestamp", "version"). 
+* <a name="2.3.1.b1"></a>Potential or required assignments of properties during LRS processing ("id", "authority", "stored", "timestamp", "version"). 
 
-* Activity Definitions referenced by a Statement. The content of Activity Definitions that are referenced in Statements 
+* <a name="2.3.1.b2"></a>Activity Definitions referenced by a Statement. The content of Activity Definitions that are referenced in Statements 
 is not considered part of the Statement itself. This means a deep serialization of a Statement into JSON will change if 
 the referenced Activity Definition changes (see the [Statement API's](#stmtapi) "format" parameter for details).  
 
-* Verbs referenced by a Statement. The Display property of the Verb is not considered 
+* <a name="2.3.1.b3"></a>Verbs referenced by a Statement. The Display property of the Verb is not considered 
 part of the Statement itself (see the [Statement API's](#stmtapi) "format" parameter for details). 
 
-* Serialization of Timestamp data. This is not considered part of the immutable Statement itself. For example, 
+* <a name="2.3.1.b4"></a>Serialization of Timestamp data. This is not considered part of the immutable Statement itself. For example, 
 the timestamp and stored properties of a statement can be returned in a different timezone to the one with 
 which they were stored so long as the point in time referenced is not affected. 
 See [4.1.7 Timestamp](#timestamp) and [4.1.8 Stored](#stored) for details. 
 
-* Serialization of un-ordered lists. The list of Agents in a Group is not considered to be an ordered list.  Thus, 
+* <a name="2.3.1.b5"></a>Serialization of un-ordered lists. The list of Agents in a Group is not considered to be an ordered list.  Thus, 
 the LRS can return this list of agents in any order. See [4.1.2.2 Groups](#group).
 
-* Attachments. These are not part of Statements and an LRS will return Statements without attachments when a Client
+* <a name="2.3.1.b6"></a>Attachments. These are not part of Statements and an LRS will return Statements without attachments when a Client
 requests them (see the [Statement API's](#stmtapi) "attachments" parameter for details).
 
-* Case sensitivity. Some properties are case insensitive and changes in case therefore do not affect immutability. 
+* <a name="2.3.1.b7"></a>Case sensitivity. Some properties are case insensitive and changes in case therefore do not affect immutability. 
 For example, the domain portion an e-mail address is case insensitive. It is recommended to use lowercase for any case 
 insensitive text. 
 
 The following explicitly are **not** exceptions and **are** covered by this rule:
 
-* Result Duration. Due to variable lengths of months, years and even minutes and the flexible nature of the 
+* <a name="2.3.1.b8"></a>Result Duration. Due to variable lengths of months, years and even minutes and the flexible nature of the 
 timestamp property as representing either the start, middle or end of the experience, it is not possible for 
 an LRS to accurately deserialize the Result Duration and convert between units of time. For this reason, the 
 Result Duration is considered a string for purposes of statement comparison. 
 
 <a name="statement-comparision-requirements" />
-###### Statement Comparision Requirements
+###### <a name="2.3.1.s9"></a>Statement Comparision Requirements
 There are a number of scenarios outlined in this specification which require Statements to be
 compared to see if they match. In these scenarios, the following rules apply:
 
-* Differences which could have been caused by 
+* <a name="2.3.1.s9.b1"></a>Differences which could have been caused by 
 [exceptions to Statement immutability](#statement-immutablity-and-exceptions) MUST be ignored.
-* Differences relating to a different serialisation of any properties not
+* <a name="2.3.1.s9.b2"></a>Differences relating to a different serialisation of any properties not
 [listed as exceptions](#statement-immutablity-and-exceptions) MUST not be ignored. 
 
 <a name="voided"/>
 
-#### 2.3.2 Voiding
+#### <a name="2.3.2">2.3.2</a> Voiding
 
-###### Rationale
+###### <a name="2.3.2.s1"></a>Rationale
 
 The certainty that an LRS has an accurate and complete collection of data is guaranteed by the fact that Statements 
 cannot be logically changed or deleted. This immutability of Statements is a key factor in enabling the distributed 
@@ -262,28 +261,28 @@ that a previously made Statement is marked as invalid. This is called "voiding a
 Verb “http://adlnet.gov/expapi/verbs/voided" is used for this purpose. Any Statement that voids another
 cannot itself be voided.
 
-###### Requirements
+###### <a name="2.3.2.s2"></a>Requirements
 
-* When issuing a Statement that voids another, the Object of that voiding Statement MUST have the "objectType" 
+* <a name="2.3.2.s2.b1"></a>When issuing a Statement that voids another, the Object of that voiding Statement MUST have the "objectType" 
 property set to "StatementRef".
-* When issuing a Statement that voids another, the Object of that voiding Statement MUST specify the id 
+* <a name="2.3.2.s2.b2"></a>When issuing a Statement that voids another, the Object of that voiding Statement MUST specify the id 
 of the statement-to-be-voided by its "id" property.
-* an LRS MUST consider a Statement it contains "voided" if and only if the Statement is not itself a voiding 
+* <a name="2.3.2.s2.b3"></a>an LRS MUST consider a Statement it contains "voided" if and only if the Statement is not itself a voiding 
 Statement and the LRS also contains a voiding Statement referring to the first Statement.
-* Upon receiving a Statement that voids another, the LRS SHOULD reject the entire request which includes the 
+* <a name="2.3.2.s2.b4"></a>Upon receiving a Statement that voids another, the LRS SHOULD reject the entire request which includes the 
 voiding Statement with HTTP 403 'Forbidden' if the request is not from a source authorized to void Statements.
-* Upon receiving a Statement that voids another, the LRS SHOULD NOT* reject the request on the grounds of the 
+* <a name="2.3.2.s2.b5"></a>Upon receiving a Statement that voids another, the LRS SHOULD NOT* reject the request on the grounds of the 
 Object of that voiding Statement not being present. 
-* Upon receiving a Statement that voids another, the LRS MAY roll back any changes to Activity or Agent 
+* <a name="2.3.2.s2.b6"></a>Upon receiving a Statement that voids another, the LRS MAY roll back any changes to Activity or Agent 
 definitions which were introduced by the Statement that was just voided.
-* A Learning Record Provider that wants to "unvoid" a previously voided Statement SHOULD issue that Statement 
+* <a name="2.3.2.s2.b7"></a>A Learning Record Provider that wants to "unvoid" a previously voided Statement SHOULD issue that Statement 
 again under a new id.
 
 __Note:__ See ["Statement References"](#stmtref) in [When the "Object" is a Statement](#stmtasobj) 
 for details about making references to other Statements.  To see how voided statements behave when queried, 
 See [StatementRef](#queryStatementRef) in 7.3 Statement API).
 
-###### Example
+###### <a name="2.3.2.s3"></a>Example
 
 This example Statement voids a previous Statement which it identifies with the Statement id 
 "e05aa883-acaf-40ad-bf54-02c8ce485fb0".
@@ -308,56 +307,56 @@ This example Statement voids a previous Statement which it identifies with the S
 }
 ```  
 <a name="statement-properties"/> 
-### 2.4 Statement Properties  
+### <a name="2.4">2.4</a> Statement Properties  
 
-###### Details
+###### <a name="2.4.s1"></a>Details
 The details of each property of a statement are described in the table below.  
 
 <table>
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr><td>id</td><td>UUID</td>
+	<tr id="2.4.s1.table1.row1"><td>id</td><td>UUID</td>
 	<td>UUID assigned by LRS if not set by the Learning Record Provider.</td>
 	<td>Recommended</td></tr>
-	<tr><td><a href="#actor">actor</a></td><td>Object</td>
+	<tr id="2.4.s1.table1.row2"><td><a href="#actor">actor</a></td><td>Object</td>
 	<td>Whom the Statement is about, as an <a href="#agent">Agent</a> or 
 		<a href="#group">Group</a> Object.</td>
 	<td>Required</td></tr>
-	<tr><td><a href="#verb">verb</a></td><td>Object</td>
+	<tr id="2.4.s1.table1.row3"><td><a href="#verb">verb</a></td><td>Object</td>
 	<td>Action taken by the Actor.</td>
 	<td>Required</td></tr>
-	<tr><td><a href="#object">object</a></td><td>Object</td>
+	<tr id="2.4.s1.table1.row4"><td><a href="#object">object</a></td><td>Object</td>
 	<td>Activity, Agent, or another Statement that is the Object of the Statement. 
 	</td>
 	<td>Required</td></tr>
-	<tr><td><a href="#result">result</a></td><td>Object</td>
+	<tr id="2.4.s1.table1.row5"><td><a href="#result">result</a></td><td>Object</td>
 	<td>Result Object, further details representing a measured outcome.</td>
 	<td>Optional</td></tr>
-	<tr><td><a href="#context">context</a></td><td>Object</td>
+	<tr id="2.4.s1.table1.row6"><td><a href="#context">context</a></td><td>Object</td>
 	<td>Context that gives the Statement more meaning. Examples: a team the Actor is 
 	working with, altitude at which a scenario was attempted in a flight simulator.</td>
 	<td>Optional</td></tr>
-	<tr><td><a href="#timestamp">timestamp</a></td><td><a href="#timestamps">Timestamp</a></td>
+	<tr id="2.4.s1.table1.row7"><td><a href="#timestamp">timestamp</a></td><td><a href="#timestamps">Timestamp</a></td>
 	<td>Timestamp of when the events described within this Statement occurred. Set by the LRS if not provided.</td>
 	<td>Optional</td></tr>
-	<tr><td><a href="#stored">stored</a></td><td><a href="#timestamps">Timestamp</a></td>
+	<tr id="2.4.s1.table1.row8"><td><a href="#stored">stored</a></td><td><a href="#timestamps">Timestamp</a></td>
 	<td>Timestamp of when this Statement was recorded. Set by LRS.</td>
 	<td>Set by LRS</td></tr>
-	<tr><td><a href="#authority">authority</a></td><td>Object</td>
+	<tr id="2.4.s1.table1.row9"><td><a href="#authority">authority</a></td><td>Object</td>
 	<td>Agent or Group who is asserting this Statement is true. Verified by the LRS based on 
 	authentication. Set by LRS if not provided or if a strong trust relationship between the Learning Record Provider 
 	and LRS has not been established.</td>
 	<td>Optional</td></tr>
-	<tr><td><a href="#version">version</a></td><td>Version</td>
+	<tr id="2.4.s1.table1.row10"><td><a href="#version">version</a></td><td>Version</td>
 	<td>The Statement’s associated xAPI version, formatted according to <a href="http://semver.org/spec/v1.0.0.html">Semantic Versioning 1.0.0</a>.</td>
 	<td>Not Recommended</td></tr>
-	<tr>
+	<tr id="2.4.s1.table1.row11">
 		<td><a href="#attachments">attachments</a></td>
 		<td>Ordered array of Attachment Objects</td>
 	    <td>Headers for attachments to the Statement</td>
 	<td>Optional</td></tr>
-</table>  
+</table>
 
-###### Example
+###### <a name="2.4.s2"></a>Example
 
 An example of the simplest possible Statement using all properties that MUST or SHOULD be used.
 It is recommended to also populate optional properties where relevant. 
@@ -385,46 +384,46 @@ See [Appendix A: Example Statements](#Appendix2A) for more examples.
 
 <a name="stmtid"/> 
 
-#### 2.4.1 ID 
+#### <a name="2.4.1">2.4.1</a> ID 
 
-###### Description 
+###### <a name="2.4.1.s1"></a>Description
 
 A UUID (all versions of variant 2 in [RFC 4122](http://www.ietf.org/rfc/rfc4122.txt) are valid, and the UUID MUST be in standard string form).
 
-###### Requirements 
+###### <a name="2.4.1.s2"></a>Requirements
 
-* Ids MUST be generated by the LRS if a Statement is received without an id.
-* Ids SHOULD be generated by the Learning Record Provider.
+* <a name="2.4.1.s2.b1"></a>Ids MUST be generated by the LRS if a Statement is received without an id.
+* <a name="2.4.1.s2.b2"></a>Ids SHOULD be generated by the Learning Record Provider.
 
 <a name="actor"/>
 
-#### 2.4.2 Actor  
+#### <a name="2.4.2">2.4.2</a> Actor  
 
-###### Description 
+###### <a name="2.4.2.s1"></a>Description
 The Actor defines who performed the action. The Actor of a Statement can be an Agent or a Group. 
 
 <a name="agent"/>
 
-##### 2.4.2.1 When the Actor ObjectType is Agent
-###### Description
+##### <a name="2.4.2.1">2.4.2.1</a> When the Actor ObjectType is Agent
+###### <a name="2.4.2.1.s1"></a>Description
 An Agent (an individual) is a persona or system.
 
-###### Details
+###### <a name="2.4.2.1.s2"></a>Details
 
-* An Agent MUST be identified by one (1) of the four types of Inverse Functional Identifiers (see
+* <a name="2.4.2.1.s2.b1"></a>An Agent MUST be identified by one (1) of the four types of Inverse Functional Identifiers (see
  [4.1.2.3 Inverse Functional Identifier](#inversefunctional));
-* An Agent MUST NOT include more than one (1) Inverse Functional Identifier;
-* An Agent SHOULD NOT use Inverse Functional Identifiers that are also used as a Group identifier.
+* <a name="2.4.2.1.s2.b2"></a>An Agent MUST NOT include more than one (1) Inverse Functional Identifier;
+* <a name="2.4.2.1.s2.b3"></a>An Agent SHOULD NOT use Inverse Functional Identifiers that are also used as a Group identifier.
 
 The table below lists the properties of Agent Objects.
 
 <table border ="1">
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr><td>objectType</td><td>string</td><td>"Agent". This property is optional except when the Agent is used as a Statement's object.</td>
+	<tr id="2.4.2.1.s2.table1.row1"><td>objectType</td><td>string</td><td>"Agent". This property is optional except when the Agent is used as a Statement's object.</td>
 	<td>Optional</td></tr>
-	<tr><td>name</td><td>String</td><td>Full name of the Agent.</td>
+	<tr id="2.4.2.1.s2.table1.row2"><td>name</td><td>String</td><td>Full name of the Agent.</td>
 	<td>Optional</td></tr>
-	<tr><td colspan="2">see <a href="#inversefunctional"> 4.1.2.3 Inverse Functional Identifier</a></td>
+	<tr id="2.4.2.1.s2.table1.row3"><td colspan="2">see <a href="#inversefunctional"> 4.1.2.3 Inverse Functional Identifier</a></td>
 	    <td>An Inverse Functional Identifier unique to the Agent.</td>
 	    <td>Required</td></tr>
 </table>
@@ -432,13 +431,13 @@ The table below lists the properties of Agent Objects.
 
 <a name="group"/>
 
-##### 2.4.2.2 When the Actor ObjectType is Group
-###### Description
+##### <a name="2.4.2.2">2.4.2.2</a> When the Actor ObjectType is Group
+###### <a name="2.4.2.2.s1"></a>Description
 
 A Group represents a collection of Agents and can be used in most of the same situations an Agent 
 can be used.  There are two types of Groups, anonymous and identified.
 
-###### Details
+###### <a name="2.4.2.2.s2"></a>Details
 
 An Anonymous Group is used describe a cluster of people where there is no ready identifier for 
 this cluster, e.g. an ad hoc team.
@@ -447,9 +446,9 @@ The table below lists all properties of an Anonymous Group.
 
 <table border ="1">
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr><td>objectType</td><td>String</td><td>"Group". </td><td>Required</td></tr>
-	<tr><td>name</td><td>String</td><td>Name of the group.</td><td>Optional</td></tr>
-	<tr><td>member</td><td>Array of <a href="#agent">Agent Objects</a></td>
+	<tr id="2.4.2.2.s2.table1.row1"><td>objectType</td><td>String</td><td>"Group". </td><td>Required</td></tr>
+	<tr id="2.4.2.2.s2.table1.row2"><td>name</td><td>String</td><td>Name of the group.</td><td>Optional</td></tr>
+	<tr id="2.4.2.2.s2.table1.row3"><td>member</td><td>Array of <a href="#agent">Agent Objects</a></td>
 	<td>The members of this Group. This is an unordered list.</td>
 	<td>Required</td></tr>
 </table>
@@ -460,82 +459,82 @@ The table below lists all properties of an Identified Group.
 
 <table border ="1">
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr><td>objectType</td><td>String</td><td>"Group". </td><td>Required</td></tr>
-	<tr><td>name</td><td>String</td><td>Name of the group.</td><td>Optional</td></tr>
-	<tr><td>member</td><td>Array of <a href="#agent">Agent Objects</a></td>
+	<tr id="2.4.2.2.s2.table2.row1"><td>objectType</td><td>String</td><td>"Group". </td><td>Required</td></tr>
+	<tr id="2.4.2.2.s2.table2.row2"><td>name</td><td>String</td><td>Name of the group.</td><td>Optional</td></tr>
+	<tr id="2.4.2.2.s2.table2.row3"><td>member</td><td>Array of <a href="#agent">Agent Objects</a></td>
 	<td>The members of this Group. This is an unordered list.</td>
 	<td>Optional</td></tr>
-	<tr><td colspan="2">see <a href="#inversefunctional"> 4.1.2.3 Inverse Functional Identifier</a></td>
+	<tr id="2.4.2.2.s2.table2.row4"><td colspan="2">see <a href="#inversefunctional"> 4.1.2.3 Inverse Functional Identifier</a></td>
 	    <td>An Inverse Functional Identifier unique to the Group.</td><td>Required</td></tr>	
 </table>
 
-###### Requirements
+###### <a name="2.4.2.2.s3"></a>Requirements
 
-* A Learning Record Consumer MUST consider each Anonymous Group distinct even if it has an identical set of members.
-* Learning Record Providers SHOULD use an Identified Group when they wish to issue multiple statements, 
+* <a name="2.4.2.2.s3.b1"></a>A Learning Record Consumer MUST consider each Anonymous Group distinct even if it has an identical set of members.
+* <a name="2.4.2.2.s3.b2"></a>Learning Record Providers SHOULD use an Identified Group when they wish to issue multiple statements, 
 aggregate data or store and retrieve documents relating to a group.
-* A Learning Record Provider MAY include a complete or partial list of Agents in the 'member' property of a 
+* <a name="2.4.2.2.s3.b3"></a>A Learning Record Provider MAY include a complete or partial list of Agents in the 'member' property of a 
 given Anonymous or Identified Group.
-* An LRS returning a Statement MAY return the list of group members in any order.
+* <a name="2.4.2.2.s3.b4"></a>An LRS returning a Statement MAY return the list of group members in any order.
 
-###### Requirements for Anonymous Groups
+###### <a name="2.4.2.2.s4"></a>Requirements for Anonymous Groups
 
-* An Anonymous Group MUST include a 'member' property listing constituent Agents.
-* An Anonymous Group MUST NOT contain Group Objects in the 'member' property.
-* An Anonymous Group MUST NOT include any Inverse Functional Identifiers.
+* <a name="2.4.2.2.s4.b1"></a>An Anonymous Group MUST include a 'member' property listing constituent Agents.
+* <a name="2.4.2.2.s4.b2"></a>An Anonymous Group MUST NOT contain Group Objects in the 'member' property.
+* <a name="2.4.2.2.s4.b3"></a>An Anonymous Group MUST NOT include any Inverse Functional Identifiers.
 
-###### Requirements for Identified Groups
+###### <a name="2.4.2.2.s5"></a>Requirements for Identified Groups
 
-* An Identified Group MUST include exactly one (1) Inverse Functional Identifier.
-* An Identified Group MUST NOT contain Group Objects in the 'member' property.
-* An Identified Group SHOULD NOT use Inverse Functional Identifiers that are also used as Agent identifiers.
-* An Identified Group MAY include a 'member' property listing constituent Agents.
+* <a name="2.4.2.2.s5.b1"></a>An Identified Group MUST include exactly one (1) Inverse Functional Identifier.
+* <a name="2.4.2.2.s5.b2"></a>An Identified Group MUST NOT contain Group Objects in the 'member' property.
+* <a name="2.4.2.2.s5.b3"></a>An Identified Group SHOULD NOT use Inverse Functional Identifiers that are also used as Agent identifiers.
+* <a name="2.4.2.2.s5.b4"></a>An Identified Group MAY include a 'member' property listing constituent Agents.
 
 
 <a name="inversefunctional">
 
-##### 2.4.2.3 Inverse Functional Identifier
-###### Description 
+##### <a name="2.4.2.3">2.4.2.3</a> Inverse Functional Identifier
+###### <a name="2.4.2.3.s1"></a>Description
 An Inverse Functional Identifier (IFI) is a value of an Agent or Identified
 Group that is guaranteed to only ever refer to that Agent or Identified Group.
 
-###### Rationale
+###### <a name="2.4.2.3.s2"></a>Rationale
 Agents and Groups need to be uniquely identifiable in order for data to be stored and retrieved against them. 
 In an xAPI Statement this is accomplished using Inverse Functional Identifiers which are loosely inspired 
 on the widely accepted FOAF principle (see: [Friend Of A Friend](http://xmlns.com/foaf/spec/#term_Agent)).
 
-###### Details
+###### <a name="2.4.2.3.s3"></a>Details
 
 The table below lists all possible Inverse Functional Identifier properties.
 
 <table border ="1">
 	<tr><th>Property</th><th>Type</th><th>Description</th></tr>
-	<tr><td><a href="http://xmlns.com/foaf/spec/#term_mbox">mbox</a></td><td>mailto IRI</td><td>The required format is "mailto:email address". <br>
+	<tr id="2.4.2.3.s3.table1.row1"><td><a href="http://xmlns.com/foaf/spec/#term_mbox">mbox</a></td><td>mailto IRI</td><td>The required format is "mailto:email address". <br>
 	Only email addresses that have only ever been and will ever be assigned to this Agent, 
 but no others, SHOULD be used for this property and mbox_sha1sum.</td></tr>
-	<tr><td><a href="http://xmlns.com/foaf/spec/#term_mbox_sha1sum">mbox_sha1sum</a></td><td>String</td><td>The hex-encoded SHA1 hash of a mailto IRI (i.e. the value of an mbox property). An LRS MAY include Agents with a matching hash when a request is based on an mbox.</td></tr>
-	<tr><td>openid</td><td>URI</td><td>An openID that uniquely identifies the Agent.</td></tr>
-	<tr><td>account</td><td><a href="#agentaccount">Object</a></td><td>A user account on an existing system e.g. an LMS or intranet.</td></tr>	
+	<tr id="2.4.2.3.s3.table1.row2"><td><a href="http://xmlns.com/foaf/spec/#term_mbox_sha1sum">mbox_sha1sum</a></td><td>String</td><td>The hex-encoded SHA1 hash of a mailto IRI (i.e. the value of an mbox property). An LRS MAY include Agents with a matching hash when a request is based on an mbox.</td></tr>
+	<tr id="2.4.2.3.s3.table1.row3"><td>openid</td><td>URI</td><td>An openID that uniquely identifies the Agent.</td></tr>
+	<tr id="2.4.2.3.s3.table1.row4"><td>account</td><td><a href="#agentaccount">Object</a></td><td>A user account on an existing system e.g. an LMS or intranet.</td></tr>	
 </table>
 
-###### Client Requirements
-* The domain portions of email addresses are case insensitive. Clients SHOULD uses lowercase for the domain portion of the 
+###### <a name="2.4.2.3.s4"></a>Client Requirements
+* <a name="2.4.2.3.s4.b1"></a>The domain portions of email addresses are case insensitive. Clients SHOULD uses lowercase for the domain portion of the 
 email address when calculating the SHA1 hash for the "mbox_sha1sum" property. 
 
 <a name="agentaccount"/>
 
-##### 2.4.2.4 Account Object
+##### <a name="2.4.2.4">2.4.2.4</a> Account Object
 
-###### Description 
+###### <a name="2.4.2.4.s1"></a>Description
 
 A user account on an existing system, such as a private system (LMS or intranet) or a public
 system (social networking site).
 
-###### Details
+###### <a name="2.4.2.4.s2"></a>Details
 
-* If the system that provides the account Object uses OpenID, the Learning Record Provider
+* <a name="2.4.2.4.s2.b1"></a>If the system that provides the account Object uses OpenID, the Learning Record Provider
 SHOULD use the openid property instead of an account Object.
-* If the Learning Record Provider is concerned about revealing personally identifiable
+* <a name="2.4.2.4.s2.b2"></a>If the Learning Record Provider is concerned about revealing personally identifiable
 information about an Agent or Group, it SHOULD use an opaque account name (for example an
 account number) to identify all Statements about a person while maintaining anonymity.
 
@@ -543,14 +542,14 @@ The table below lists all properties of Account Objects.
 
 <table border ="1">
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr><td>homePage</td><td>IRL</td><td>The canonical home page for the system the account is on. This is based on FOAF's accountServiceHomePage.</td>
+	<tr id="2.4.2.4.s2.table1.row1"><td>homePage</td><td>IRL</td><td>The canonical home page for the system the account is on. This is based on FOAF's accountServiceHomePage.</td>
 	<td>Required</td></tr>
-	<tr><td>name</td><td>String</td><td>The unique id or name used to log in to this account. This is based 
+	<tr id="2.4.2.4.s2.table1.row2"><td>name</td><td>String</td><td>The unique id or name used to log in to this account. This is based 
 			on FOAF's accountName.</td><td>Required</td></tr>
 </table>
 
 
-###### Example
+###### <a name="2.4.2.4.s3"></a>Example
 
 This example shows an Agent identified by an opaque account:
 
@@ -566,12 +565,12 @@ This example shows an Agent identified by an opaque account:
 
 <a name="verb"/>
 
-#### 2.4.3 Verb
+#### <a name="2.4.3">2.4.3</a> Verb
 
-###### Description
+###### <a name="2.4.3.s1"></a>Description
 The Verb defines the action between Actor and Activity. 
 
-###### Rationale
+###### <a name="2.4.3.s2"></a>Rationale
 
 The Verb in an xAPI Statement describes the action performed during the learning experience. The 
 xAPI does not specify any particular Verbs. (With one exception, namely the reserved 
@@ -580,7 +579,7 @@ communities of practice can establish Verbs meaningful to their members and make
 for use by anyone. A predefined list of Verbs would be limited by definition and might not be able to 
 effectively capture all possible future learning experiences. 
 
-###### Details
+###### <a name="2.4.3.s3"></a>Details
 
 Verbs appear in Statements as Objects consisting of an IRI and a set of display names 
 corresponding to multiple languages or dialects which provide human-readable meanings of the Verb. 
@@ -588,7 +587,7 @@ The table below lists all properties of the Verb Object.
 
 <table>
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.4.3.s3.table1.row1">
 		<td>id</td>
 		<td>IRI</td>
 		<td>Corresponds to a Verb definition. Each Verb definition 
@@ -596,7 +595,7 @@ The table below lists all properties of the Verb Object.
 		</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.4.3.s3.table1.row2">
 		<td>display</td>
 		<td><a href="#misclangmap">Language Map</a></td>
 		<td>The human readable representation of the 
@@ -607,43 +606,43 @@ The table below lists all properties of the Verb Object.
 	</tr>
 </table>
 
-###### Verb Id Requirements
+###### <a name="2.4.3.s4"></a>Verb Id Requirements
 
-* A system reading a Statement MUST use the Verb IRI to infer meaning.
-* The IRI contained in an id SHOULD contain a human-readable portion which SHOULD provide meaning enough 
+* <a name="2.4.3.s4.b1"></a>A system reading a Statement MUST use the Verb IRI to infer meaning.
+* <a name="2.4.3.s4.b2"></a>The IRI contained in an id SHOULD contain a human-readable portion which SHOULD provide meaning enough 
 for a person reviewing the raw statement to disambiguate the Verb from other similar(in syntax) Verbs.
-* A single Verb IRI MUST NOT be used to refer to multiple meanings.
+* <a name="2.4.3.s4.b3"></a>A single Verb IRI MUST NOT be used to refer to multiple meanings.
 
-###### Verb Display AP Requirements
-* The Display property SHOULD be used by all Statements.
-* The Display property MUST be used to illustrate the meaning which is already determined by the Verb IRI.
+###### <a name="2.4.3.s5"></a>Verb Display AP Requirements
+* <a name="2.4.3.s5.b1"></a>The Display property SHOULD be used by all Statements.
+* <a name="2.4.3.s5.b2"></a>The Display property MUST be used to illustrate the meaning which is already determined by the Verb IRI.
 
-###### Verb Display LRS Requirements
+###### <a name="2.4.3.s6"></a>Verb Display LRS Requirements
 The requirements below relate to the Display property as returned by the LRS via the API.  
 
-* When queried for Statements with a Format of "exact", the LRS MUST return the Display property 
+* <a name="2.4.3.s6.b1"></a>When queried for Statements with a Format of "exact", the LRS MUST return the Display property 
 exactly as included (or omitted) within the Statement.
-* When queried for Statements with a Format of "ids", the LRS SHOULD* NOT include the Display property.
-* When queried for Statements with a Format of "canonical", the LRS SHOULD* return a canonical Display 
+* <a name="2.4.3.s6.b2"></a>When queried for Statements with a Format of "ids", the LRS SHOULD* NOT include the Display property.
+* <a name="2.4.3.s6.b3"></a>When queried for Statements with a Format of "canonical", the LRS SHOULD* return a canonical Display 
 for that Verb. 
-* The LRS may determine its canonical Display based on the Verb Display property included within 
+* <a name="2.4.3.s6.b4"></a>The LRS may determine its canonical Display based on the Verb Display property included within 
 Statements it receives, the Name property included in the metadata as described in 
 [section 5.4 Identifier metadata](#miscmeta), or the Verb Display as defined in some other location.
 
-###### Verb Display Learning Record Consumer Requirements
+###### <a name="2.4.3.s7"></a>Verb Display Learning Record Consumer Requirements
 The requirements below relate to the display property as displayed to a user by a Learning Record Consumer. 
 
-* The Display property MUST NOT be used to alter the meaning of a Verb.
-* A Learning Record Consumer MUST NOT use the Display property to infer any meaning from the Statement.
-* A Learning Record Consumer MUST NOT use the Display property for any purpose other than display to a human.
+* <a name="2.4.3.s7.b1"></a>The Display property MUST NOT be used to alter the meaning of a Verb.
+* <a name="2.4.3.s7.b2"></a>A Learning Record Consumer MUST NOT use the Display property to infer any meaning from the Statement.
+* <a name="2.4.3.s7.b3"></a>A Learning Record Consumer MUST NOT use the Display property for any purpose other than display to a human.
 Using the Display property for aggregation or categorization of Statements is an example of violating this requirement. 
-* A Learning Record Consumer displaying a Statement's Verb in a user interface MAY choose to render the Verb Display 
+* <a name="2.4.3.s7.b4"></a>A Learning Record Consumer displaying a Statement's Verb in a user interface MAY choose to render the Verb Display 
 property included within the Statement, the Name property included in the metadata as described in 
 [section 5.4 Identifier metadata](#miscmeta), or the Verb Display as defined in some other location.
-* Learning Record Consumers displaying a Statement's Verb MUST NOT display a word that differs from the meaning of the 
+* <a name="2.4.3.s7.b5"></a>Learning Record Consumers displaying a Statement's Verb MUST NOT display a word that differs from the meaning of the 
 Verb but MAY alter the wording and tense displayed for the purposes of human-readability. 
 
-###### Example
+###### <a name="2.4.3.s8"></a>Example
 This example shows a Verb with the recommended properties set and using US English and Spanish languages. 
 ```
 {
@@ -659,9 +658,9 @@ The Verb in the example above is included for illustrative purposes only. This i
 a Verb with this meaning has been defined with this id. This applies to all example verbs given in this 
 specification document, with the exception of the reserved Verb [http://adlnet.gov/expapi/verbs/voided](#voided)).
 			
-##### 2.4.3.1 Use in Language and Semantics of Verbs
+##### <a name="2.4.3.1">2.4.3.1</a> Use in Language and Semantics of Verbs
 
-###### Details
+###### <a name="2.4.3.1.s1"></a>Details
 _Semantics_
 
 The IRI represented by the Verb Id identifies the particular semantics of a word, not the word itself. 
@@ -684,23 +683,23 @@ or the Verb IRI http://example.com/فعل/خواندن might denote the action o
 
 <a name="object"/>
 
-####2.4.4 Object
+#### <a name="2.4.4">2.4.4</a> Object
 
-###### Description
+###### <a name="2.4.4.s1"></a>Description
 
 The object defines the thing that was acted on. The Object of a Statement can be an Activity, Agent/Group, 
 SubStatement, or Statement Reference.
 
 Some examples:
 
-* The Object is an Activity: "Jeff wrote an essay about hiking."
+* <a name="2.4.4.s1.b1"></a>The Object is an Activity: "Jeff wrote an essay about hiking."
 
-* The Object is an Agent: "Nellie interviewed Jeff."
+* <a name="2.4.4.s1.b2"></a>The Object is an Agent: "Nellie interviewed Jeff."
 
-* The Object is a SubStatement or Statement Reference (different implementations, but similar when human-read): 
+* <a name="2.4.4.s1.b3"></a>The Object is a SubStatement or Statement Reference (different implementations, but similar when human-read): 
 "Nellie commented on 'Jeff wrote an essay about hiking.'"
 
-###### Details
+###### <a name="2.4.4.s2"></a>Details
 
 Objects which are provided as a value for this property SHOULD include an "objectType" 
 property. If not specified, the objectType is assumed to be "Activity". Other valid values 
@@ -709,27 +708,27 @@ The properties of an Object change according to the objectType.
 
 <a name="activity"/>
 
-##### 2.4.4.1 When the ObjectType is Activity
+##### <a name="2.4.4.1">2.4.4.1</a> When the ObjectType is Activity
 
-###### Details
+###### <a name="2.4.4.1.s1"></a>Details
 
 A Statement can represent an Activity as the Object of the Statement. The following table lists the Object 
 properties in this case.
 
 <table>
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.4.4.1.s1.table1.row1">
 		<td>objectType</td>
 		<td>String</td>
 		<td>MUST be "Activity" when present</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s1.table1.row2">
 		<td><a href="#acturi">id</a></td><td>IRI</td>
 		<td>An identifier for a single unique Activity</td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s1.table1.row3">
 		<td><a href="#actdef">definition</a></td>
 		<td>Object</td>
 		<td>Metadata, <a href="#actdef">See below</a></td>
@@ -743,31 +742,31 @@ Activity id as belonging to two different Activities, even if it thinks this was
 when a conflict with another system occurs, it’s not possible to determine which Activity is intended. 
 
 
-###### <a name="actdef" />Activity Definition
+###### <a name="2.4.4.1.s2"></a><a name="actdef" />Activity Definition
 The table below lists the properties of the Activity Definition Object:
 
 <table>
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.4.4.1.s2.table1.row1">
 		<td>name</td>
 		<td><a href="#misclangmap">Language Map</a></td>
 		<td>The human readable/visual name of the Activity</td>
 		<td>Recommended</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s2.table1.row2">
 		<td>description</td>
 		<td><a href="#misclangmap">Language Map</a></td>
 		<td>A description of the Activity</td>
 		<td>Recommended</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s2.table1.row3">
 		<a name="acttype"/>
 		<td>type</td>
 		<td>IRI</td>
 		<td>The type of Activity.</td>
 		<td>Recommended</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s2.table1.row4">
 		<td>moreInfo</td>
 		<td>IRL</td>
 		<td>Resolves to a document with human-readable information about the Activity, 
@@ -778,7 +777,7 @@ The table below lists the properties of the Activity Definition Object:
 	<tr>
 		<td colspan="4">Interaction properties, See: <a href="#interactionacts">Interaction Activities</a></td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s2.table1.row5">
 		<td>extensions</td>
 		<td>Object</td>
 		<td>A map of other properties as needed (see: <a href="#miscext">Extensions</a>)</td>
@@ -790,44 +789,44 @@ __Note:__ IRI fragments (sometimes called relative IRLs) are not valid IRIs. As
 those implementing xAPI look for and use established, widely adopted, Activity types.
 
 
-###### <a name="acturi" />Activity Id Requirements
+###### <a name="2.4.4.1.s3"></a><a name="acturi" />Activity Id Requirements
 
-* An Activity id MUST be unique.
-* An Activity id MUST always reference the same Activity.
-* An Activity id SHOULD use a domain that the creator is authorized to use for this purpose.
-* An Activity id SHOULD be created according to a scheme that makes sure all Activity ids within 
+* <a name="2.4.4.1.s3.b1"></a>An Activity id MUST be unique.
+* <a name="2.4.4.1.s3.b2"></a>An Activity id MUST always reference the same Activity.
+* <a name="2.4.4.1.s3.b3"></a>An Activity id SHOULD use a domain that the creator is authorized to use for this purpose.
+* <a name="2.4.4.1.s3.b4"></a>An Activity id SHOULD be created according to a scheme that makes sure all Activity ids within 
 that domain remain unique.
-* An Activity id MAY point to metadata or the IRL for the Activity.
+* <a name="2.4.4.1.s3.b5"></a>An Activity id MAY point to metadata or the IRL for the Activity.
 
-###### LRS Requirements
+###### <a name="2.4.4.1.s4"></a>LRS Requirements
 
-* An LRS MUST NOT take action in the event it perceives an activity id is being used by multiple 
+* <a name="2.4.4.1.s4.b1"></a>An LRS MUST NOT take action in the event it perceives an activity id is being used by multiple 
 authors and/or organizations.
-* An LRS MUST NOT treat references to the same id as references to different Activities.
-* Upon receiving a Statement with an Activity Definition that differs from the one stored, an LRS
+* <a name="2.4.4.1.s4.b2"></a>An LRS MUST NOT treat references to the same id as references to different Activities.
+* <a name="2.4.4.1.s4.b3"></a>Upon receiving a Statement with an Activity Definition that differs from the one stored, an LRS
 SHOULD decide whether it considers the Learning Record Provider to have the authority to change the definition and
 SHOULD update the stored Activity Definition accordingly if that decision is positive.
-* An LRS MAY make small corrections to its canonical definition for the Activity when receiving a new definition 
+* <a name="2.4.4.1.s4.b4"></a>An LRS MAY make small corrections to its canonical definition for the Activity when receiving a new definition 
 e.g. to fix a spelling.
-* An LRS SHOULD NOT make significant changes to its canonical definition for the Activity based on an updated definition 
+* <a name="2.4.4.1.s4.b5"></a>An LRS SHOULD NOT make significant changes to its canonical definition for the Activity based on an updated definition 
 e.g. changes to correct responses.
 
 
-###### Learning Record Provider Requirements
+###### <a name="2.4.4.1.s5"></a>Learning Record Provider Requirements
 
-* A Learning Record Provider MUST ensure that Activity ids are not reused across multiple Activities.
-* A Learning Record Provider MUST only generate states or Statements against a certain Activity id that are compatible
+* <a name="2.4.4.1.s5.b1"></a>A Learning Record Provider MUST ensure that Activity ids are not reused across multiple Activities.
+* <a name="2.4.4.1.s5.b2"></a>A Learning Record Provider MUST only generate states or Statements against a certain Activity id that are compatible
 and consistent with states or Statements previously stored against the same id.
-* A Learning Record Provider MUST NOT allow new versions (i.e. revisions or other platforms) of the Activity 
+* <a name="2.4.4.1.s5.b3"></a>A Learning Record Provider MUST NOT allow new versions (i.e. revisions or other platforms) of the Activity 
 to break compatibility.	
 
 
 
 <a name="interactionacts"/>
 
-##### Interaction Activities  
+##### <a name="2.4.4.1.s6"></a>Interaction Activities
 
-###### Rationale
+###### <a name="2.4.4.1.s7"></a>Rationale
 
 Traditional e-learning has included structures for interactions or assessments. As a way to allow these practices and
 structures to extend Experience API's utility, this specification includes built-in definitions for interactions, which
@@ -838,92 +837,92 @@ associated requirements included directly in this document.
 These interaction definitions are simple to use, and consequently limited. It is expected that Communities of Practice
 requiring richer interactions definitions will do so through the use of Activity Types and Activity Definition Extensions. 
 
-###### Details
+###### <a name="2.4.4.1.s8"></a>Details
 
 The table below lists the properties for Interaction Activities.
 
 <table>
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.4.4.1.s8.table1.row1">
 		<td>interactionType</td>
 		<td>String</td>
 		<td>The type of interaction. Possible values are: “true-false”, “choice”, “fill-in”, “long-fill-in”,
 		“matching”, “performance”, “sequencing”, “likert”, “numeric” or “other”. </td>
 		<td>Required</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s8.table1.row2">
 		<td>correctResponsesPattern</td>
 		<td>An array of strings</td>
 		<td>A pattern representing the correct response to the interaction. The structure of this pattern varies
 		depending on the interactionType. This is detailed below. </td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s8.table1.row3">
 		<td>choices | scale | source | target | steps</td>
 		<td>Array of interaction components</td>
 		<td>Specific to the given interactionType (<a href="#interactionComponentLists">see below</a>).</td>
 		<td>Optional</td>
 	</tr>
-</table>  
+</table>
 
-###### Interaction Types
+###### <a name="2.4.4.1.s9"></a>Interaction Types
 The table below describes the kinds of interactions represented by each of the interactionTypes. These types of interactions 
 were originally based on the types of interactions allowed for "cmi.interactions.n.type" in the SCORM 2004 4th 
 Edition Run-Time Environment. See [Appendix C](#Appendix2C) for examples definitions for each interaction type. 
 
 <table>
 	<tr><th>interactionType</th><th>Description</th></tr>
-	<tr>
+	<tr id="2.4.4.1.s9.table1.row1">
 		<td>true-false</td>
 		<td>An interaction with two possible responses: true or false.</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s9.table1.row2">
 		<td>choice</td>
 		<td>An interaction with a number of possible choices from which the learner can select. 
 			This includes interactions in which the learner can select only one answer from the list and
 			those where the learner can select multiple items.</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s9.table1.row3">
 		<td>fill-in</td>
 		<td>An interaction which requires the learner to supply a short response in the form of one or more 
 			strings of characters. Typically, the correct response consists of part of a word, one word or a few words. 
 			'Short' means that the correct responses pattern and learner response strings will normally be 250 characters or less;
 		</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s9.table1.row4">
 		<td>long-fill-in</td>
 		<td>An interaction which requires the learner to supply a response in the form of a long string of characters.
 			'Long' means that the correct responses pattern and learner response strings will normally be more than 250 characters.
 		</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s9.table1.row5">
 		<td>matching</td>
 		<td>An interaction where the learner is asked to match items in one set (the source set) to items in another set (the target set).
 			Items do not have to pair off exactly and it's possible for multiple or zero source items to be matched to a given target and vice versa.</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s9.table1.row6">
 		<td>performance</td>
 		<td>An interaction that requires the learner to perform a task that requires multiple steps.</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s9.table1.row7">
 		<td>sequencing</td>
 		<td>An interaction where the learner is asked to order items in a set.</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s9.table1.row8">
 		<td>likert</td>
 		<td>An interaction which asks the learner to select from a discrete set of choices on a scale</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s9.table1.row9">
 		<td>numeric</td>
 		<td>Any interaction which requires a numeric response from the learner.</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s9.table1.row10">
 		<td>other</td>
 		<td>Another type of interaction that does not fit into those defined above.</td>
 	</tr>
 </table>
 
-###### Response Patterns
+###### <a name="2.4.4.1.s10"></a>Response Patterns
 The table below outlines the format of the strings within correctResponsesPattern property for each interaction type. 
 This format is also used to represent the learner's response within the result object. These formats were originally based on the 
 requirements relating to "cmi.interactions.n.correct_responses.n.pattern" as defined in the SCORM 2004 4th Edition 
@@ -931,26 +930,26 @@ Run-Time Environment. See [Appendix C](#Appendix2C) for examples of each format.
 
 <table>
 	<tr><th>interactionType</th><th>Format</th></tr>
-	<tr>
+	<tr id="2.4.4.1.s10.table1.row1">
 		<td>true-false</td>
 		<td>Either <code>true</code> or <code>false</code></td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s10.table1.row2">
 		<td>choice</td>
 		<td>A list of item ids delimited by <code>[,]</code>. If the response contains only one item, the delimiter MUST not be used.</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s10.table1.row3">
 		<td>fill-in and long-fill-in</td>
 		<td>A list of responses delimited by <code>[,]</code>. If the response contains only one item, the delimiter MUST not be used.</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s10.table1.row4">
 		<td>matching</td>
 		<td>A list of matching pairs, where each  pair consists of a source item id followed by a target item id. 
 			Items can appear in multiple (or zero) pairs.
 			Items within a pair are delimited by <code>[.]</code>. Pairs are delimited by <code>[,]</code>.
 		</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s10.table1.row5">
 		<td>performance</td>
 		<td>
 			A list of steps containing a step ids and the response to that step.
@@ -958,15 +957,15 @@ Run-Time Environment. See [Appendix C](#Appendix2C) for examples of each format.
 			The response can be a string as in a fill-in interaction or a number range as in a numeric interaction. 
 		</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s10.table1.row6">
 		<td>sequencing</td>
 		<td>An ordered list of item ids delimited by <code>[,]</code>.</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s10.table1.row7">
 		<td>likert</td>
 		<td>A single item id</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s10.table1.row8">
 		<td>numeric</td>
 		<td>A range of numbers represented by a minimum and a maximum delimited by <code>[:]</code>. 
 			Where the range does not have a maximum or does not have a minimum, that number is omitted but the delimiter is
@@ -975,13 +974,13 @@ Run-Time Environment. See [Appendix C](#Appendix2C) for examples of each format.
 			with no delimiter MAY be used. 
 		</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s10.table1.row9">
 		<td>other</td>
 		<td>Any format is valid within this string as appropriate for the type of interaction.</td>
 	</tr>
 </table>
 
-###### Correct Responses Pattern
+###### <a name="2.4.4.1.s11"></a>Correct Responses Pattern
 The Correct Responses Pattern contains an array of response patterns. A learner's response will be considered correct if it 
 matches **any** of the response patterns in that array. Where a response pattern is a delimited list, the learner's response 
 is only considered correct if **all** of the items in that list match the learner's response. For example, consider the 
@@ -1009,7 +1008,7 @@ Where the Correct Response Pattern contains an empty array, the meaning of this
 answer; all answers are incorrect. Where any answer is correct (e.g. in a survey), the Correct Response Pattern property
 is omitted. 
 
-###### Characterstring parameters
+###### <a name="2.4.4.1.s12"></a>Characterstring parameters
 Some of the values within the responses described above can be prepended with certain additional parameters. These were 
 originally based on the characterstring delimiters defined in the SCORM 2004 4th Edition Run-Time Environment. These 
 parameters are represented by the format `{parameter=value}`. See [the long-fill-in example within Appendix C](#long-fill-in). 
@@ -1020,14 +1019,14 @@ in interpreting (or ignoring) invalid characterstring parameters and values.
 The following parameters are valid at the start of the string representing the list of items for the listed interaction types:
 <table>
 	<tr><th>Parameter</th><th>Default</th><th>Description</th><th>Value</th><th>Interaction types</th></tr>
-	<tr>
+	<tr id="2.4.4.1.s12.table1.row1">
 		<td>case_matters</td>
 		<td>false</td>
 		<td>Whether or not the case of items in the list matters.</td>
 		<td><code>true</code> or <code>false</code></td>
 		<td>fill-in, long-fill-in</td>
 	</tr>
-	<tr>
+	<tr id="2.4.4.1.s12.table1.row2">
 		<td>order_matters</td>
 		<td>true</td>
 		<td>Whether or not the order of items in the list matters.</td>
@@ -1039,7 +1038,7 @@ The following parameters are valid at the start of the string representing the l
 The following parameters are valid at the start of each item in the list for the listed interaction types:
 <table>
 	<tr><th>Parameter</th><th>Description</th><th>Value</th><th>Interaction types</th></tr>
-	<tr>
+	<tr id="2.4.4.1.s12.table2.row1">
 		<td><code>lang</code></td>
 		<td>The language used within the item.</td>
 		<td><a href="http://tools.ietf.org/html/rfc5646">RFC 5646 Language Tag</a></td>
@@ -1048,25 +1047,25 @@ The following parameters are valid at the start of each item in the list for the
 </table>
 
 
-###### Requirements
+###### <a name="2.4.4.1.s13"></a>Requirements
 
-* Interaction Activities MUST have a valid interactionType.
-* Interaction Activities SHOULD have the Activity type "http://adlnet.gov/expapi/activities/cmi.interaction".
-* An LRS, upon consuming a valid interactionType, MAY validate the remaining properties as specified for Interaction Activities 
+* <a name="2.4.4.1.s13.b1"></a>Interaction Activities MUST have a valid interactionType.
+* <a name="2.4.4.1.s13.b2"></a>Interaction Activities SHOULD have the Activity type "http://adlnet.gov/expapi/activities/cmi.interaction".
+* <a name="2.4.4.1.s13.b3"></a>An LRS, upon consuming a valid interactionType, MAY validate the remaining properties as specified for Interaction Activities 
 and MAY return HTTP 400 "Bad Request" if the remaining properties are not valid for the Interaction Activity.
-* The LRS SHOULD* NOT enforce character limits relating to response patterns. 
-* The LRS SHOULD* NOT limit the length of the correctResponsesPattern array for any interactionType. 
+* <a name="2.4.4.1.s13.b4"></a>The LRS SHOULD* NOT enforce character limits relating to response patterns. 
+* <a name="2.4.4.1.s13.b5"></a>The LRS SHOULD* NOT limit the length of the correctResponsesPattern array for any interactionType. 
 
 
-##### Interaction Components  
+##### <a name="2.4.4.1.s14"></a>Interaction Components
 
-###### Details
+###### <a name="2.4.4.1.s15"></a>Details
 
 Interaction components are defined as follows:  
 
 <table>
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.4.4.1.s15.table1.row1">
 		<td>id</td>
 		<td>String</td>
 		<td>Identifies the interaction component within the list.</td>
@@ -1087,43 +1086,43 @@ list of interaction components. These additional properties are called ‘intera
 shows the supported interaction component list(s) for an Interaction Activity with the given interactionType.
 
 <table>
-	<tr><th>interactionType</th><th>supported interaction component list(s)</th><th>Description</th><tr>
+	<tr id="2.4.4.1.s15.table2.row1"><th>interactionType</th><th>supported interaction component list(s)</th><th>Description</th><tr>
 	<tr><td>choice, sequencing</td><td>choices</td>
 	<td>A list of the options available in the interaction for selection or ordering.</td></tr>
-	<tr><td>likert</td><td>scale</td>
+	<tr id="2.4.4.1.s15.table2.row2"><td>likert</td><td>scale</td>
 	<td>A list of the options on the likert scale.</td></tr>
-	<tr><td>matching</td><td>source, target</td>
+	<tr id="2.4.4.1.s15.table2.row3"><td>matching</td><td>source, target</td>
 	<td>Lists of sources and targets to be matched.</td></tr>
-	<tr><td>performance</td><td>steps</td>
+	<tr id="2.4.4.1.s15.table2.row4"><td>performance</td><td>steps</td>
 	<td>A list of the elements making up the performance interaction.</td></tr>
-	<tr><td>true-false, fill-in, long-fill-in, numeric, other</td><td>[No component lists supported]</td><td></td></tr>
+	<tr id="2.4.4.1.s15.table2.row5"><td>true-false, fill-in, long-fill-in, numeric, other</td><td>[No component lists supported]</td><td></td></tr>
 </table>
 
 
-###### Requirements
+###### <a name="2.4.4.1.s16"></a>Requirements
 
-* Within an array of interaction components, all id values MUST be distinct.
-* An interaction component's id value SHOULD NOT have whitespace.
+* <a name="2.4.4.1.s16.b1"></a>Within an array of interaction components, all id values MUST be distinct.
+* <a name="2.4.4.1.s16.b2"></a>An interaction component's id value SHOULD NOT have whitespace.
 
-###### Examples
+###### <a name="2.4.4.1.s17"></a>Examples
 
 See [Appendix C](#Appendix2C) for examples of Activity Definitions for each of the cmi.interaction types.
 
 <a name="agentasobj"/>
 
-##### 2.4.4.2 When the "Object" is an Agent or a Group
+##### <a name="2.4.4.2">2.4.4.2</a> When the "Object" is an Agent or a Group
 
-###### Requirements
+###### <a name="2.4.4.2.s1"></a>Requirements
 
-* Statements that specify an Agent or Group as an Object MUST specify an 'objectType' property. 
+* <a name="2.4.4.2.s1.b1"></a>Statements that specify an Agent or Group as an Object MUST specify an 'objectType' property. 
 
 See [Actor](#actor) for details regarding Agents.  
 
 <a name="stmtasobj"/>
 
-##### 2.4.4.3 When the "Object" is a Statement
+##### <a name="2.4.4.3">2.4.4.3</a> When the "Object" is a Statement
 
-###### Rationale
+###### <a name="2.4.4.3.s1"></a>Rationale
 
 There are two possibilities for using a Statement as an Object. First, an Object can take on the form 
 of a Statement that already exists by using a Statement Reference. A common use case for 
@@ -1133,27 +1132,27 @@ Second, an Object can be a brand new Statement by using a SubStatement. Each typ
 
 <a name="stmtref"/>
 
-##### Statement References
+##### <a name="2.4.4.3.s2"></a>Statement References
 
-###### Description
+###### <a name="2.4.4.3.s3"></a>Description
 A Statement Reference is a pointer to another pre-existing Statement.
 
-###### Requirements
+###### <a name="2.4.4.3.s4"></a>Requirements
 
-* A Statement Reference MUST specify an "objectType" property with the value "StatementRef".
-* A Statement Reference MUST set the "id" property to the UUID of a Statement. There is no requirement for 
+* <a name="2.4.4.3.s4.b1"></a>A Statement Reference MUST specify an "objectType" property with the value "StatementRef".
+* <a name="2.4.4.3.s4.b2"></a>A Statement Reference MUST set the "id" property to the UUID of a Statement. There is no requirement for 
 the LRS to validate that the UUID matches a Statement that exists.
 
 The table below lists all properties of a Statement Reference Object:
 
 <table border ="1">
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr><td>objectType</td><td>String</td><td>In this case, MUST be "StatementRef".</td><td>Required</td></tr>
-	<tr><td>id</td><td>UUID</td><td>The UUID of a Statement. 
+	<tr id="2.4.4.3.s4.table1.row1"><td>objectType</td><td>String</td><td>In this case, MUST be "StatementRef".</td><td>Required</td></tr>
+	<tr id="2.4.4.3.s4.table1.row2"><td>id</td><td>UUID</td><td>The UUID of a Statement. 
 	</td><td>Required</td></tr>
 </table>
 
-###### Example
+###### <a name="2.4.4.3.s5"></a>Example
 
 Assuming that some Statement has already been stored with 
 the id 8f87ccde-bb56-4c2e-ab83-44982ef22df0, the following example shows how a 
@@ -1183,22 +1182,22 @@ comment could be issued on the original Statement, using a new Statement:
 
 <a name="substmt"/>
 
-##### SubStatements
+##### <a name="2.4.4.3.s6"></a>SubStatements
 
-###### Description
+###### <a name="2.4.4.3.s7"></a>Description
 A SubStatement is like a StatementRef in that it is included as part of a containing Statement, but unlike a StatementRef, it 
 does not represent an event that has occurred. It can be used to describe, for example, a predication of a potential future 
 Statement or the behavior a teacher looked for when evaluating a student (without representing the student actually doing that 
 behavior). 
 
-###### Requirements
+###### <a name="2.4.4.3.s8"></a>Requirements
 
-* A SubStatement MUST specify an "objectType" property with the value "SubStatement".
-* A SubStatement MUST be validated as a Statement in addition to other SubStatement requirements.
-* A SubStatement MUST NOT have the "id", "stored", "version" or "authority" properties.
-* A SubStatement MUST NOT contain a SubStatement of its own, i.e., cannot be nested.
+* <a name="2.4.4.3.s8.b1"></a>A SubStatement MUST specify an "objectType" property with the value "SubStatement".
+* <a name="2.4.4.3.s8.b2"></a>A SubStatement MUST be validated as a Statement in addition to other SubStatement requirements.
+* <a name="2.4.4.3.s8.b3"></a>A SubStatement MUST NOT have the "id", "stored", "version" or "authority" properties.
+* <a name="2.4.4.3.s8.b4"></a>A SubStatement MUST NOT contain a SubStatement of its own, i.e., cannot be nested.
 
-###### Example
+###### <a name="2.4.4.3.s9"></a>Example
 
 One interesting use of SubStatements is in creating Statements of intention. For example, using SubStatements we can create 
 Statements of the form `"<I> <planned> (<I> <did> <this>)"` to indicate that we've planned to take some action. The concrete 
@@ -1245,12 +1244,12 @@ example that follows logically states that "I planned to visit 'Some Awesome Web
 
 <a name="result"/>
 
-#### 2.4.5 Result
+#### <a name="2.4.5">2.4.5</a> Result
 
-###### Description
+###### <a name="2.4.5.s1"></a>Description
 An optional property that represents a measured outcome related to the Statement in which it is included.
 
-###### Details
+###### <a name="2.4.5.s2"></a>Details
 The following table contains the properties of the Results Object.
 
 <table border="1">
@@ -1261,73 +1260,73 @@ The following table contains the properties of the Results Object.
 	<a href ="#Score">See: Score</a></td>
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.5.s2.table1.row1">
 	<td>success</td>
 	<td>Boolean</td>
 	<td>Indicates whether or not the attempt on the Activity was successful.</td>
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.5.s2.table1.row2">
 	<td>completion</td>
 	<td>Boolean</td>
 	<td>Indicates whether or not the Activity was completed.</td>
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.5.s2.table1.row3">
 	<td>response</td>
 	<td>String</td>
 	<td>A response appropriately formatted for the given Activity.</td>
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.5.s2.table1.row4">
 	<td>duration</td>
 	<td><a href="#durations">Duration</a></td>
 	<td>Period of time over which the Statement occurred.</td>
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.5.s2.table1.row5">
 	<td>extensions</td>
 	<td>Object</td>
 	<td>A map of other properties as needed.
 	<a href="#miscext">See: Extensions</a></td>
 	<td>Optional</td>
 </tr>
-</table> 
+</table>
 
 <a name="Score"/>
 
-##### 2.4.5.1 Score
+##### <a name="2.4.5.1">2.4.5.1</a> Score
 
-###### Description
+###### <a name="2.4.5.1.s1"></a>Description
 An optional property that represents the outcome of a graded Activity achieved by an Agent.
 
-###### Details
+###### <a name="2.4.5.1.s2"></a>Details
 
 The table below defines the Score Object. 
 
 <table border ="1">
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="2.4.5.1.s2.table1.row1">
 		<td>scaled</td>
 		<td>Decimal number between -1 and 1, inclusive</td>
 		<td>The score related to the experience as modified by scaling and/or normalization. 
 		</td>
 		<td>Recommended</td>
 	</tr>
-	<tr>
+	<tr id="2.4.5.1.s2.table1.row2">
 		<td>raw</td>
 		<td>Decimal number between min and max (if present, otherwise unrestricted), inclusive</td>
 		<td>The score achieved by the Actor in the experience described by the Statement. This is not modified by
 		any scaling or normalization.</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.4.5.1.s2.table1.row3">
 		<td>min</td>
 		<td>Decimal number less than max (if present)</td>
 		<td>The lowest possible score for the experience described by the Statement.</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="2.4.5.1.s2.table1.row4">
 		<td>max</td>
 		<td>Decimal number greater than min (if present)</td>
 		<td>The highest possible score for the experience described by the Statement.</td>
@@ -1340,68 +1339,68 @@ The properties of the Score Object are based on the corresponding properties of
 be applied differently by Learning Record Providers within different Communities of Practice. Scaling and normalization 
 are outside the scope of this specification.
 
-###### Requirements
+###### <a name="2.4.5.1.s3"></a>Requirements
 
-* The Score Object SHOULD include 'scaled' if a logical percent based score is known.
-* The Score Object SHOULD NOT be used for scores relating to progress or completion. Consider using an extension
+* <a name="2.4.5.1.s3.b1"></a>The Score Object SHOULD include 'scaled' if a logical percent based score is known.
+* <a name="2.4.5.1.s3.b2"></a>The Score Object SHOULD NOT be used for scores relating to progress or completion. Consider using an extension
 (preferrably from an established Community of Practice) instead.
 
 <a name="context"/>
 
-#### 2.4.6 Context
+#### <a name="2.4.6">2.4.6</a> Context
 
-###### Description 
+###### <a name="2.4.6.s1"></a>Description
 An optional property that provides a place to add contextual information to a Statement. All context properties are optional.
 
-###### Rationale 
+###### <a name="2.4.6.s2"></a>Rationale
 The Context property provides a place to add some contextual information to a Statement. It can store information such 
 as the instructor for an experience, if this experience happened as part of a team Activity, or how an experience fits 
 into some broader activity.
 
-###### Details
+###### <a name="2.4.6.s3"></a>Details
 
 The following table contains the properties of the Context Object.
 
 <table border="1">
 <tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-<tr>
+<tr id="2.4.6.s3.table1.row1">
 	<td>registration</td>
 	<td>UUID</td>
 	<td>The registration that the Statement is associated with.</td>
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.6.s3.table1.row2">
 	<td>instructor</td>
 	<td>Agent (MAY be a Group)</td>
 	<td>Instructor that the Statement relates to, if not included as the Actor of the Statement.</td>
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.6.s3.table1.row3">
 	<td>team</td>
 	<td>Group</td>
 	<td>Team that this Statement relates to, if not included as the Actor of the Statement.</td>
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.6.s3.table1.row4">
 	<td>contextActivities</td>
 	<td>contextActivities Object</td>
 	<td>A map of the types of learning activity context that this Statement is related to.
 	Valid context types are: "parent", "grouping", "category" and "other".</td> 
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.6.s3.table1.row5">
 	<td>revision</td>
 	<td>String</td>
 	<td>Revision of the learning activity associated with this Statement. Format is free.
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.6.s3.table1.row6">
 	<td>platform</td>
 	<td>String</td>
 	<td>Platform used in the experience of this learning activity. </td>
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.6.s3.table1.row7">
 	<td>language</td>
 	<td>String (as defined in <a href="http://tools.ietf.org/html/rfc5646">RFC 5646</a>)</td>
 	<td>Code representing the language in which the experience being recorded in this 
@@ -1409,13 +1408,13 @@ The following table contains the properties of the Context Object.
 	</td>
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.6.s3.table1.row8">
 	<td>statement</td>
 	<td><a href="#stmtref">Statement Reference</a></td>
 	<td>Another Statement to be considered as context for this Statement. </td>
 	<td>Optional</td>
 </tr>
-<tr>
+<tr id="2.4.6.s3.table1.row9">
 	<td>extensions</td>
 	<td>Object</td>
 	<td>A map of any other domain-specific context relevant to this Statement. For example, 
@@ -1426,13 +1425,13 @@ The following table contains the properties of the Context Object.
 
 </table>
 
-###### Requirements
+###### <a name="2.4.6.s4"></a>Requirements
 
-* The revision property MUST only be used if the Statement's Object is an Activity.
-* The platform property MUST only be used if the Statement's Object is an Activity.
-* The language property MUST NOT be used if not applicable or unknown.
-* The revision property SHOULD be used to track fixes of minor issues (like a spelling error).
-* The revision property SHOULD NOT be used if there is a major change in learning objectives, pedagogy, 
+* <a name="2.4.6.s4.b1"></a>The revision property MUST only be used if the Statement's Object is an Activity.
+* <a name="2.4.6.s4.b2"></a>The platform property MUST only be used if the Statement's Object is an Activity.
+* <a name="2.4.6.s4.b3"></a>The language property MUST NOT be used if not applicable or unknown.
+* <a name="2.4.6.s4.b4"></a>The revision property SHOULD be used to track fixes of minor issues (like a spelling error).
+* <a name="2.4.6.s4.b5"></a>The revision property SHOULD NOT be used if there is a major change in learning objectives, pedagogy, 
 or assets of an Activity. (Use a new Activity id instead).
 
 __Note:__ Revision has no behavioral implications within the scope of xAPI. It is simply stored
@@ -1440,9 +1439,9 @@ so that it is available (e.g. for interpreting and displaying data).
 
 <a name="Registration"/>
 
-##### 2.4.6.1 Registration Property
+##### <a name="2.4.6.1">2.4.6.1</a> Registration Property
 
-###### Rationale/Details
+###### <a name="2.4.6.1.s1"></a>Rationale/Details
 When an LRS is an integral part of an LMS, the LMS likely supports the concept of registration. 
 The Experience API applies the concept of registration more broadly. A registration could be 
 considered to be an attempt, a session, or could span multiple Activities. There is no expectation that 
@@ -1454,32 +1453,32 @@ State resources relating to the same learning experience so that all data record
 
 <a name="contextActivities"/>
 
-##### 2.4.6.2 ContextActivities Property
+##### <a name="2.4.6.2">2.4.6.2</a> ContextActivities Property
 
-###### Description
+###### <a name="2.4.6.2.s1"></a>Description
 A map of the types of learning activity context that this Statement is related to.
 
-###### Rationale
+###### <a name="2.4.6.2.s2"></a>Rationale
 Many Statements do not just involve one (Object) Activity that is the focus, but relate to other contextually relevant 
 Activities. "Context Activities" allow for these related Activities to be represented in a structured manner.
 
-###### Details
+###### <a name="2.4.6.2.s3"></a>Details
 There are four valid context types. All, any or none of these MAY be used in a given Statement:
 
-1. __Parent__: an Activity with a direct relation to the Activity which is the Object of the Statement. In almost all cases 
+* <a name="2.4.6.2.s3.b1"></a>__Parent__: an Activity with a direct relation to the Activity which is the Object of the Statement. In almost all cases 
 there is only one sensible parent or none, not multiple. For example: a Statement about a quiz question would have the quiz 
 as its parent Activity.
  
-2. __Grouping__: an Activity with an indirect relation to the Activity which is the Object of the Statement. For example: 
+* <a name="2.4.6.2.s3.b2"></a>__Grouping__: an Activity with an indirect relation to the Activity which is the Object of the Statement. For example: 
 a course that is part of a qualification. The course has several classes. The course relates to a class as the parent, 
 the qualification relates to the class as the grouping.
 
-3. __Category__: an Activity used to categorize the Statement. "Tags" would be a synonym. Category SHOULD be used to 
+* <a name="2.4.6.2.s3.b3"></a>__Category__: an Activity used to categorize the Statement. "Tags" would be a synonym. Category SHOULD be used to 
 indicate a profile of xAPI behaviors, as well as other categorizations. For example: Anna attempts a biology exam, and 
 the Statement is tracked using the cmi5 profile. The Statement's Activity refers to the exam, and the category is the cmi5 
 profile.
 
-4. __Other__: a context Activity that doesn't fit one of the other properties. For example: Anna studies a textbook for 
+* <a name="2.4.6.2.s3.b4"></a>__Other__: a context Activity that doesn't fit one of the other properties. For example: Anna studies a textbook for 
 a biology exam. The Statement's Activity refers to the textbook, and the exam is a context Activity of type "other".
 
 Single Activity Objects are allowed as values so that 0.95 Statements will be compatible with 1.0.0.
@@ -1489,15 +1488,15 @@ are for expressing relationships appropriate for the specific Statement (though
 important in determining that). For instance, it is appropriate in a Statement about a test to include the course the test 
 is part of as "parent", but not to include every possible degree program the course could be part of in the grouping value.
 
-###### Requirements
-* Every key in the contextActivities Object MUST be one of parent, grouping, category, or other.
-* Every value in the contextActivities Object MUST be either a single Activity Object or an array of Activity Objects.
-* The LRS MUST return every value in the contextActivities Object as an array, even if it arrived as a single Activity Object.
-* The LRS MUST return single Activity Objects as an array of length one containing the same Activity.
-* The Learning Record Provider SHOULD ensure that every value in the contextActivities Object is an array of Activity Objects 
+###### <a name="2.4.6.2.s4"></a>Requirements
+* <a name="2.4.6.2.s4.b1"></a>Every key in the contextActivities Object MUST be one of parent, grouping, category, or other.
+* <a name="2.4.6.2.s4.b2"></a>Every value in the contextActivities Object MUST be either a single Activity Object or an array of Activity Objects.
+* <a name="2.4.6.2.s4.b3"></a>The LRS MUST return every value in the contextActivities Object as an array, even if it arrived as a single Activity Object.
+* <a name="2.4.6.2.s4.b4"></a>The LRS MUST return single Activity Objects as an array of length one containing the same Activity.
+* <a name="2.4.6.2.s4.b5"></a>The Learning Record Provider SHOULD ensure that every value in the contextActivities Object is an array of Activity Objects 
 instead of a single Activity Object.
 
-###### Example
+###### <a name="2.4.6.2.s5"></a>Example
 
 Consider the following hierarchical structure: "Questions 1 to 6"
 are part of "Test 1" which in turn belongs to the course "Algebra 1". 
@@ -1524,12 +1523,12 @@ useful when the Object of the Statement is an Agent, not an Activity.
 
 <a name="timestamp"/>
 
-#### 2.4.7 Timestamp
+#### <a name="2.4.7">2.4.7</a> Timestamp
 
-###### Description
+###### <a name="2.4.7.s1"></a>Description
 The time at which the experience occurred.
 
-###### Details
+###### <a name="2.4.7.s2"></a>Details
 
 The timestamp property is of type [Timestamp](#timestamps). It is formatted according to the normal format of ISO 8601 and 
 corresponds to the time of when the events described within this Statement occurred. If it is not included in the Statement 
@@ -1546,65 +1545,65 @@ be most appropriate to record the Timestamp of the start of the experience; when
 completing a qualification, it might be most appropriate to record the Timestamp of the end of the experience.
 These examples are for illustrative purposes only and are not meant to be prescriptive.
 
-###### Requirements
+###### <a name="2.4.7.s3"></a>Requirements
 
-* For requirements pertaining to the Timestamp data type, see [Part 3: Timestamps](#timestamps).
-* The timestamp property SHOULD* be set by the LRS to the value of the [stored property](#stored) if not provided.
-* A timestamp property MAY represent any point during an experience, not necessarily the beginning or end. 
-* An AP MUST NOT use a future time for a timestamp property in a Statement.
-* A SubStatement MAY have a timestamp property that is in the future.
-* An LRS SHOULD* NOT reject a timestamp for having a greater value than the current time, to prevent issues due to 
+* <a name="2.4.7.s3.b1"></a>For requirements pertaining to the Timestamp data type, see [Part 3: Timestamps](#timestamps).
+* <a name="2.4.7.s3.b2"></a>The timestamp property SHOULD* be set by the LRS to the value of the [stored property](#stored) if not provided.
+* <a name="2.4.7.s3.b3"></a>A timestamp property MAY represent any point during an experience, not necessarily the beginning or end. 
+* <a name="2.4.7.s3.b4"></a>An AP MUST NOT use a future time for a timestamp property in a Statement.
+* <a name="2.4.7.s3.b5"></a>A SubStatement MAY have a timestamp property that is in the future.
+* <a name="2.4.7.s3.b6"></a>An LRS SHOULD* NOT reject a timestamp for having a greater value than the current time, to prevent issues due to 
 clock errors.
 
 <a name="stored"/> 
 
-#### 2.4.8 Stored
+#### <a name="2.4.8">2.4.8</a> Stored
 
-###### Description 
+###### <a name="2.4.8.s1"></a>Description
 The time at which a Statement is stored by the LRS. This can be any time between when the LRS receives the Statement and 
 when it is written to storage. 
 
-###### Details 
+###### <a name="2.4.8.s2"></a>Details
 The stored property is of type [Timestamp](#timestamps). The stored property is the literal time the Statement was stored. 
 Used to record the time at which the experience described in the Statement.
 
-###### Requirements
+###### <a name="2.4.8.s3"></a>Requirements
 
-* For requirements pertaining to the Timestamp data type, see [ISO 8601 Timestamps](#timestamps) below.
-* The stored property MUST be set by the LRS; An LRS MUST validate and then overwrite any value currently in the 
+* <a name="2.4.8.s3.b1"></a>For requirements pertaining to the Timestamp data type, see [ISO 8601 Timestamps](#timestamps) below.
+* <a name="2.4.8.s3.b2"></a>The stored property MUST be set by the LRS; An LRS MUST validate and then overwrite any value currently in the 
 stored property of a Statement it receives.
-* The stored property SHOULD be the current or a past time.
+* <a name="2.4.8.s3.b3"></a>The stored property SHOULD be the current or a past time.
 
 <a name="authority"/> 
 
-#### 2.4.9 Authority
+#### <a name="2.4.9">2.4.9</a> Authority
 
-###### Description
+###### <a name="2.4.9.s1"></a>Description
 The authority property provides information about whom or what has asserted that this Statement is true. 
 
-###### Details
+###### <a name="2.4.9.s2"></a>Details
 The asserting authority represents the authenticating user or some system or application.
 
-###### Requirements
-* Authority MUST be an Agent, except in 3-legged OAuth, where it MUST be a Group with two Agents. 
+###### <a name="2.4.9.s3"></a>Requirements
+* <a name="2.4.9.s3.b1"></a>Authority MUST be an Agent, except in 3-legged OAuth, where it MUST be a Group with two Agents. 
 The two Agents represent an application and user together.
-* The LRS MUST include the user as an Agent as the entire authority if a user connects 
+* <a name="2.4.9.s3.b2"></a>The LRS MUST include the user as an Agent as the entire authority if a user connects 
 directly (using HTTP Basic Authentication) or is included as part of a Group. 
-* The LRS MUST ensure that all Statements stored have an authority.
-* The LRS SHOULD overwrite the authority on all Statements it stores,
+* <a name="2.4.9.s3.b3"></a>The LRS MUST ensure that all Statements stored have an authority.
+* <a name="2.4.9.s3.b4"></a>The LRS SHOULD overwrite the authority on all Statements it stores,
 based on the credentials used to send those Statements.
-* The LRS MAY leave the submitted authority unchanged but SHOULD do so only 
+* <a name="2.4.9.s3.b5"></a>The LRS MAY leave the submitted authority unchanged but SHOULD do so only 
 where a strong trust relationship has been established, and with extreme caution.
-* The LRS MAY identify the user with any of the legal identifying properties if 
+* <a name="2.4.9.s3.b6"></a>The LRS MAY identify the user with any of the legal identifying properties if 
 a user connects directly (using HTTP Basic Authentication) or a part of 3-legged OAuth. 
 
 
-##### OAuth Credentials as Authority 
+##### <a name="2.4.9.s4"></a>OAuth Credentials as Authority
 
-###### Description
+###### <a name="2.4.9.s5"></a>Description
 This is a workflow for use of OAuth. 2-legged and 3-legged OAuth are both supported.
 
-###### Details
+###### <a name="2.4.9.s6"></a>Details
 This workflow assumes a Statement is stored using a validated OAuth connection and the LRS 
 creates or modifies the authority property of the Statement.
 
@@ -1613,22 +1612,22 @@ OAuth service provider. For instance, requests made by an authorized Twitter plu
 Facebook account will include credentials that are specific not only to Twitter as a Client application, 
 or them as a user, but the unique combination of both.
 
-###### Requirements
-* The authority MUST contain an Agent Object that represents the OAuth consumer, either by itself, or 
+###### <a name="2.4.9.s7"></a>Requirements
+* <a name="2.4.9.s7.b1"></a>The authority MUST contain an Agent Object that represents the OAuth consumer, either by itself, or 
 as part of a group in the case of 3-legged OAuth.
-* The Agent representing the OAuth consumer MUST be identified by account.
-* The Agent representing the OAuth consumer MUST use the consumer key as the value of the Account "name” property.
-* If the Agent representing the OAuth consumer is a registered application, the token request endpoint 
+* <a name="2.4.9.s7.b2"></a>The Agent representing the OAuth consumer MUST be identified by account.
+* <a name="2.4.9.s7.b3"></a>The Agent representing the OAuth consumer MUST use the consumer key as the value of the Account "name” property.
+* <a name="2.4.9.s7.b4"></a>If the Agent representing the OAuth consumer is a registered application, the token request endpoint 
 MUST be used as the account homePage.
-* If the Agent representing the OAuth consumer is not a registered application, the temporary 
+* <a name="2.4.9.s7.b5"></a>If the Agent representing the OAuth consumer is not a registered application, the temporary 
 credentials endpoint MUST be used as the Account "homePage".
-* An LRS MUST NOT trust the application portion of the authority in the event the account name is from 
+* <a name="2.4.9.s7.b6"></a>An LRS MUST NOT trust the application portion of the authority in the event the account name is from 
 the same source as the unregistered application. (Multiple unregistered applications could choose the same consumer key. 
 As a result, there is no consistent way to verify this combination of temporary credentials and 
 the account name.) 
-* Each unregistered consumer SHOULD use a unique consumer key.
+* <a name="2.4.9.s7.b7"></a>Each unregistered consumer SHOULD use a unique consumer key.
 
-###### Example
+###### <a name="2.4.9.s8"></a>Example
 
 The pairing of an OAuth consumer and a user.
 
@@ -1651,41 +1650,41 @@ The pairing of an OAuth consumer and a user.
 
 <a name="version"/> 
 
-#### 2.4.10 Version
-###### Description
+#### <a name="2.4.10">2.4.10</a> Version
+###### <a name="2.4.10.s1"></a>Description
 Version information in Statements helps Learning Record Consumers get their bearings. Since
 the Statement data model is guaranteed consistent through all 1.0.x versions, in order to support data
 flow among such LRSs the LRS is given some flexibility on Statement versions that are accepted.
 
-###### Requirements
-* Version MUST be formatted as laid out for the API version header in [Versioning](#versioning)
+###### <a name="2.4.10.s2"></a>Requirements
+* <a name="2.4.10.s2.b1"></a>Version MUST be formatted as laid out for the API version header in [Versioning](#versioning)
 
-###### LRS Requirements
-* An LRS MUST accept all Statements where their version starts with "1.0." if they otherwise validate.
-* An LRS MUST reject all Statements with a version specified that does not start with "1.0.".
-* Statements returned by an LRS MUST retain the version they are accepted with. If they
+###### <a name="2.4.10.s3"></a>LRS Requirements
+* <a name="2.4.10.s3.b1"></a>An LRS MUST accept all Statements where their version starts with "1.0." if they otherwise validate.
+* <a name="2.4.10.s3.b2"></a>An LRS MUST reject all Statements with a version specified that does not start with "1.0.".
+* <a name="2.4.10.s3.b3"></a>Statements returned by an LRS MUST retain the version they are accepted with. If they
 lack a version, the version MUST be set to 1.0.0.
 
 
-###### Learning Record Provider Requirements
-* If Learning Record Providers set the Statement version, they MUST set it to 1.0.0.
-* Learning Record Providers SHOULD NOT set the Statement version.
+###### <a name="2.4.10.s4"></a>Learning Record Provider Requirements
+* <a name="2.4.10.s4.b1"></a>If Learning Record Providers set the Statement version, they MUST set it to 1.0.0.
+* <a name="2.4.10.s4.b2"></a>Learning Record Providers SHOULD NOT set the Statement version.
 
 
 <a name="attachments"/>
-#### 2.4.11 Attachments
+#### <a name="2.4.11">2.4.11</a> Attachments
 
-###### Rationale 
+###### <a name="2.4.11.s1"></a>Rationale
 In some cases an attachment is logically an important part of a learning record. It could be an essay, a video, etc. 
 Another example of such an attachment is (the image of) a certificate that was granted as a result of an experience. 
 It is useful to have a way to store these attachments in and retrieve them from an LRS. 
 
-###### Details
+###### <a name="2.4.11.s2"></a>Details
 The table below lists all properties of the Attachment object.
 
 <table>
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th><th>Corresponding request parameter</th></tr>
-	<tr>
+	<tr id="2.4.11.s2.table1.row1">
 		<a name="attachmentUsage" />
 
 		<td>usageType</td>
@@ -1696,35 +1695,35 @@ The table below lists all properties of the Attachment object.
 		<td>Required</td>
 		<td></td>
 	</tr>
-	<tr>
+	<tr id="2.4.11.s2.table1.row2">
 		<td>display</td>
 		<td><a href="#misclangmap">Language Map</a></td>
 		<td>Display name (title) of this attachment.</td>
 		<td>Required</td>
 		<td></td>
 	</tr>
-	<tr>
+	<tr id="2.4.11.s2.table1.row3">
 		<td>description</td>
 		<td><a href="#misclangmap">Language Map</a></td>
 		<td>A description of the attachment</td>
 		<td>Optional</td>
 		<td></td>
 	</tr>
-	<tr>
+	<tr id="2.4.11.s2.table1.row4">
 		<td>contentType</td>
 		<td><a href="https://www.ietf.org/rfc/rfc2046.txt?number=2046">Internet Media Type</a></td>
 		<td>The content type of the attachment.</td>
 		<td>Required</td>
 		<td>Content-Type</td>
 	</tr>
-	<tr>
+	<tr id="2.4.11.s2.table1.row5">
 		<td>length</td>
 		<td>Integer</td>
 		<td>The length of the attachment data in octets.</td>
 		<td>Required</td>
 		<td>Content-Length</td>
 	</tr>
-	<tr>
+	<tr id="2.4.11.s2.table1.row6">
 		<td>sha2</td>
 		<td>String</td>
 		<td>The SHA-2 hash of the attachment data. <br/>
@@ -1733,7 +1732,7 @@ The table below lists all properties of the Attachment object.
 		<td>Required</td>
 		<td>X-Experience-API-Hash</td>
 	</tr>
-	<tr>
+	<tr id="2.4.11.s2.table1.row7">
 		<td>fileUrl</td>
 		<td>IRL</td>
 		<td>An IRL at which the attachment data can be retrieved, or from which it used 
@@ -1747,17 +1746,17 @@ In the case of wanting to include an attachment(s) for a SubStatement, it is str
 attachment(s) in the Statement Attachment object and to include the payloads as normally done for a Statement.
 
 <a name="retrieval"/> 
-### 2.5 Retrieval of Statements
+### <a name="2.5">2.5</a> Retrieval of Statements
 
-###### Description
+###### <a name="2.5.s1"></a>Description
 A collection of Statements can be retrieved by performing a query on the Statement 
 Resource, see [Statement Resource](#stmtapi) for details. 
 
-###### Details
+###### <a name="2.5.s2"></a>Details
 The following table shows the data structure for the results of queries on the Statement Resource.
 <table>
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr><td>Statements</td><td>Array of Statements</td>
+	<tr id="2.5.s2.table1.row1"><td>Statements</td><td>Array of Statements</td>
 		<td>List of Statements. If the list returned has been limited (due to pagination), 
 			and there are more results, they will be located at the statements property 
 			within the container located at the IRL provided by the more property of 
@@ -1767,7 +1766,7 @@ The following table shows the data structure for the results of queries on the S
 		</td>
 		<td>Required</td>
 	</tr>
-	<tr><td>more</td><td>IRL</td>
+	<tr id="2.5.s2.table1.row2"><td>more</td><td>IRL</td>
 		<td>Relative IRL that can be used to fetch more results, including the full path 
 			and optionally a query string but excluding scheme, host, and port. 
 			Empty string if there are no more results to fetch.
@@ -1776,131 +1775,131 @@ The following table shows the data structure for the results of queries on the S
 	</tr>
 </table>
 
-###### Requirements
+###### <a name="2.5.s3"></a>Requirements
 
-* The IRL retrieved from the more property MUST be usable for at least 24 hours after it is returned by the LRS. 
-* An LRS MAY include all necessary information within the more property IRL to continue the query to avoid the 
+* <a name="2.5.s3.b1"></a>The IRL retrieved from the more property MUST be usable for at least 24 hours after it is returned by the LRS. 
+* <a name="2.5.s3.b2"></a>An LRS MAY include all necessary information within the more property IRL to continue the query to avoid the 
 need to store IRLs and associated query data.
-* An LRS SHOULD NOT generate extremely long IRLs within the more property.
-* An LRS MAY re-run the query at the point in time that the IRL retrieved from the more property is accessed such
+* <a name="2.5.s3.b3"></a>An LRS SHOULD NOT generate extremely long IRLs within the more property.
+* <a name="2.5.s3.b4"></a>An LRS MAY re-run the query at the point in time that the IRL retrieved from the more property is accessed such
 that the batch retrieved includes Statements which would have been included in that batch if present in the LRS at 
 the time the original query was run and excludes Statements from that batch which have since been voided. 
-* Alternatively, an LRS MAY cache a list of Statements to be returned at the more property such that the batch of Statements
+* <a name="2.5.s3.b5"></a>Alternatively, an LRS MAY cache a list of Statements to be returned at the more property such that the batch of Statements
 returned matches those Statements that would have been returned when the original query was run. 
-* An LRS MAY remove voided Statements from the cached list of Statements if using this method. 
-* A Learning Record Consumer SHOULD NOT attempt to interpret any meaning from the IRL returned from the more property.
+* <a name="2.5.s3.b6"></a>An LRS MAY remove voided Statements from the cached list of Statements if using this method. 
+* <a name="2.5.s3.b7"></a>A Learning Record Consumer SHOULD NOT attempt to interpret any meaning from the IRL returned from the more property.
 
 <a name="signature"/>
-### 2.6 Signed Statements
+### <a name="2.6">2.6</a> Signed Statements
 
-##### Description
+##### <a name="2.6.s1"></a>Description
 A Statement can include a [digital signature](https://en.wikipedia.org/wiki/Digital_signature) 
 to provide strong and durable evidence of the authenticity and integrity of the Statement.
 
-##### Rationale
+##### <a name="2.6.s2"></a>Rationale
 Some Statements will have regulatory or legal significance, or otherwise require strong
 and durable evidence of their authenticity and integrity. It might be necessary to verify
 these Statements without trusting the environment they were first recorded in, or perhaps
 without access to that environment. Digital signatures will enable a third-party to validate such Statements.
 
-##### Details
+##### <a name="2.6.s3"></a>Details
 Signed Statements include a JSON web signature (JWS) as an attachment. This allows
 the original serialization of the Statement to be included along with the signature.
 For interoperability, the "RSA + SHA" series of JWS algorithms have been selected, and
 for discoverability of the signer X.509 certificates SHOULD be used.
 
-##### Signature Requirements
-* A Signed Statement MUST include a JSON web signature (JWS) as defined here:
+##### <a name="2.6.s4"></a>Signature Requirements
+* <a name="2.6.s4.b1"></a>A Signed Statement MUST include a JSON web signature (JWS) as defined here:
 http://tools.ietf.org/html/draft-ietf-jose-json-web-signature, as an attachment with a usageType
 of "http://adlnet.gov/expapi/attachments/signature" and a contentType of "application/octet-stream".
-* JWS Compact Serialization SHOULD* be used to create the JSON web signature. Use of JWS JSON Serialization is 
+* <a name="2.6.s4.b2"></a>JWS Compact Serialization SHOULD* be used to create the JSON web signature. Use of JWS JSON Serialization is 
 strongly discouraged, is unlikely to be interoperble with other systems, and will be forbidden in a future version
 of this specification. 
-* The JWS signature MUST have a payload of a valid JSON serialization of the complete Statement, minus signature.
-* The JWS signature MUST use an algorithm of "RS256","RS384", or "RS512".
-* The JWS signature SHOULD have been created based on the private key associated with an
+* <a name="2.6.s4.b3"></a>The JWS signature MUST have a payload of a valid JSON serialization of the complete Statement, minus signature.
+* <a name="2.6.s4.b4"></a>The JWS signature MUST use an algorithm of "RS256","RS384", or "RS512".
+* <a name="2.6.s4.b5"></a>The JWS signature SHOULD have been created based on the private key associated with an
 X.509 certificate.
-* If X.509 was used to sign, the JWS header SHOULD include the "x5c" property containing
+* <a name="2.6.s4.b6"></a>If X.509 was used to sign, the JWS header SHOULD include the "x5c" property containing
 the associated certificate chain.
 
-##### LRS Requirements
-* The LRS MUST reject requests to store Statements that contain malformed signatures, with HTTP 400.
-* The LRS SHOULD include a message in the response of a rejected statement. 
-* In order to verify signatures are well formed, the LRS MUST do the following:
-    * Decode the JWS signature, and load the signed serialization of the Statement from the
+##### <a name="2.6.s5"></a>LRS Requirements
+* <a name="2.6.s5.b1"></a>The LRS MUST reject requests to store Statements that contain malformed signatures, with HTTP 400.
+* <a name="2.6.s5.b2"></a>The LRS SHOULD include a message in the response of a rejected statement. 
+* <a name="2.6.s5.b3"></a>In order to verify signatures are well formed, the LRS MUST do the following:
+    * <a name="2.6.s5.b3.b1"></a>Decode the JWS signature, and load the signed serialization of the Statement from the
       JWS signature payload.
-    * Validate that the "original" Statement is logically equivalent to the received Statement. 
+    * <a name="2.6.s5.b3.b2"></a>Validate that the "original" Statement is logically equivalent to the received Statement. 
     See [Statement comparision requirements](statement-comparision-requirements).
-    * If the JWS header includes an X.509 certificate, validate the signature against that
+    * <a name="2.6.s5.b3.b3"></a>If the JWS header includes an X.509 certificate, validate the signature against that
     certificate as defined in JWS.
-    * Validate that the Signature Requirements outlined above have been met. 
+    * <a name="2.6.s5.b3.b4"></a>Validate that the Signature Requirements outlined above have been met. 
 
 __Note:__ The step of validating against the included X.509 certificate is intended as a
 way to catch mistakes in the signature, not as a security measure. The steps to authenticate
 a signed Statement will vary based on the degree of certainty required and are outside
 the scope of this specification.
 
-##### Client Requirements
-* Clients MUST follow the Signature Requirements outlined above.
-* Clients MUST NOT assume a signature is valid simply because an LRS has accepted it.
+##### <a name="2.6.s6"></a>Client Requirements
+* <a name="2.6.s6.b1"></a>Clients MUST follow the Signature Requirements outlined above.
+* <a name="2.6.s6.b2"></a>Clients MUST NOT assume a signature is valid simply because an LRS has accepted it.
 
-##### Example
+##### <a name="2.6.s7"></a>Example
 See [Appendix D: Example Signed Statement](#Appendix2D) for an example.
 
 
 
 <a name="metadata"/>
 
-## 3.0 Metadata
+## <a name="3.0">3.0</a> Metadata
 
 Metadata is additional information about the resource. It enables decision making, search, and discoverability. 
 In xAPI, metadata can be utilized in a variety of locations. The most common is within [Activity Definitions](#actdef).
 
 <a name="iri-requirements"/>
-### 3.1 IRI Requirements
+### <a name="3.1">3.1</a> IRI Requirements
 
 xAPI uses IRIs for identifiers. Using IRIs ensures uniqueness and promotes resolvability. The LRS and Learning Record 
 Provider each have responsibilities in regard to each IRI as outlined below. Activity Definitions have additional rules 
 which can be found later in [this section](#actdef).
 
-##### Metadata Provider Requirements
+##### <a name="3.1.s1"></a>Metadata Provider Requirements
 These requirements also apply to Learning Record Providers defining new IRIs. 
 
-* [Metadata Providers](#def-metadata-provider) defining new IRIs SHOULD* only use IRIs they control or have permission from the controller to use.
-* [Metadata Providers](#def-metadata-provider) defining new Verb IRIs MUST only use IRIs they control or have permission from the controller to use.
-* Where a suitable identifier already exists, the Metadata Provider SHOULD use the corresponding existing identifier and
+* <a name="3.1.s1.b1"></a>[Metadata Providers](#def-metadata-provider) defining new IRIs SHOULD* only use IRIs they control or have permission from the controller to use.
+* <a name="3.1.s1.b2"></a>[Metadata Providers](#def-metadata-provider) defining new Verb IRIs MUST only use IRIs they control or have permission from the controller to use.
+* <a name="3.1.s1.b3"></a>Where a suitable identifier already exists, the Metadata Provider SHOULD use the corresponding existing identifier and
 SHOULD NOT create a new identifier.
-* When re-using an existing identifier, Metadata Providers SHOULD* ensure that the exact character equivelent IRI is used. 
-* The Metadata Provider MAY create their own identifiers where a suitable identifier does not already exist.
-* When defining identifiers, the Metadata Provider MAY use IRIs containing anchors so that a single page can contain 
+* <a name="3.1.s1.b4"></a>When re-using an existing identifier, Metadata Providers SHOULD* ensure that the exact character equivelent IRI is used. 
+* <a name="3.1.s1.b5"></a>The Metadata Provider MAY create their own identifiers where a suitable identifier does not already exist.
+* <a name="3.1.s1.b6"></a>When defining identifiers, the Metadata Provider MAY use IRIs containing anchors so that a single page can contain 
 definitions for multiple identifiers. E.g. http://example.com/xapi/verbs#defenestrated
-* When defining identifiers, the Metadata Provider SHOULD use lowercase IRIs. 
+* <a name="3.1.s1.b7"></a>When defining identifiers, the Metadata Provider SHOULD use lowercase IRIs. 
 
-##### LRS Requirements
-* When storing or comparing IRIs, LRSs SHOULD* handle them only by using one or more of the approaches 
+##### <a name="3.1.s2"></a>LRS Requirements
+* <a name="3.1.s2.b1"></a>When storing or comparing IRIs, LRSs SHOULD* handle them only by using one or more of the approaches 
 described in [5.3.1 (Simple String Comparison) and 5.3.2 (Syntax-Based Normalization) of RFC 3987](https://tools.ietf.org/html/rfc3987#section-5.3), and 
 SHOULD* NOT handle them using any approaches described in [5.3.3 (Scheme-Based Normalization) or 5.3.4 (Protocol-Based Normalization) of the same RFC](https://tools.ietf.org/html/rfc3987#section-5.3), 
 or any other approaches.
-* LRSs SHOULD* apply the same IRI comparison and normalization rules with all IRIs in parameters and fields defined to contain IRIs.
+* <a name="3.1.s2.b2"></a>LRSs SHOULD* apply the same IRI comparison and normalization rules with all IRIs in parameters and fields defined to contain IRIs.
 
 <a name="miscmeta"/>
 
-### 3.2 Hosted Metadata
+### <a name="3.2">3.2</a> Hosted Metadata
 
-##### Description
+##### <a name="3.2.s1"></a>Description
 Additional information about an identifier can be provided within a Statement and can 
 be hosted at the location pointed to by the identifier IRI. Including metadata in a Statement
 allows metadata about the IRI to be expressed without the necessity of resolving it. Hosting
 metadata at the IRI location allows the owner of the IRI to define the canonical metadata for
 that IRI. 
 
-##### Details
+##### <a name="3.2.s2"></a>Details
 There are several types of IRI identifiers used in this specification:
-* [Verb](#verb)
-* [Activity id](#acturi)
-* [Activity type](#acttype)
-* [extension key](#miscext)
-* [attachment usage type](#attachmentUsage)
+* <a name="3.2.s2.b1"></a>[Verb](#verb)
+* <a name="3.2.s2.b2"></a>[Activity id](#acturi)
+* <a name="3.2.s2.b3"></a>[Activity type](#acttype)
+* <a name="3.2.s2.b4"></a>[extension key](#miscext)
+* <a name="3.2.s2.b5"></a>[attachment usage type](#attachmentUsage)
 
 For the structure of hosted metadata about Activity ids, see [Activity Definition Object](#activity).
 
@@ -1908,13 +1907,13 @@ For the structure of hosted metadata about all other identifiers, see the format
 
 <table>
 	<tr><th>Property</th><th>Type</th><th>Description</th><th>Required</th></tr>
-	<tr>
+	<tr id="3.2.s2.table1.row1">
 		<td>name</td>
 		<td><a href="#misclangmap">Language Map</a></td>
 		<td>The human readable/visual name. For Verbs, this is equivalent to the display property in a Statement.</td>
 		<td>Optional</td>
 	</tr>
-	<tr>
+	<tr id="3.2.s2.table1.row2">
 		<td>description</td>
 		<td><a href="misclangmap">Language Map</a></td>
 		<td>description</td>
@@ -1926,33 +1925,33 @@ Hosted metadata consists of a document containing a JSON object as described abo
 it is the canonical source of information about the identifier it describes. It is recommended that those implementing xAPI
 look for and use established, widely adopted identifiers for all types of IRI identifiers other than Activity id.
 
-##### Metadata Provider Requirements
+##### <a name="3.2.s3"></a>Metadata Provider Requirements
 
-* Metadata MAY be provided with an identifier.
-* If metadata is provided, both name and description SHOULD be included.
-* For any of the identifier IRIs above the Metadata Provider SHOULD make a human-readable description of the 
+* <a name="3.2.s3.b1"></a>Metadata MAY be provided with an identifier.
+* <a name="3.2.s3.b2"></a>If metadata is provided, both name and description SHOULD be included.
+* <a name="3.2.s3.b3"></a>For any of the identifier IRIs above the Metadata Provider SHOULD make a human-readable description of the 
 intended usage accessible at the IRI.
-* For any of the identifier IRIs above the Metadata Provider SHOULD ensure that this JSON metadata available at that 
+* <a name="3.2.s3.b4"></a>For any of the identifier IRIs above the Metadata Provider SHOULD ensure that this JSON metadata available at that 
 IRI when the IRI is requested and a Content-Type of "application/json" is requested.
-* Where the IRI represents an Activity, the Metadata Provider MAY host metadata using the [Activity Definition](#actdef") 
+* <a name="3.2.s3.b5"></a>Where the IRI represents an Activity, the Metadata Provider MAY host metadata using the [Activity Definition](#actdef") 
 JSON format which is used in Statements, with a Content-Type of "application/json".
 
-##### LRS Requirements
-* The LRS MAY act as a [Metadata Consumer](#def-metadata-consumer) and attempt to resolve identifier IRIs.
-* If an Activity IRI is a URL, an LRS SHOULD attempt to GET that URL, and include in HTTP
+##### <a name="3.2.s4"></a>LRS Requirements
+* <a name="3.2.s4.b1"></a>The LRS MAY act as a [Metadata Consumer](#def-metadata-consumer) and attempt to resolve identifier IRIs.
+* <a name="3.2.s4.b2"></a>If an Activity IRI is a URL, an LRS SHOULD attempt to GET that URL, and include in HTTP
 headers: "Accept: application/json, */*". This SHOULD be done as soon as practical after the LRS
 first encounters the Activity id.
-* Upon loading JSON which is a valid Activity Definition from a URL used as an Activity id,
+* <a name="3.2.s4.b3"></a>Upon loading JSON which is a valid Activity Definition from a URL used as an Activity id,
  an LRS SHOULD incorporate the loaded definition into its canonical definition for that Activity,
 while preserving names or definitions not included in the loaded definition.
-* Upon loading any document from which the LRS can parse an Activity Definition
+* <a name="3.2.s4.b4"></a>Upon loading any document from which the LRS can parse an Activity Definition
 from a URL used as an Activity id, an LRS MAY consider this definition when determining
 its canonical representation of that Activity's definition.
 
-##### Metadata Consumer Requirements
-* If a Metadata Consumer obtains metadata from an IRI, it SHOULD make a strong presumption that the 
+##### <a name="3.2.s5"></a>Metadata Consumer Requirements
+* <a name="3.2.s5.b1"></a>If a Metadata Consumer obtains metadata from an IRI, it SHOULD make a strong presumption that the 
 metadata found at that IRI is authoritative in regards to the properties and languages included in that metadata. 
-* The Metadata Consumer MAY use other sources of information to fill in missing details, 
+* <a name="3.2.s5.b2"></a>The Metadata Consumer MAY use other sources of information to fill in missing details, 
 such as translations, or take the place of the hosted metadata entirely if it was not provided, cannot be loaded or the 
 Metadata Consumer does not trust it. Other sources of information MAY include metadata in other formats stored at the 
 IRI of an identifier, particularly if that identifier was not coined for use with this specification.
@@ -1960,21 +1959,21 @@ IRI of an identifier, particularly if that identifier was not coined for use wit
 
 <a name="special-data"/>
 
-## 4.0 Special Data Types and Rules
+## <a name="4.0">4.0</a> Special Data Types and Rules
 
 The following are data types requiring additional rules that are found commonly in this specification.
 
 <a name="miscext"/> 
 
-### 4.1 Extensions
+### <a name="4.1">4.1</a> Extensions
 
-##### Description
+##### <a name="4.1.s1"></a>Description
 Extensions are available as part of Activity Definitions, as part of Statement context, or as part of a Statement result. 
 In each case, extensions intended to provide a natural way to extend those properties for some specialized use. The 
 contents of these extensions might be something valuable to just one application, or it might be a convention used by 
 an entire Community of Practice.
 
-##### Details
+##### <a name="4.1.s2"></a>Details
 Extensions are defined by a map and logically relate to the part of the Statement where they are 
 present. The values of an extension can be any JSON value or data structure. Extensions in Statement 
 context provide context to the core experience, while those in the result provide elements related to 
@@ -1982,23 +1981,23 @@ some outcome. For Activities, extensions provide additional information that hel
 within some custom application or Community of Practice. The meaning and structure of extension values under an 
 IRI key are defined by the person who controls the IRI.
 
-##### Requirements
+##### <a name="4.1.s3"></a>Requirements
 
-* The keys of an extensions map MUST be IRIs.
-* An LRS MUST NOT reject a Statement based on the values of the extensions map.
-* Learning Record Providers SHOULD always strive to map as much information as possible into the built-in 
+* <a name="4.1.s3.b1"></a>The keys of an extensions map MUST be IRIs.
+* <a name="4.1.s3.b2"></a>An LRS MUST NOT reject a Statement based on the values of the extensions map.
+* <a name="4.1.s3.b3"></a>Learning Record Providers SHOULD always strive to map as much information as possible into the built-in 
 elements in order to leverage interoperability among Experience API conformant tools.
-* All extension IRIs SHOULD have controllers.
-* The controller of an IRL extension key SHOULD make a human-readable description of the intended meaning of 
+* <a name="4.1.s3.b4"></a>All extension IRIs SHOULD have controllers.
+* <a name="4.1.s3.b5"></a>The controller of an IRL extension key SHOULD make a human-readable description of the intended meaning of 
 the extension supported by the IRL accessible at the IRL.
 
 __Note:__ A Statement defined entirely by its extensions becomes meaningless as no other system can make sense of it. 
 
 <a name="lang-maps"/> 
 
-### 4.2 Language Maps
+### <a name="4.2">4.2</a> Language Maps
 
-##### Description
+##### <a name="4.2.s1"></a>Description
 A language map is a dictionary where the key is a [RFC 5646 Language Tag](http://tools.ietf.org/html/rfc5646), and the 
 value is a string in the language specified in the tag. This map SHOULD be populated as fully as possible based on the 
 knowledge of the string in question in different languages. 
@@ -2022,7 +2021,7 @@ the owner of that extension IRI explicitly states that a particular form of code
 
 <a name="iris"/>
 
-### 4.3 IRIs
+### <a name="4.3">4.3</a> IRIs
 
 Internationalized Resource Identifiers, or IRIs, are unique identifiers which could also be resolvable. Because 
 resolving is not a requirement, IRIs/URIs are used instead of IRLs/URLs. In order to allow the greatest flexibility 
@@ -2033,7 +2032,7 @@ See [Metadata](#metadata).
 
 <a name="uuids"/>
 
-### 4.4 UUIDs
+### <a name="4.4">4.4</a> UUIDs
 
 Universally Unique Identifiers, or UUIDs, are 128-bit values that are globally unique. Unlike IRIs, there is 
 no expectation of resolvability as UUIDs take on a completely different format.  UUIDs MUST be in the standard 
@@ -2041,62 +2040,62 @@ string form.  It is recommended variant 2 in [RFC 4122](http://tools.ietf.org/ht
 
 <a name="timestamps"/>
 
-### 4.5 ISO 8601 Timestamps
+### <a name="4.5">4.5</a> ISO 8601 Timestamps
 
 Timestamps are a format type which represent a specific time. They are formatted according to ISO 8601's normal format. 
 Statements sent to an LRS can be expected to keep precision to at least milliseconds 
 
-###### Requirements
-* A Timestamp MUST be formatted according to [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).
-* A Timestamp SHOULD* be expressed using the format described in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt), which is a profile of ISO 8601. 
-* A Timestamp MUST preserve precision to at least milliseconds (3 decimal points beyond seconds).  
-* A Timestamp SHOULD* include the time zone.
-* If the Timestamp includes a time zone, the LRS MAY be return the Timestamp using a different timezone to the one 
+###### <a name="4.5.s1"></a>Requirements
+* <a name="4.5.s1.b1"></a>A Timestamp MUST be formatted according to [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).
+* <a name="4.5.s1.b2"></a>A Timestamp SHOULD* be expressed using the format described in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt), which is a profile of ISO 8601. 
+* <a name="4.5.s1.b3"></a>A Timestamp MUST preserve precision to at least milliseconds (3 decimal points beyond seconds).  
+* <a name="4.5.s1.b4"></a>A Timestamp SHOULD* include the time zone.
+* <a name="4.5.s1.b5"></a>If the Timestamp includes a time zone, the LRS MAY be return the Timestamp using a different timezone to the one 
 originally used in the statement so long as the point in time referenced is not affected. 
-* The LRS SHOULD* return the Timestamp in UTC timezone. 
-* A Timestamp MAY be truncated or rounded to a precision of at least 3 decimal digits for seconds. 
+* <a name="4.5.s1.b6"></a>The LRS SHOULD* return the Timestamp in UTC timezone. 
+* <a name="4.5.s1.b7"></a>A Timestamp MAY be truncated or rounded to a precision of at least 3 decimal digits for seconds. 
 
 <a name="durations"/>
 
-### 4.6 ISO 8601 Durations
+### <a name="4.6">4.6</a> ISO 8601 Durations
 
 Durations are strings representing the amount of time something took.
 
-###### Requirements
+###### <a name="4.6.s1"></a>Requirements
 
-* A Duration MUST be expressed using the format for duration in ISO 8601:2004(E) section 4.4.3.2.
+* <a name="4.6.s1.b1"></a>A Duration MUST be expressed using the format for duration in ISO 8601:2004(E) section 4.4.3.2.
 The alternative format (in conformity with the format used for time points and described in ISO 8601:2004(E) 
 section 4.4.3.3) MUST NOT be used.
-* Learning Record Providers SHOULD provide a maximum precision of 0.01 seconds. 
-* Learning Record Providers MAY provide less precision, for example in the case of reading a University Degree 
+* <a name="4.6.s1.b2"></a>Learning Record Providers SHOULD provide a maximum precision of 0.01 seconds. 
+* <a name="4.6.s1.b3"></a>Learning Record Providers MAY provide less precision, for example in the case of reading a University Degree 
 precision might be in months or years. 
-* On receiving a Duration with more than 0.01 second precision, the LRS SHOULD* NOT reject the request but MAY 
+* <a name="4.6.s1.b4"></a>On receiving a Duration with more than 0.01 second precision, the LRS SHOULD* NOT reject the request but MAY 
 truncate the Duration property to 0.01 second precision. 
-* When comparing Durations, any precision beyond 0.01 second precision SHOULD* NOT be included in the comparison.
+* <a name="4.6.s1.b5"></a>When comparing Durations, any precision beyond 0.01 second precision SHOULD* NOT be included in the comparison.
 
-###### Examples
+###### <a name="4.6.s2"></a>Examples
 The table below provides some example ISO 8601 durations. This list is not intended to be exhaustive. 
 
 <table>
 	<tr><th>Example</th><th>Explanation</th></tr>
-	<tr>
+	<tr id="4.6.s2.table1.row1">
 		<td>PT4H35M59.14S</td>
 		<td>Four hours, thirty five minutes and 59.14 seconds.</td>
 	</tr>
-	<tr>
+	<tr id="4.6.s2.table1.row2">
 		<td>P16559.14S</td>
 		<td>The same time period as above represented in seconds. 
 		(Note: if the time period in question contained a leap second, this conversion would be inaccurate)</td>
 	</tr>
-	<tr>
+	<tr id="4.6.s2.table1.row3">
 		<td>P3Y1M29DT4H35M59.14S</td>
 		<td>A duration also including years, months and days.</td>
 	</tr>
-	<tr>
+	<tr id="4.6.s2.table1.row4">
 		<td>P3Y</td>
 		<td>Approximately three years e.g. completion of a qualification.</td>
 	</tr>
-	<tr>
+	<tr id="4.6.s2.table1.row5">
 		<td>P4W</td>
 		<td>Four weeks. Note that weeks cannot be combined with other time periods. 'P4W1D' is not valid.</td>
 	</tr>
@@ -2106,10 +2105,10 @@ Durations are expected to be presented in the format in which they are recorded.
 in seconds (or fractions of a second) there is no need to convert this to hours, minutes and seconds. 
 
 <a name="append2"/>
-## Appendices
+## <a name="4.6.s3"></a>Appendices
 <a name="Appendix2A"/>  
  
-### Appendix A: Example statements
+### <a name="A">Appendix A</a>: Example statements
 
 Example of a simple statement (line breaks are for display purposes only):  
 ```
@@ -2316,12 +2315,12 @@ a statement returned by an LRS including the authority and stored properties set
 ```  
 <a name="Appendix2B"/>  
 
-### Appendix B: Example Statement objects of different types
+### <a name="B">Appendix B</a>: Example Statement objects of different types
 
 The Object of a Statement can be an Activity, an Agent, a Group or a Statement. 
 This appendix provides one example of each. 
 
-###### Activity
+###### <a name="B.s1"></a>Activity
 ```
 {
     "id": "http://www.example.co.uk/exampleactivity",
@@ -2340,7 +2339,7 @@ This appendix provides one example of each.
 }
 ```
 
-###### Agent
+###### <a name="B.s2"></a>Agent
 ```
 {
     "name": "Andrew Downes",
@@ -2349,7 +2348,7 @@ This appendix provides one example of each.
 }
 ```
 
-###### Group
+###### <a name="B.s3"></a>Group
 This example shows an Identified Group with members. 
 ```
 {
@@ -2375,7 +2374,7 @@ This example shows an Identified Group with members.
 ```
 
 
-###### Statement
+###### <a name="B.s4"></a>Statement
 This example shows a SubStatement Object whose object is a Statement Reference.
 
 ```
@@ -2400,9 +2399,9 @@ This example shows a SubStatement Object whose object is a Statement Reference.
 
 <a name="Appendix2C"/>  
 
-### Appendix C: Example definitions for Activities of type "cmi.interaction"
+### <a name="C">Appendix C</a>: Example definitions for Activities of type "cmi.interaction"
 
-###### true-false  
+###### <a name="C.s1"></a>true-false
 
 ```
 "definition": {
@@ -2417,7 +2416,7 @@ This example shows a SubStatement Object whose object is a Statement Reference.
 }
 ```
 
-###### choice  
+###### <a name="C.s2"></a>choice
 ```
 "definition": {
 	"description": {
@@ -2457,7 +2456,7 @@ This example shows a SubStatement Object whose object is a Statement Reference.
 }
 ```
 
-###### fill-in  
+###### <a name="C.s3"></a>fill-in
 ```
 "definition": {
 	"description": {
@@ -2471,7 +2470,7 @@ This example shows a SubStatement Object whose object is a Statement Reference.
 }
 ```
 
-###### long-fill-in  
+###### <a name="C.s4"></a>long-fill-in
 ```
 "definition": {
 	"description": {
@@ -2485,7 +2484,7 @@ This example shows a SubStatement Object whose object is a Statement Reference.
 }
 ```
 
-###### likert  
+###### <a name="C.s5"></a>likert
 ```
 "definition": {
 	"description": {
@@ -2525,7 +2524,7 @@ This example shows a SubStatement Object whose object is a Statement Reference.
 }
 ```
 
-###### matching  
+###### <a name="C.s6"></a>matching
 ```
 "definition": {
 	"description": {
@@ -2591,7 +2590,7 @@ This example shows a SubStatement Object whose object is a Statement Reference.
 }
 ```
 
-###### performance  
+###### <a name="C.s7"></a>performance
 ```
 "definition": {
 	"description": {
@@ -2625,7 +2624,7 @@ This example shows a SubStatement Object whose object is a Statement Reference.
 }
 ```
 
-###### sequencing  
+###### <a name="C.s8"></a>sequencing
 ```
 "definition": {
 	"description": {
@@ -2664,7 +2663,7 @@ This example shows a SubStatement Object whose object is a Statement Reference.
 }
 ```
 
-###### numeric  
+###### <a name="C.s9"></a>numeric
 ```
 "definition": {
 	"description": {
@@ -2680,7 +2679,7 @@ This example shows a SubStatement Object whose object is a Statement Reference.
 
 In this example the minimum correct answer is 4 and there is no maximum. 5, 6 or 976 would all be correct answers. 
 
-###### other  
+###### <a name="C.s10"></a>other
 ```
 "definition": {
 	"description": {
@@ -2696,7 +2695,7 @@ In this example the minimum correct answer is 4 and there is no maximum. 5, 6 or
 
 <a name="Appendix2D"/>
 
-### Appendix D: Example Signed Statement
+### <a name="D">Appendix D</a>: Example Signed Statement
 
 An example signed Statement, as described in: [4.4 Signed Statements](#signature).
 
